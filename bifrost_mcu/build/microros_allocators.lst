ARM GAS  /tmp/cczd9RdV.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"microros_allocators.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.microros_allocate,"ax",%progbits
  16              		.align	1
  17              		.global	microros_allocate
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	microros_allocate:
  25              	.LVL0:
  26              	.LFB0:
  27              		.file 1 "micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c"
   1:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** 
   2:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** #include <unistd.h>
   3:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** #include "cmsis_os.h"
   4:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** 
   5:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** int absoluteUsedMemory = 0;
   6:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** int usedMemory = 0;
   7:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** 
   8:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** void *pvPortMallocMicroROS( size_t xWantedSize );
   9:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** void vPortFreeMicroROS( void *pv );
  10:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** void *pvPortReallocMicroROS( void *pv, size_t xWantedSize );
  11:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** size_t getBlockSize( void *pv );
  12:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** void *pvPortCallocMicroROS( size_t num, size_t xWantedSize );
  13:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** 
  14:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** void * microros_allocate(size_t size, void * state){
  28              		.loc 1 14 52 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 14 52 is_stmt 0 view .LVU1
  33 0000 10B5     		push	{r4, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
  15:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   (void) state;
  38              		.loc 1 15 3 is_stmt 1 view .LVU2
  16:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   // printf("-- Alloc %d (prev: %d B)\n",size, xPortGetFreeHeapSize());
  17:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   absoluteUsedMemory += size;
  39              		.loc 1 17 3 view .LVU3
  40              		.loc 1 17 22 is_stmt 0 view .LVU4
  41 0002 054A     		ldr	r2, .L2
ARM GAS  /tmp/cczd9RdV.s 			page 2


  42 0004 1368     		ldr	r3, [r2]
  43 0006 1B18     		adds	r3, r3, r0
  44 0008 1360     		str	r3, [r2]
  18:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   usedMemory += size;
  45              		.loc 1 18 3 is_stmt 1 view .LVU5
  46              		.loc 1 18 14 is_stmt 0 view .LVU6
  47 000a 044A     		ldr	r2, .L2+4
  48 000c 1368     		ldr	r3, [r2]
  49 000e 1B18     		adds	r3, r3, r0
  50 0010 1360     		str	r3, [r2]
  19:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   return pvPortMallocMicroROS(size);
  51              		.loc 1 19 3 is_stmt 1 view .LVU7
  52              		.loc 1 19 10 is_stmt 0 view .LVU8
  53 0012 FFF7FEFF 		bl	pvPortMallocMicroROS
  54              	.LVL1:
  20:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** }
  55              		.loc 1 20 1 view .LVU9
  56              		@ sp needed
  57 0016 10BD     		pop	{r4, pc}
  58              	.L3:
  59              		.align	2
  60              	.L2:
  61 0018 00000000 		.word	.LANCHOR0
  62 001c 00000000 		.word	.LANCHOR1
  63              		.cfi_endproc
  64              	.LFE0:
  66              		.section	.text.microros_deallocate,"ax",%progbits
  67              		.align	1
  68              		.global	microros_deallocate
  69              		.syntax unified
  70              		.code	16
  71              		.thumb_func
  72              		.fpu softvfp
  74              	microros_deallocate:
  75              	.LVL2:
  76              	.LFB1:
  21:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** 
  22:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** void microros_deallocate(void * pointer, void * state){
  77              		.loc 1 22 55 is_stmt 1 view -0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              		.loc 1 22 55 is_stmt 0 view .LVU11
  82 0000 10B5     		push	{r4, lr}
  83              	.LCFI1:
  84              		.cfi_def_cfa_offset 8
  85              		.cfi_offset 4, -8
  86              		.cfi_offset 14, -4
  87 0002 041E     		subs	r4, r0, #0
  23:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   (void) state;
  88              		.loc 1 23 3 is_stmt 1 view .LVU12
  24:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   // printf("-- Free %d (prev: %d B)\n",getBlockSize(pointer), xPortGetFreeHeapSize());
  25:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   if (NULL != pointer){
  89              		.loc 1 25 3 view .LVU13
  90              		.loc 1 25 6 is_stmt 0 view .LVU14
  91 0004 08D0     		beq	.L4
  26:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****     usedMemory -= getBlockSize(pointer);
ARM GAS  /tmp/cczd9RdV.s 			page 3


  92              		.loc 1 26 5 is_stmt 1 view .LVU15
  93              		.loc 1 26 19 is_stmt 0 view .LVU16
  94 0006 FFF7FEFF 		bl	getBlockSize
  95              	.LVL3:
  96              		.loc 1 26 16 view .LVU17
  97 000a 044B     		ldr	r3, .L6
  98 000c 1A68     		ldr	r2, [r3]
  99 000e 101A     		subs	r0, r2, r0
 100 0010 1860     		str	r0, [r3]
  27:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****     vPortFreeMicroROS(pointer);
 101              		.loc 1 27 5 is_stmt 1 view .LVU18
 102 0012 2000     		movs	r0, r4
 103 0014 FFF7FEFF 		bl	vPortFreeMicroROS
 104              	.LVL4:
 105              	.L4:
  28:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   }
  29:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** }
 106              		.loc 1 29 1 is_stmt 0 view .LVU19
 107              		@ sp needed
 108              	.LVL5:
 109              		.loc 1 29 1 view .LVU20
 110 0018 10BD     		pop	{r4, pc}
 111              	.L7:
 112 001a C046     		.align	2
 113              	.L6:
 114 001c 00000000 		.word	.LANCHOR1
 115              		.cfi_endproc
 116              	.LFE1:
 118              		.section	.text.microros_reallocate,"ax",%progbits
 119              		.align	1
 120              		.global	microros_reallocate
 121              		.syntax unified
 122              		.code	16
 123              		.thumb_func
 124              		.fpu softvfp
 126              	microros_reallocate:
 127              	.LVL6:
 128              	.LFB2:
  30:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** 
  31:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** void * microros_reallocate(void * pointer, size_t size, void * state){
 129              		.loc 1 31 70 is_stmt 1 view -0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		.loc 1 31 70 is_stmt 0 view .LVU22
 134 0000 70B5     		push	{r4, r5, r6, lr}
 135              	.LCFI2:
 136              		.cfi_def_cfa_offset 16
 137              		.cfi_offset 4, -16
 138              		.cfi_offset 5, -12
 139              		.cfi_offset 6, -8
 140              		.cfi_offset 14, -4
 141 0002 0500     		movs	r5, r0
 142 0004 0C00     		movs	r4, r1
  32:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   (void) state;
 143              		.loc 1 32 3 is_stmt 1 view .LVU23
  33:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   // printf("-- Realloc %d -> %d (prev: %d B)\n",getBlockSize(pointer),size, xPortGetFreeHeapSize()
ARM GAS  /tmp/cczd9RdV.s 			page 4


  34:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   absoluteUsedMemory += size;
 144              		.loc 1 34 3 view .LVU24
 145              		.loc 1 34 22 is_stmt 0 view .LVU25
 146 0006 0C4A     		ldr	r2, .L12
 147              	.LVL7:
 148              		.loc 1 34 22 view .LVU26
 149 0008 1368     		ldr	r3, [r2]
 150 000a 5B18     		adds	r3, r3, r1
 151 000c 1360     		str	r3, [r2]
  35:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   usedMemory += size;
 152              		.loc 1 35 3 is_stmt 1 view .LVU27
 153              		.loc 1 35 14 is_stmt 0 view .LVU28
 154 000e 0B4A     		ldr	r2, .L12+4
 155 0010 1368     		ldr	r3, [r2]
 156 0012 5B18     		adds	r3, r3, r1
 157 0014 1360     		str	r3, [r2]
  36:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   if (NULL == pointer){
 158              		.loc 1 36 3 is_stmt 1 view .LVU29
 159              		.loc 1 36 6 is_stmt 0 view .LVU30
 160 0016 0028     		cmp	r0, #0
 161 0018 0AD0     		beq	.L11
  37:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****     return pvPortMallocMicroROS(size);
  38:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   } else {
  39:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****     usedMemory -= getBlockSize(pointer);
 162              		.loc 1 39 5 is_stmt 1 view .LVU31
 163              		.loc 1 39 19 is_stmt 0 view .LVU32
 164 001a FFF7FEFF 		bl	getBlockSize
 165              	.LVL8:
 166              		.loc 1 39 16 view .LVU33
 167 001e 074B     		ldr	r3, .L12+4
 168 0020 1A68     		ldr	r2, [r3]
 169 0022 101A     		subs	r0, r2, r0
 170 0024 1860     		str	r0, [r3]
  40:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****     return pvPortReallocMicroROS(pointer,size);
 171              		.loc 1 40 5 is_stmt 1 view .LVU34
 172              		.loc 1 40 12 is_stmt 0 view .LVU35
 173 0026 2100     		movs	r1, r4
 174 0028 2800     		movs	r0, r5
 175 002a FFF7FEFF 		bl	pvPortReallocMicroROS
 176              	.LVL9:
 177              	.L8:
  41:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   }
  42:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** }
 178              		.loc 1 42 1 view .LVU36
 179              		@ sp needed
 180              	.LVL10:
 181              	.LVL11:
 182              		.loc 1 42 1 view .LVU37
 183 002e 70BD     		pop	{r4, r5, r6, pc}
 184              	.LVL12:
 185              	.L11:
  37:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   } else {
 186              		.loc 1 37 5 is_stmt 1 view .LVU38
  37:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   } else {
 187              		.loc 1 37 12 is_stmt 0 view .LVU39
 188 0030 0800     		movs	r0, r1
 189              	.LVL13:
ARM GAS  /tmp/cczd9RdV.s 			page 5


  37:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   } else {
 190              		.loc 1 37 12 view .LVU40
 191 0032 FFF7FEFF 		bl	pvPortMallocMicroROS
 192              	.LVL14:
  37:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   } else {
 193              		.loc 1 37 12 view .LVU41
 194 0036 FAE7     		b	.L8
 195              	.L13:
 196              		.align	2
 197              	.L12:
 198 0038 00000000 		.word	.LANCHOR0
 199 003c 00000000 		.word	.LANCHOR1
 200              		.cfi_endproc
 201              	.LFE2:
 203              		.section	.text.microros_zero_allocate,"ax",%progbits
 204              		.align	1
 205              		.global	microros_zero_allocate
 206              		.syntax unified
 207              		.code	16
 208              		.thumb_func
 209              		.fpu softvfp
 211              	microros_zero_allocate:
 212              	.LVL15:
 213              	.LFB3:
  43:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** 
  44:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** void * microros_zero_allocate(size_t number_of_elements, size_t size_of_element, void * state){
 214              		.loc 1 44 95 is_stmt 1 view -0
 215              		.cfi_startproc
 216              		@ args = 0, pretend = 0, frame = 0
 217              		@ frame_needed = 0, uses_anonymous_args = 0
 218              		.loc 1 44 95 is_stmt 0 view .LVU43
 219 0000 10B5     		push	{r4, lr}
 220              	.LCFI3:
 221              		.cfi_def_cfa_offset 8
 222              		.cfi_offset 4, -8
 223              		.cfi_offset 14, -4
  45:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   (void) state;
 224              		.loc 1 45 3 is_stmt 1 view .LVU44
  46:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   // printf("-- Calloc %d x %d = %d -> (prev: %d B)\n",number_of_elements,size_of_element, number_o
  47:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   absoluteUsedMemory += number_of_elements*size_of_element;
 225              		.loc 1 47 3 view .LVU45
 226              		.loc 1 47 43 is_stmt 0 view .LVU46
 227 0002 0B00     		movs	r3, r1
 228 0004 4343     		muls	r3, r0
 229              		.loc 1 47 22 view .LVU47
 230 0006 064C     		ldr	r4, .L15
 231 0008 2268     		ldr	r2, [r4]
 232              	.LVL16:
 233              		.loc 1 47 22 view .LVU48
 234 000a D218     		adds	r2, r2, r3
 235 000c 2260     		str	r2, [r4]
  48:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   usedMemory += number_of_elements*size_of_element;
 236              		.loc 1 48 3 is_stmt 1 view .LVU49
 237              		.loc 1 48 14 is_stmt 0 view .LVU50
 238 000e 054A     		ldr	r2, .L15+4
 239 0010 1468     		ldr	r4, [r2]
 240 0012 A446     		mov	ip, r4
ARM GAS  /tmp/cczd9RdV.s 			page 6


 241 0014 6344     		add	r3, r3, ip
 242 0016 1360     		str	r3, [r2]
  49:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c ****   return pvPortCallocMicroROS(number_of_elements,size_of_element);
 243              		.loc 1 49 3 is_stmt 1 view .LVU51
 244              		.loc 1 49 10 is_stmt 0 view .LVU52
 245 0018 FFF7FEFF 		bl	pvPortCallocMicroROS
 246              	.LVL17:
  50:micro_ros_stm32cubemx_utils/extra_sources/microros_allocators.c **** }...
 247              		.loc 1 50 1 view .LVU53
 248              		@ sp needed
 249 001c 10BD     		pop	{r4, pc}
 250              	.L16:
 251 001e C046     		.align	2
 252              	.L15:
 253 0020 00000000 		.word	.LANCHOR0
 254 0024 00000000 		.word	.LANCHOR1
 255              		.cfi_endproc
 256              	.LFE3:
 258              		.global	usedMemory
 259              		.global	absoluteUsedMemory
 260              		.section	.bss.absoluteUsedMemory,"aw",%nobits
 261              		.align	2
 262              		.set	.LANCHOR0,. + 0
 265              	absoluteUsedMemory:
 266 0000 00000000 		.space	4
 267              		.section	.bss.usedMemory,"aw",%nobits
 268              		.align	2
 269              		.set	.LANCHOR1,. + 0
 272              	usedMemory:
 273 0000 00000000 		.space	4
 274              		.text
 275              	.Letext0:
 276              		.file 2 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
ARM GAS  /tmp/cczd9RdV.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 microros_allocators.c
     /tmp/cczd9RdV.s:16     .text.microros_allocate:0000000000000000 $t
     /tmp/cczd9RdV.s:24     .text.microros_allocate:0000000000000000 microros_allocate
     /tmp/cczd9RdV.s:61     .text.microros_allocate:0000000000000018 $d
     /tmp/cczd9RdV.s:67     .text.microros_deallocate:0000000000000000 $t
     /tmp/cczd9RdV.s:74     .text.microros_deallocate:0000000000000000 microros_deallocate
     /tmp/cczd9RdV.s:114    .text.microros_deallocate:000000000000001c $d
     /tmp/cczd9RdV.s:119    .text.microros_reallocate:0000000000000000 $t
     /tmp/cczd9RdV.s:126    .text.microros_reallocate:0000000000000000 microros_reallocate
     /tmp/cczd9RdV.s:198    .text.microros_reallocate:0000000000000038 $d
     /tmp/cczd9RdV.s:204    .text.microros_zero_allocate:0000000000000000 $t
     /tmp/cczd9RdV.s:211    .text.microros_zero_allocate:0000000000000000 microros_zero_allocate
     /tmp/cczd9RdV.s:253    .text.microros_zero_allocate:0000000000000020 $d
     /tmp/cczd9RdV.s:272    .bss.usedMemory:0000000000000000 usedMemory
     /tmp/cczd9RdV.s:265    .bss.absoluteUsedMemory:0000000000000000 absoluteUsedMemory
     /tmp/cczd9RdV.s:261    .bss.absoluteUsedMemory:0000000000000000 $d
     /tmp/cczd9RdV.s:268    .bss.usedMemory:0000000000000000 $d

UNDEFINED SYMBOLS
pvPortMallocMicroROS
getBlockSize
vPortFreeMicroROS
pvPortReallocMicroROS
pvPortCallocMicroROS
