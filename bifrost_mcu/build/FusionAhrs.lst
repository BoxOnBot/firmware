ARM GAS  /tmp/ccEJb272.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"FusionAhrs.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.FusionAhrsReset,"ax",%progbits
  16              		.align	1
  17              		.global	FusionAhrsReset
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	FusionAhrsReset:
  25              	.LVL0:
  26              	.LFB22:
  27              		.file 1 "Core/Src/Fusion/FusionAhrs.c"
   1:Core/Src/Fusion/FusionAhrs.c **** /**
   2:Core/Src/Fusion/FusionAhrs.c ****  * @file FusionAhrs.c
   3:Core/Src/Fusion/FusionAhrs.c ****  * @author Seb Madgwick
   4:Core/Src/Fusion/FusionAhrs.c ****  * @brief AHRS algorithm to combine gyroscope, accelerometer, and magnetometer
   5:Core/Src/Fusion/FusionAhrs.c ****  * measurements into a single measurement of orientation relative to the Earth.
   6:Core/Src/Fusion/FusionAhrs.c ****  */
   7:Core/Src/Fusion/FusionAhrs.c **** 
   8:Core/Src/Fusion/FusionAhrs.c **** //------------------------------------------------------------------------------
   9:Core/Src/Fusion/FusionAhrs.c **** // Includes
  10:Core/Src/Fusion/FusionAhrs.c **** 
  11:Core/Src/Fusion/FusionAhrs.c **** #include <float.h> // FLT_MAX
  12:Core/Src/Fusion/FusionAhrs.c **** #include "FusionAhrs.h"
  13:Core/Src/Fusion/FusionAhrs.c **** #include "FusionCompass.h"
  14:Core/Src/Fusion/FusionAhrs.c **** #include <math.h> // atan2f, cosf, powf, sinf
  15:Core/Src/Fusion/FusionAhrs.c **** 
  16:Core/Src/Fusion/FusionAhrs.c **** //------------------------------------------------------------------------------
  17:Core/Src/Fusion/FusionAhrs.c **** // Definitions
  18:Core/Src/Fusion/FusionAhrs.c **** 
  19:Core/Src/Fusion/FusionAhrs.c **** /**
  20:Core/Src/Fusion/FusionAhrs.c ****  * @brief Initial gain used during the initialisation.
  21:Core/Src/Fusion/FusionAhrs.c ****  */
  22:Core/Src/Fusion/FusionAhrs.c **** #define INITIAL_GAIN (10.0f)
  23:Core/Src/Fusion/FusionAhrs.c **** 
  24:Core/Src/Fusion/FusionAhrs.c **** /**
  25:Core/Src/Fusion/FusionAhrs.c ****  * @brief Initialisation period in seconds.
  26:Core/Src/Fusion/FusionAhrs.c ****  */
  27:Core/Src/Fusion/FusionAhrs.c **** #define INITIALISATION_PERIOD (3.0f)
  28:Core/Src/Fusion/FusionAhrs.c **** 
  29:Core/Src/Fusion/FusionAhrs.c **** //------------------------------------------------------------------------------
  30:Core/Src/Fusion/FusionAhrs.c **** // Functions
  31:Core/Src/Fusion/FusionAhrs.c **** 
ARM GAS  /tmp/ccEJb272.s 			page 2


  32:Core/Src/Fusion/FusionAhrs.c **** /**
  33:Core/Src/Fusion/FusionAhrs.c ****  * @brief Initialises the AHRS algorithm structure.
  34:Core/Src/Fusion/FusionAhrs.c ****  * @param ahrs AHRS algorithm structure.
  35:Core/Src/Fusion/FusionAhrs.c ****  */
  36:Core/Src/Fusion/FusionAhrs.c **** void FusionAhrsInitialise(FusionAhrs *const ahrs) {
  37:Core/Src/Fusion/FusionAhrs.c ****     const FusionAhrsSettings settings = {
  38:Core/Src/Fusion/FusionAhrs.c ****             .gain = 0.5f,
  39:Core/Src/Fusion/FusionAhrs.c ****             .accelerationRejection = 90.0f,
  40:Core/Src/Fusion/FusionAhrs.c ****             .magneticRejection = 90.0f,
  41:Core/Src/Fusion/FusionAhrs.c ****             .rejectionTimeout = 0,
  42:Core/Src/Fusion/FusionAhrs.c ****     };
  43:Core/Src/Fusion/FusionAhrs.c ****     FusionAhrsSetSettings(ahrs, &settings);
  44:Core/Src/Fusion/FusionAhrs.c ****     FusionAhrsReset(ahrs);
  45:Core/Src/Fusion/FusionAhrs.c **** }
  46:Core/Src/Fusion/FusionAhrs.c **** 
  47:Core/Src/Fusion/FusionAhrs.c **** /**
  48:Core/Src/Fusion/FusionAhrs.c ****  * @brief Resets the AHRS algorithm.  This is equivalent to reinitialising the
  49:Core/Src/Fusion/FusionAhrs.c ****  * algorithm while maintaining the current settings.
  50:Core/Src/Fusion/FusionAhrs.c ****  * @param ahrs AHRS algorithm structure.
  51:Core/Src/Fusion/FusionAhrs.c ****  */
  52:Core/Src/Fusion/FusionAhrs.c **** void FusionAhrsReset(FusionAhrs *const ahrs) {
  28              		.loc 1 52 46 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  53:Core/Src/Fusion/FusionAhrs.c ****     ahrs->quaternion = FUSION_IDENTITY_QUATERNION;
  33              		.loc 1 53 5 view .LVU1
  34              		.loc 1 53 22 is_stmt 0 view .LVU2
  35 0000 FE23     		movs	r3, #254
  36 0002 9B05     		lsls	r3, r3, #22
  37 0004 0361     		str	r3, [r0, #16]
  38 0006 0023     		movs	r3, #0
  39 0008 4361     		str	r3, [r0, #20]
  40 000a 8361     		str	r3, [r0, #24]
  41 000c C361     		str	r3, [r0, #28]
  54:Core/Src/Fusion/FusionAhrs.c ****     ahrs->accelerometer = FUSION_VECTOR_ZERO;
  42              		.loc 1 54 5 is_stmt 1 view .LVU3
  43              		.loc 1 54 25 is_stmt 0 view .LVU4
  44 000e 0362     		str	r3, [r0, #32]
  45 0010 4362     		str	r3, [r0, #36]
  46 0012 8362     		str	r3, [r0, #40]
  55:Core/Src/Fusion/FusionAhrs.c ****     ahrs->initialising = true;
  47              		.loc 1 55 5 is_stmt 1 view .LVU5
  48              		.loc 1 55 24 is_stmt 0 view .LVU6
  49 0014 2C22     		movs	r2, #44
  50 0016 0121     		movs	r1, #1
  51 0018 8154     		strb	r1, [r0, r2]
  56:Core/Src/Fusion/FusionAhrs.c ****     ahrs->rampedGain = INITIAL_GAIN;
  52              		.loc 1 56 5 is_stmt 1 view .LVU7
  53              		.loc 1 56 22 is_stmt 0 view .LVU8
  54 001a 0A4A     		ldr	r2, .L2
  55 001c 0263     		str	r2, [r0, #48]
  57:Core/Src/Fusion/FusionAhrs.c ****     ahrs->halfAccelerometerFeedback = FUSION_VECTOR_ZERO;
  56              		.loc 1 57 5 is_stmt 1 view .LVU9
  57              		.loc 1 57 37 is_stmt 0 view .LVU10
  58 001e 8363     		str	r3, [r0, #56]
ARM GAS  /tmp/ccEJb272.s 			page 3


  59 0020 C363     		str	r3, [r0, #60]
  60 0022 0364     		str	r3, [r0, #64]
  58:Core/Src/Fusion/FusionAhrs.c ****     ahrs->halfMagnetometerFeedback = FUSION_VECTOR_ZERO;
  61              		.loc 1 58 5 is_stmt 1 view .LVU11
  62              		.loc 1 58 36 is_stmt 0 view .LVU12
  63 0024 4364     		str	r3, [r0, #68]
  64 0026 8364     		str	r3, [r0, #72]
  65 0028 C364     		str	r3, [r0, #76]
  59:Core/Src/Fusion/FusionAhrs.c ****     ahrs->accelerometerIgnored = false;
  66              		.loc 1 59 5 is_stmt 1 view .LVU13
  67              		.loc 1 59 32 is_stmt 0 view .LVU14
  68 002a 0023     		movs	r3, #0
  69 002c 5022     		movs	r2, #80
  70 002e 8354     		strb	r3, [r0, r2]
  60:Core/Src/Fusion/FusionAhrs.c ****     ahrs->accelerationRejectionTimer = 0;
  71              		.loc 1 60 5 is_stmt 1 view .LVU15
  72              		.loc 1 60 38 is_stmt 0 view .LVU16
  73 0030 4365     		str	r3, [r0, #84]
  61:Core/Src/Fusion/FusionAhrs.c ****     ahrs->accelerationRejectionTimeout = false;
  74              		.loc 1 61 5 is_stmt 1 view .LVU17
  75              		.loc 1 61 40 is_stmt 0 view .LVU18
  76 0032 0832     		adds	r2, r2, #8
  77 0034 8354     		strb	r3, [r0, r2]
  62:Core/Src/Fusion/FusionAhrs.c ****     ahrs->magnetometerIgnored = false;
  78              		.loc 1 62 5 is_stmt 1 view .LVU19
  79              		.loc 1 62 31 is_stmt 0 view .LVU20
  80 0036 0132     		adds	r2, r2, #1
  81 0038 8354     		strb	r3, [r0, r2]
  63:Core/Src/Fusion/FusionAhrs.c ****     ahrs->magneticRejectionTimer = 0;
  82              		.loc 1 63 5 is_stmt 1 view .LVU21
  83              		.loc 1 63 34 is_stmt 0 view .LVU22
  84 003a C365     		str	r3, [r0, #92]
  64:Core/Src/Fusion/FusionAhrs.c ****     ahrs->magneticRejectionTimeout = false;
  85              		.loc 1 64 5 is_stmt 1 view .LVU23
  86              		.loc 1 64 36 is_stmt 0 view .LVU24
  87 003c 0732     		adds	r2, r2, #7
  88 003e 8354     		strb	r3, [r0, r2]
  65:Core/Src/Fusion/FusionAhrs.c **** }
  89              		.loc 1 65 1 view .LVU25
  90              		@ sp needed
  91 0040 7047     		bx	lr
  92              	.L3:
  93 0042 C046     		.align	2
  94              	.L2:
  95 0044 00002041 		.word	1092616192
  96              		.cfi_endproc
  97              	.LFE22:
  99              		.global	__aeabi_fcmpeq
 100              		.global	__aeabi_fmul
 101              		.global	__aeabi_fsub
 102              		.global	__aeabi_fdiv
 103              		.section	.text.FusionAhrsSetSettings,"ax",%progbits
 104              		.align	1
 105              		.global	FusionAhrsSetSettings
 106              		.syntax unified
 107              		.code	16
 108              		.thumb_func
ARM GAS  /tmp/ccEJb272.s 			page 4


 109              		.fpu softvfp
 111              	FusionAhrsSetSettings:
 112              	.LVL1:
 113              	.LFB23:
  66:Core/Src/Fusion/FusionAhrs.c **** 
  67:Core/Src/Fusion/FusionAhrs.c **** /**
  68:Core/Src/Fusion/FusionAhrs.c ****  * @brief Sets the AHRS algorithm settings.
  69:Core/Src/Fusion/FusionAhrs.c ****  * @param ahrs AHRS algorithm structure.
  70:Core/Src/Fusion/FusionAhrs.c ****  * @param settings Settings.
  71:Core/Src/Fusion/FusionAhrs.c ****  */
  72:Core/Src/Fusion/FusionAhrs.c **** void FusionAhrsSetSettings(FusionAhrs *const ahrs, const FusionAhrsSettings *const settings) {
 114              		.loc 1 72 94 is_stmt 1 view -0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 0
 117              		@ frame_needed = 0, uses_anonymous_args = 0
 118              		.loc 1 72 94 is_stmt 0 view .LVU27
 119 0000 70B5     		push	{r4, r5, r6, lr}
 120              	.LCFI0:
 121              		.cfi_def_cfa_offset 16
 122              		.cfi_offset 4, -16
 123              		.cfi_offset 5, -12
 124              		.cfi_offset 6, -8
 125              		.cfi_offset 14, -4
 126 0002 0400     		movs	r4, r0
 127 0004 0D00     		movs	r5, r1
  73:Core/Src/Fusion/FusionAhrs.c ****     ahrs->settings.gain = settings->gain;
 128              		.loc 1 73 5 is_stmt 1 view .LVU28
 129              		.loc 1 73 25 is_stmt 0 view .LVU29
 130 0006 0B68     		ldr	r3, [r1]
 131 0008 0360     		str	r3, [r0]
  74:Core/Src/Fusion/FusionAhrs.c ****     if ((settings->accelerationRejection == 0.0f) || (settings->rejectionTimeout == 0)) {
 132              		.loc 1 74 5 is_stmt 1 view .LVU30
 133              		.loc 1 74 18 is_stmt 0 view .LVU31
 134 000a 4E68     		ldr	r6, [r1, #4]
 135              		.loc 1 74 8 view .LVU32
 136 000c 0021     		movs	r1, #0
 137              	.LVL2:
 138              		.loc 1 74 8 view .LVU33
 139 000e 301C     		adds	r0, r6, #0
 140              	.LVL3:
 141              		.loc 1 74 8 view .LVU34
 142 0010 FFF7FEFF 		bl	__aeabi_fcmpeq
 143              	.LVL4:
 144 0014 0028     		cmp	r0, #0
 145 0016 02D1     		bne	.L5
 146              		.loc 1 74 51 discriminator 1 view .LVU35
 147 0018 EB68     		ldr	r3, [r5, #12]
 148 001a 002B     		cmp	r3, #0
 149 001c 1ED1     		bne	.L6
 150              	.L5:
  75:Core/Src/Fusion/FusionAhrs.c ****         ahrs->settings.accelerationRejection = FLT_MAX;
 151              		.loc 1 75 9 is_stmt 1 view .LVU36
 152              		.loc 1 75 46 is_stmt 0 view .LVU37
 153 001e 1F4B     		ldr	r3, .L12
 154 0020 6360     		str	r3, [r4, #4]
 155              	.L7:
  76:Core/Src/Fusion/FusionAhrs.c ****     } else {
ARM GAS  /tmp/ccEJb272.s 			page 5


  77:Core/Src/Fusion/FusionAhrs.c ****         ahrs->settings.accelerationRejection = powf(0.5f * sinf(FusionDegreesToRadians(settings->ac
  78:Core/Src/Fusion/FusionAhrs.c ****     }
  79:Core/Src/Fusion/FusionAhrs.c ****     if ((settings->magneticRejection == 0.0f) || (settings->rejectionTimeout == 0)) {
 156              		.loc 1 79 5 is_stmt 1 view .LVU38
 157              		.loc 1 79 18 is_stmt 0 view .LVU39
 158 0022 AE68     		ldr	r6, [r5, #8]
 159              		.loc 1 79 8 view .LVU40
 160 0024 0021     		movs	r1, #0
 161 0026 301C     		adds	r0, r6, #0
 162 0028 FFF7FEFF 		bl	__aeabi_fcmpeq
 163              	.LVL5:
 164 002c 0028     		cmp	r0, #0
 165 002e 02D1     		bne	.L8
 166              		.loc 1 79 47 discriminator 1 view .LVU41
 167 0030 EB68     		ldr	r3, [r5, #12]
 168 0032 002B     		cmp	r3, #0
 169 0034 22D1     		bne	.L9
 170              	.L8:
  80:Core/Src/Fusion/FusionAhrs.c ****         ahrs->settings.magneticRejection = FLT_MAX;
 171              		.loc 1 80 9 is_stmt 1 view .LVU42
 172              		.loc 1 80 42 is_stmt 0 view .LVU43
 173 0036 194B     		ldr	r3, .L12
 174 0038 A360     		str	r3, [r4, #8]
 175              	.L10:
  81:Core/Src/Fusion/FusionAhrs.c ****     } else {
  82:Core/Src/Fusion/FusionAhrs.c ****         ahrs->settings.magneticRejection = powf(0.5f * sinf(FusionDegreesToRadians(settings->magnet
  83:Core/Src/Fusion/FusionAhrs.c ****     }
  84:Core/Src/Fusion/FusionAhrs.c ****     ahrs->settings.rejectionTimeout = settings->rejectionTimeout;
 176              		.loc 1 84 5 is_stmt 1 view .LVU44
 177              		.loc 1 84 47 is_stmt 0 view .LVU45
 178 003a EB68     		ldr	r3, [r5, #12]
 179 003c E360     		str	r3, [r4, #12]
  85:Core/Src/Fusion/FusionAhrs.c ****     if (ahrs->initialising == false) {
 180              		.loc 1 85 5 is_stmt 1 view .LVU46
 181              		.loc 1 85 13 is_stmt 0 view .LVU47
 182 003e 2C23     		movs	r3, #44
 183 0040 E35C     		ldrb	r3, [r4, r3]
 184              		.loc 1 85 8 view .LVU48
 185 0042 002B     		cmp	r3, #0
 186 0044 01D1     		bne	.L11
  86:Core/Src/Fusion/FusionAhrs.c ****         ahrs->rampedGain = ahrs->settings.gain;
 187              		.loc 1 86 9 is_stmt 1 view .LVU49
 188              		.loc 1 86 26 is_stmt 0 view .LVU50
 189 0046 2368     		ldr	r3, [r4]
 190 0048 2363     		str	r3, [r4, #48]
 191              	.L11:
  87:Core/Src/Fusion/FusionAhrs.c ****     }
  88:Core/Src/Fusion/FusionAhrs.c ****     ahrs->rampedGainStep = (INITIAL_GAIN - ahrs->settings.gain) / INITIALISATION_PERIOD;
 192              		.loc 1 88 5 is_stmt 1 view .LVU51
 193              		.loc 1 88 42 is_stmt 0 view .LVU52
 194 004a 2168     		ldr	r1, [r4]
 195 004c 1448     		ldr	r0, .L12+4
 196 004e FFF7FEFF 		bl	__aeabi_fsub
 197              	.LVL6:
 198              		.loc 1 88 65 view .LVU53
 199 0052 1449     		ldr	r1, .L12+8
 200 0054 FFF7FEFF 		bl	__aeabi_fdiv
ARM GAS  /tmp/ccEJb272.s 			page 6


 201              	.LVL7:
 202              		.loc 1 88 26 view .LVU54
 203 0058 6063     		str	r0, [r4, #52]
  89:Core/Src/Fusion/FusionAhrs.c **** }
 204              		.loc 1 89 1 view .LVU55
 205              		@ sp needed
 206              	.LVL8:
 207              	.LVL9:
 208              		.loc 1 89 1 view .LVU56
 209 005a 70BD     		pop	{r4, r5, r6, pc}
 210              	.LVL10:
 211              	.L6:
  77:Core/Src/Fusion/FusionAhrs.c ****     }
 212              		.loc 1 77 9 is_stmt 1 view .LVU57
 213              	.LBB46:
 214              	.LBI46:
 215              		.file 2 "Core/Inc/Fusion/FusionMath.h"
   1:Core/Inc/Fusion/FusionMath.h **** /**
   2:Core/Inc/Fusion/FusionMath.h ****  * @file FusionMath.h
   3:Core/Inc/Fusion/FusionMath.h ****  * @author Seb Madgwick
   4:Core/Inc/Fusion/FusionMath.h ****  * @brief Math library.
   5:Core/Inc/Fusion/FusionMath.h ****  */
   6:Core/Inc/Fusion/FusionMath.h **** 
   7:Core/Inc/Fusion/FusionMath.h **** #ifndef FUSION_MATH_H
   8:Core/Inc/Fusion/FusionMath.h **** #define FUSION_MATH_H
   9:Core/Inc/Fusion/FusionMath.h **** 
  10:Core/Inc/Fusion/FusionMath.h **** //------------------------------------------------------------------------------
  11:Core/Inc/Fusion/FusionMath.h **** // Includes
  12:Core/Inc/Fusion/FusionMath.h **** 
  13:Core/Inc/Fusion/FusionMath.h **** #include <math.h> // M_PI, sqrtf, atan2f, asinf
  14:Core/Inc/Fusion/FusionMath.h **** #include <stdbool.h>
  15:Core/Inc/Fusion/FusionMath.h **** #include <stdint.h>
  16:Core/Inc/Fusion/FusionMath.h **** 
  17:Core/Inc/Fusion/FusionMath.h **** //------------------------------------------------------------------------------
  18:Core/Inc/Fusion/FusionMath.h **** // Definitions
  19:Core/Inc/Fusion/FusionMath.h **** 
  20:Core/Inc/Fusion/FusionMath.h **** /**
  21:Core/Inc/Fusion/FusionMath.h ****  * @brief 3D vector.
  22:Core/Inc/Fusion/FusionMath.h ****  */
  23:Core/Inc/Fusion/FusionMath.h **** typedef union {
  24:Core/Inc/Fusion/FusionMath.h ****     float array[3];
  25:Core/Inc/Fusion/FusionMath.h **** 
  26:Core/Inc/Fusion/FusionMath.h ****     struct {
  27:Core/Inc/Fusion/FusionMath.h ****         float x;
  28:Core/Inc/Fusion/FusionMath.h ****         float y;
  29:Core/Inc/Fusion/FusionMath.h ****         float z;
  30:Core/Inc/Fusion/FusionMath.h ****     } axis;
  31:Core/Inc/Fusion/FusionMath.h **** } FusionVector;
  32:Core/Inc/Fusion/FusionMath.h **** 
  33:Core/Inc/Fusion/FusionMath.h **** /**
  34:Core/Inc/Fusion/FusionMath.h ****  * @brief Quaternion.
  35:Core/Inc/Fusion/FusionMath.h ****  */
  36:Core/Inc/Fusion/FusionMath.h **** typedef union {
  37:Core/Inc/Fusion/FusionMath.h ****     float array[4];
  38:Core/Inc/Fusion/FusionMath.h **** 
  39:Core/Inc/Fusion/FusionMath.h ****     struct {
  40:Core/Inc/Fusion/FusionMath.h ****         float w;
ARM GAS  /tmp/ccEJb272.s 			page 7


  41:Core/Inc/Fusion/FusionMath.h ****         float x;
  42:Core/Inc/Fusion/FusionMath.h ****         float y;
  43:Core/Inc/Fusion/FusionMath.h ****         float z;
  44:Core/Inc/Fusion/FusionMath.h ****     } element;
  45:Core/Inc/Fusion/FusionMath.h **** } FusionQuaternion;
  46:Core/Inc/Fusion/FusionMath.h **** 
  47:Core/Inc/Fusion/FusionMath.h **** /**
  48:Core/Inc/Fusion/FusionMath.h ****  * @brief 3x3 matrix in row-major order.
  49:Core/Inc/Fusion/FusionMath.h ****  * See http://en.wikipedia.org/wiki/Row-major_order
  50:Core/Inc/Fusion/FusionMath.h ****  */
  51:Core/Inc/Fusion/FusionMath.h **** typedef union {
  52:Core/Inc/Fusion/FusionMath.h ****     float array[3][3];
  53:Core/Inc/Fusion/FusionMath.h **** 
  54:Core/Inc/Fusion/FusionMath.h ****     struct {
  55:Core/Inc/Fusion/FusionMath.h ****         float xx;
  56:Core/Inc/Fusion/FusionMath.h ****         float xy;
  57:Core/Inc/Fusion/FusionMath.h ****         float xz;
  58:Core/Inc/Fusion/FusionMath.h ****         float yx;
  59:Core/Inc/Fusion/FusionMath.h ****         float yy;
  60:Core/Inc/Fusion/FusionMath.h ****         float yz;
  61:Core/Inc/Fusion/FusionMath.h ****         float zx;
  62:Core/Inc/Fusion/FusionMath.h ****         float zy;
  63:Core/Inc/Fusion/FusionMath.h ****         float zz;
  64:Core/Inc/Fusion/FusionMath.h ****     } element;
  65:Core/Inc/Fusion/FusionMath.h **** } FusionMatrix;
  66:Core/Inc/Fusion/FusionMath.h **** 
  67:Core/Inc/Fusion/FusionMath.h **** /**
  68:Core/Inc/Fusion/FusionMath.h ****  * @brief Euler angles.  Roll, pitch, and yaw correspond to rotations around
  69:Core/Inc/Fusion/FusionMath.h ****  * X, Y, and Z respectively.
  70:Core/Inc/Fusion/FusionMath.h ****  */
  71:Core/Inc/Fusion/FusionMath.h **** typedef union {
  72:Core/Inc/Fusion/FusionMath.h ****     float array[3];
  73:Core/Inc/Fusion/FusionMath.h **** 
  74:Core/Inc/Fusion/FusionMath.h ****     struct {
  75:Core/Inc/Fusion/FusionMath.h ****         float roll;
  76:Core/Inc/Fusion/FusionMath.h ****         float pitch;
  77:Core/Inc/Fusion/FusionMath.h ****         float yaw;
  78:Core/Inc/Fusion/FusionMath.h ****     } angle;
  79:Core/Inc/Fusion/FusionMath.h **** } FusionEuler;
  80:Core/Inc/Fusion/FusionMath.h **** 
  81:Core/Inc/Fusion/FusionMath.h **** /**
  82:Core/Inc/Fusion/FusionMath.h ****  * @brief Vector of zeros.
  83:Core/Inc/Fusion/FusionMath.h ****  */
  84:Core/Inc/Fusion/FusionMath.h **** #define FUSION_VECTOR_ZERO ((FusionVector){ .array = {0.0f, 0.0f, 0.0f} })
  85:Core/Inc/Fusion/FusionMath.h **** 
  86:Core/Inc/Fusion/FusionMath.h **** /**
  87:Core/Inc/Fusion/FusionMath.h ****  * @brief Vector of ones.
  88:Core/Inc/Fusion/FusionMath.h ****  */
  89:Core/Inc/Fusion/FusionMath.h **** #define FUSION_VECTOR_ONES ((FusionVector){ .array = {1.0f, 1.0f, 1.0f} })
  90:Core/Inc/Fusion/FusionMath.h **** 
  91:Core/Inc/Fusion/FusionMath.h **** /**
  92:Core/Inc/Fusion/FusionMath.h ****  * @brief Identity quaternion.
  93:Core/Inc/Fusion/FusionMath.h ****  */
  94:Core/Inc/Fusion/FusionMath.h **** #define FUSION_IDENTITY_QUATERNION ((FusionQuaternion){ .array = {1.0f, 0.0f, 0.0f, 0.0f} })
  95:Core/Inc/Fusion/FusionMath.h **** 
  96:Core/Inc/Fusion/FusionMath.h **** /**
  97:Core/Inc/Fusion/FusionMath.h ****  * @brief Identity matrix.
ARM GAS  /tmp/ccEJb272.s 			page 8


  98:Core/Inc/Fusion/FusionMath.h ****  */
  99:Core/Inc/Fusion/FusionMath.h **** #define FUSION_IDENTITY_MATRIX ((FusionMatrix){ .array = {{1.0f, 0.0f, 0.0f}, {0.0f, 1.0f, 0.0f}, {
 100:Core/Inc/Fusion/FusionMath.h **** 
 101:Core/Inc/Fusion/FusionMath.h **** /**
 102:Core/Inc/Fusion/FusionMath.h ****  * @brief Euler angles of zero.
 103:Core/Inc/Fusion/FusionMath.h ****  */
 104:Core/Inc/Fusion/FusionMath.h **** #define FUSION_EULER_ZERO ((FusionEuler){ .array = {0.0f, 0.0f, 0.0f} })
 105:Core/Inc/Fusion/FusionMath.h **** 
 106:Core/Inc/Fusion/FusionMath.h **** /**
 107:Core/Inc/Fusion/FusionMath.h ****  * @brief Pi. May not be defined in math.h.
 108:Core/Inc/Fusion/FusionMath.h ****  */
 109:Core/Inc/Fusion/FusionMath.h **** #ifndef M_PI
 110:Core/Inc/Fusion/FusionMath.h **** #define M_PI (3.14159265358979323846)
 111:Core/Inc/Fusion/FusionMath.h **** #endif
 112:Core/Inc/Fusion/FusionMath.h **** 
 113:Core/Inc/Fusion/FusionMath.h **** /**
 114:Core/Inc/Fusion/FusionMath.h ****  * @brief Include this definition or add as a preprocessor definition to use
 115:Core/Inc/Fusion/FusionMath.h ****  * normal square root operations.
 116:Core/Inc/Fusion/FusionMath.h ****  */
 117:Core/Inc/Fusion/FusionMath.h **** //#define FUSION_USE_NORMAL_SQRT
 118:Core/Inc/Fusion/FusionMath.h **** 
 119:Core/Inc/Fusion/FusionMath.h **** //------------------------------------------------------------------------------
 120:Core/Inc/Fusion/FusionMath.h **** // Inline functions - Degrees and radians conversion
 121:Core/Inc/Fusion/FusionMath.h **** 
 122:Core/Inc/Fusion/FusionMath.h **** /**
 123:Core/Inc/Fusion/FusionMath.h ****  * @brief Converts degrees to radians.
 124:Core/Inc/Fusion/FusionMath.h ****  * @param degrees Degrees.
 125:Core/Inc/Fusion/FusionMath.h ****  * @return Radians.
 126:Core/Inc/Fusion/FusionMath.h ****  */
 127:Core/Inc/Fusion/FusionMath.h **** static inline float FusionDegreesToRadians(const float degrees) {
 216              		.loc 2 127 21 view .LVU58
 217              	.LBB47:
 128:Core/Inc/Fusion/FusionMath.h ****     return degrees * ((float) M_PI / 180.0f);
 218              		.loc 2 128 5 view .LVU59
 219              		.loc 2 128 20 is_stmt 0 view .LVU60
 220 005c 1249     		ldr	r1, .L12+12
 221 005e 301C     		adds	r0, r6, #0
 222 0060 FFF7FEFF 		bl	__aeabi_fmul
 223              	.LVL11:
 224              		.loc 2 128 20 view .LVU61
 225              	.LBE47:
 226              	.LBE46:
  77:Core/Src/Fusion/FusionAhrs.c ****     }
 227              		.loc 1 77 60 view .LVU62
 228 0064 FFF7FEFF 		bl	sinf
 229              	.LVL12:
  77:Core/Src/Fusion/FusionAhrs.c ****     }
 230              		.loc 1 77 48 view .LVU63
 231 0068 FC21     		movs	r1, #252
 232 006a 8905     		lsls	r1, r1, #22
 233 006c FFF7FEFF 		bl	__aeabi_fmul
 234              	.LVL13:
 235 0070 8021     		movs	r1, #128
 236 0072 C905     		lsls	r1, r1, #23
 237 0074 FFF7FEFF 		bl	powf
 238              	.LVL14:
  77:Core/Src/Fusion/FusionAhrs.c ****     }
ARM GAS  /tmp/ccEJb272.s 			page 9


 239              		.loc 1 77 46 view .LVU64
 240 0078 6060     		str	r0, [r4, #4]
 241 007a D2E7     		b	.L7
 242              	.L9:
  82:Core/Src/Fusion/FusionAhrs.c ****     }
 243              		.loc 1 82 9 is_stmt 1 view .LVU65
 244              	.LVL15:
 245              	.LBB48:
 246              	.LBI48:
 127:Core/Inc/Fusion/FusionMath.h ****     return degrees * ((float) M_PI / 180.0f);
 247              		.loc 2 127 21 view .LVU66
 248              	.LBB49:
 249              		.loc 2 128 5 view .LVU67
 250              		.loc 2 128 20 is_stmt 0 view .LVU68
 251 007c 0A49     		ldr	r1, .L12+12
 252 007e 301C     		adds	r0, r6, #0
 253 0080 FFF7FEFF 		bl	__aeabi_fmul
 254              	.LVL16:
 255              		.loc 2 128 20 view .LVU69
 256              	.LBE49:
 257              	.LBE48:
  82:Core/Src/Fusion/FusionAhrs.c ****     }
 258              		.loc 1 82 56 view .LVU70
 259 0084 FFF7FEFF 		bl	sinf
 260              	.LVL17:
  82:Core/Src/Fusion/FusionAhrs.c ****     }
 261              		.loc 1 82 44 view .LVU71
 262 0088 FC21     		movs	r1, #252
 263 008a 8905     		lsls	r1, r1, #22
 264 008c FFF7FEFF 		bl	__aeabi_fmul
 265              	.LVL18:
 266 0090 8021     		movs	r1, #128
 267 0092 C905     		lsls	r1, r1, #23
 268 0094 FFF7FEFF 		bl	powf
 269              	.LVL19:
  82:Core/Src/Fusion/FusionAhrs.c ****     }
 270              		.loc 1 82 42 view .LVU72
 271 0098 A060     		str	r0, [r4, #8]
 272 009a CEE7     		b	.L10
 273              	.L13:
 274              		.align	2
 275              	.L12:
 276 009c FFFF7F7F 		.word	2139095039
 277 00a0 00002041 		.word	1092616192
 278 00a4 00004040 		.word	1077936128
 279 00a8 35FA8E3C 		.word	1016003125
 280              		.cfi_endproc
 281              	.LFE23:
 283              		.section	.text.FusionAhrsInitialise,"ax",%progbits
 284              		.align	1
 285              		.global	FusionAhrsInitialise
 286              		.syntax unified
 287              		.code	16
 288              		.thumb_func
 289              		.fpu softvfp
 291              	FusionAhrsInitialise:
 292              	.LVL20:
ARM GAS  /tmp/ccEJb272.s 			page 10


 293              	.LFB21:
  36:Core/Src/Fusion/FusionAhrs.c ****     const FusionAhrsSettings settings = {
 294              		.loc 1 36 51 is_stmt 1 view -0
 295              		.cfi_startproc
 296              		@ args = 0, pretend = 0, frame = 16
 297              		@ frame_needed = 0, uses_anonymous_args = 0
  36:Core/Src/Fusion/FusionAhrs.c ****     const FusionAhrsSettings settings = {
 298              		.loc 1 36 51 is_stmt 0 view .LVU74
 299 0000 70B5     		push	{r4, r5, r6, lr}
 300              	.LCFI1:
 301              		.cfi_def_cfa_offset 16
 302              		.cfi_offset 4, -16
 303              		.cfi_offset 5, -12
 304              		.cfi_offset 6, -8
 305              		.cfi_offset 14, -4
 306 0002 84B0     		sub	sp, sp, #16
 307              	.LCFI2:
 308              		.cfi_def_cfa_offset 32
 309 0004 0400     		movs	r4, r0
  37:Core/Src/Fusion/FusionAhrs.c ****             .gain = 0.5f,
 310              		.loc 1 37 5 is_stmt 1 view .LVU75
  37:Core/Src/Fusion/FusionAhrs.c ****             .gain = 0.5f,
 311              		.loc 1 37 30 is_stmt 0 view .LVU76
 312 0006 6946     		mov	r1, sp
 313 0008 064B     		ldr	r3, .L15
 314 000a 0A00     		movs	r2, r1
 315 000c 61CB     		ldmia	r3!, {r0, r5, r6}
 316 000e 61C2     		stmia	r2!, {r0, r5, r6}
 317              	.LVL21:
  37:Core/Src/Fusion/FusionAhrs.c ****             .gain = 0.5f,
 318              		.loc 1 37 30 view .LVU77
 319 0010 1B68     		ldr	r3, [r3]
 320 0012 1360     		str	r3, [r2]
  43:Core/Src/Fusion/FusionAhrs.c ****     FusionAhrsReset(ahrs);
 321              		.loc 1 43 5 is_stmt 1 view .LVU78
 322 0014 2000     		movs	r0, r4
 323 0016 FFF7FEFF 		bl	FusionAhrsSetSettings
 324              	.LVL22:
  44:Core/Src/Fusion/FusionAhrs.c **** }
 325              		.loc 1 44 5 view .LVU79
 326 001a 2000     		movs	r0, r4
 327 001c FFF7FEFF 		bl	FusionAhrsReset
 328              	.LVL23:
  45:Core/Src/Fusion/FusionAhrs.c **** 
 329              		.loc 1 45 1 is_stmt 0 view .LVU80
 330 0020 04B0     		add	sp, sp, #16
 331              		@ sp needed
 332              	.LVL24:
  45:Core/Src/Fusion/FusionAhrs.c **** 
 333              		.loc 1 45 1 view .LVU81
 334 0022 70BD     		pop	{r4, r5, r6, pc}
 335              	.L16:
 336              		.align	2
 337              	.L15:
 338 0024 00000000 		.word	.LANCHOR0
 339              		.cfi_endproc
 340              	.LFE21:
ARM GAS  /tmp/ccEJb272.s 			page 11


 342              		.section	.text.FusionAhrsGetQuaternion,"ax",%progbits
 343              		.align	1
 344              		.global	FusionAhrsGetQuaternion
 345              		.syntax unified
 346              		.code	16
 347              		.thumb_func
 348              		.fpu softvfp
 350              	FusionAhrsGetQuaternion:
 351              	.LVL25:
 352              	.LFB27:
  90:Core/Src/Fusion/FusionAhrs.c **** 
  91:Core/Src/Fusion/FusionAhrs.c **** /**
  92:Core/Src/Fusion/FusionAhrs.c ****  * @brief Updates the AHRS algorithm using the gyroscope, accelerometer, and
  93:Core/Src/Fusion/FusionAhrs.c ****  * magnetometer measurements.
  94:Core/Src/Fusion/FusionAhrs.c ****  * @param ahrs AHRS algorithm structure.
  95:Core/Src/Fusion/FusionAhrs.c ****  * @param gyroscope Gyroscope measurement in degrees per second.
  96:Core/Src/Fusion/FusionAhrs.c ****  * @param accelerometer Accelerometer measurement in g.
  97:Core/Src/Fusion/FusionAhrs.c ****  * @param magnetometer Magnetometer measurement in arbitrary units.
  98:Core/Src/Fusion/FusionAhrs.c ****  * @param deltaTime Delta time in seconds.
  99:Core/Src/Fusion/FusionAhrs.c ****  */
 100:Core/Src/Fusion/FusionAhrs.c **** void FusionAhrsUpdate(FusionAhrs *const ahrs, const FusionVector gyroscope, const FusionVector acce
 101:Core/Src/Fusion/FusionAhrs.c **** #define Q ahrs->quaternion.element
 102:Core/Src/Fusion/FusionAhrs.c **** 
 103:Core/Src/Fusion/FusionAhrs.c ****     // Store accelerometer
 104:Core/Src/Fusion/FusionAhrs.c ****     ahrs->accelerometer = accelerometer;
 105:Core/Src/Fusion/FusionAhrs.c **** 
 106:Core/Src/Fusion/FusionAhrs.c ****     // Ramp down gain during initialisation
 107:Core/Src/Fusion/FusionAhrs.c ****     if (ahrs->initialising == true) {
 108:Core/Src/Fusion/FusionAhrs.c ****         ahrs->rampedGain -= ahrs->rampedGainStep * deltaTime;
 109:Core/Src/Fusion/FusionAhrs.c ****         if (ahrs->rampedGain < ahrs->settings.gain) {
 110:Core/Src/Fusion/FusionAhrs.c ****             ahrs->rampedGain = ahrs->settings.gain;
 111:Core/Src/Fusion/FusionAhrs.c ****             ahrs->initialising = false;
 112:Core/Src/Fusion/FusionAhrs.c ****             ahrs->accelerationRejectionTimeout = false;
 113:Core/Src/Fusion/FusionAhrs.c ****         }
 114:Core/Src/Fusion/FusionAhrs.c ****     }
 115:Core/Src/Fusion/FusionAhrs.c **** 
 116:Core/Src/Fusion/FusionAhrs.c ****     // Calculate direction of gravity indicated by algorithm
 117:Core/Src/Fusion/FusionAhrs.c ****     const FusionVector halfGravity = {
 118:Core/Src/Fusion/FusionAhrs.c ****             .axis.x = Q.x * Q.z - Q.w * Q.y,
 119:Core/Src/Fusion/FusionAhrs.c ****             .axis.y = Q.y * Q.z + Q.w * Q.x,
 120:Core/Src/Fusion/FusionAhrs.c ****             .axis.z = Q.w * Q.w - 0.5f + Q.z * Q.z,
 121:Core/Src/Fusion/FusionAhrs.c ****     }; // third column of transposed rotation matrix scaled by 0.5
 122:Core/Src/Fusion/FusionAhrs.c **** 
 123:Core/Src/Fusion/FusionAhrs.c ****     // Calculate accelerometer feedback
 124:Core/Src/Fusion/FusionAhrs.c ****     FusionVector halfAccelerometerFeedback = FUSION_VECTOR_ZERO;
 125:Core/Src/Fusion/FusionAhrs.c ****     ahrs->accelerometerIgnored = true;
 126:Core/Src/Fusion/FusionAhrs.c ****     if (FusionVectorIsZero(accelerometer) == false) {
 127:Core/Src/Fusion/FusionAhrs.c **** 
 128:Core/Src/Fusion/FusionAhrs.c ****         // Enter acceleration recovery state if acceleration rejection times out
 129:Core/Src/Fusion/FusionAhrs.c ****         if (ahrs->accelerationRejectionTimer > ahrs->settings.rejectionTimeout) {
 130:Core/Src/Fusion/FusionAhrs.c ****             const FusionQuaternion quaternion = ahrs->quaternion;
 131:Core/Src/Fusion/FusionAhrs.c ****             FusionAhrsReset(ahrs);
 132:Core/Src/Fusion/FusionAhrs.c ****             ahrs->quaternion = quaternion;
 133:Core/Src/Fusion/FusionAhrs.c ****             ahrs->accelerationRejectionTimer = 0;
 134:Core/Src/Fusion/FusionAhrs.c ****             ahrs->accelerationRejectionTimeout = true;
 135:Core/Src/Fusion/FusionAhrs.c ****         }
 136:Core/Src/Fusion/FusionAhrs.c **** 
ARM GAS  /tmp/ccEJb272.s 			page 12


 137:Core/Src/Fusion/FusionAhrs.c ****         // Calculate accelerometer feedback scaled by 0.5
 138:Core/Src/Fusion/FusionAhrs.c ****         ahrs->halfAccelerometerFeedback = FusionVectorCrossProduct(FusionVectorNormalise(accelerome
 139:Core/Src/Fusion/FusionAhrs.c **** 
 140:Core/Src/Fusion/FusionAhrs.c ****         // Ignore accelerometer if acceleration distortion detected
 141:Core/Src/Fusion/FusionAhrs.c ****         if ((ahrs->initialising == true) || (FusionVectorMagnitudeSquared(ahrs->halfAccelerometerFe
 142:Core/Src/Fusion/FusionAhrs.c ****             halfAccelerometerFeedback = ahrs->halfAccelerometerFeedback;
 143:Core/Src/Fusion/FusionAhrs.c ****             ahrs->accelerometerIgnored = false;
 144:Core/Src/Fusion/FusionAhrs.c ****             ahrs->accelerationRejectionTimer -= ahrs->accelerationRejectionTimer >= 10 ? 10 : 0;
 145:Core/Src/Fusion/FusionAhrs.c ****         } else {
 146:Core/Src/Fusion/FusionAhrs.c ****             ahrs->accelerationRejectionTimer++;
 147:Core/Src/Fusion/FusionAhrs.c ****         }
 148:Core/Src/Fusion/FusionAhrs.c ****     }
 149:Core/Src/Fusion/FusionAhrs.c **** 
 150:Core/Src/Fusion/FusionAhrs.c ****     // Calculate magnetometer feedback
 151:Core/Src/Fusion/FusionAhrs.c ****     FusionVector halfMagnetometerFeedback = FUSION_VECTOR_ZERO;
 152:Core/Src/Fusion/FusionAhrs.c ****     ahrs->magnetometerIgnored = true;
 153:Core/Src/Fusion/FusionAhrs.c ****     if (FusionVectorIsZero(magnetometer) == false) {
 154:Core/Src/Fusion/FusionAhrs.c **** 
 155:Core/Src/Fusion/FusionAhrs.c ****         // Set to compass heading if magnetic rejection times out
 156:Core/Src/Fusion/FusionAhrs.c ****         ahrs->magneticRejectionTimeout = false;
 157:Core/Src/Fusion/FusionAhrs.c ****         if (ahrs->magneticRejectionTimer > ahrs->settings.rejectionTimeout) {
 158:Core/Src/Fusion/FusionAhrs.c ****             FusionAhrsSetHeading(ahrs, FusionCompassCalculateHeading(halfGravity, magnetometer));
 159:Core/Src/Fusion/FusionAhrs.c ****             ahrs->magneticRejectionTimer = 0;
 160:Core/Src/Fusion/FusionAhrs.c ****             ahrs->magneticRejectionTimeout = true;
 161:Core/Src/Fusion/FusionAhrs.c ****         }
 162:Core/Src/Fusion/FusionAhrs.c **** 
 163:Core/Src/Fusion/FusionAhrs.c ****         // Compute direction of west indicated by algorithm
 164:Core/Src/Fusion/FusionAhrs.c ****         const FusionVector halfWest = {
 165:Core/Src/Fusion/FusionAhrs.c ****                 .axis.x = Q.x * Q.y + Q.w * Q.z,
 166:Core/Src/Fusion/FusionAhrs.c ****                 .axis.y = Q.w * Q.w - 0.5f + Q.y * Q.y,
 167:Core/Src/Fusion/FusionAhrs.c ****                 .axis.z = Q.y * Q.z - Q.w * Q.x
 168:Core/Src/Fusion/FusionAhrs.c ****         }; // second column of transposed rotation matrix scaled by 0.5
 169:Core/Src/Fusion/FusionAhrs.c **** 
 170:Core/Src/Fusion/FusionAhrs.c ****         // Calculate magnetometer feedback scaled by 0.5
 171:Core/Src/Fusion/FusionAhrs.c ****         ahrs->halfMagnetometerFeedback = FusionVectorCrossProduct(FusionVectorNormalise(FusionVecto
 172:Core/Src/Fusion/FusionAhrs.c **** 
 173:Core/Src/Fusion/FusionAhrs.c ****         // Ignore magnetometer if magnetic distortion detected
 174:Core/Src/Fusion/FusionAhrs.c ****         if ((ahrs->initialising == true) || (FusionVectorMagnitudeSquared(ahrs->halfMagnetometerFee
 175:Core/Src/Fusion/FusionAhrs.c ****             halfMagnetometerFeedback = ahrs->halfMagnetometerFeedback;
 176:Core/Src/Fusion/FusionAhrs.c ****             ahrs->magnetometerIgnored = false;
 177:Core/Src/Fusion/FusionAhrs.c ****             ahrs->magneticRejectionTimer -= ahrs->magneticRejectionTimer >= 10 ? 10 : 0;
 178:Core/Src/Fusion/FusionAhrs.c ****         } else {
 179:Core/Src/Fusion/FusionAhrs.c ****             ahrs->magneticRejectionTimer++;
 180:Core/Src/Fusion/FusionAhrs.c ****         }
 181:Core/Src/Fusion/FusionAhrs.c ****     }
 182:Core/Src/Fusion/FusionAhrs.c **** 
 183:Core/Src/Fusion/FusionAhrs.c ****     // Convert gyroscope to radians per second scaled by 0.5
 184:Core/Src/Fusion/FusionAhrs.c ****     const FusionVector halfGyroscope = FusionVectorMultiplyScalar(gyroscope, FusionDegreesToRadians
 185:Core/Src/Fusion/FusionAhrs.c **** 
 186:Core/Src/Fusion/FusionAhrs.c ****     // Apply feedback to gyroscope
 187:Core/Src/Fusion/FusionAhrs.c ****     const FusionVector adjustedHalfGyroscope = FusionVectorAdd(halfGyroscope, FusionVectorMultiplyS
 188:Core/Src/Fusion/FusionAhrs.c **** 
 189:Core/Src/Fusion/FusionAhrs.c ****     // Integrate rate of change of quaternion
 190:Core/Src/Fusion/FusionAhrs.c ****     ahrs->quaternion = FusionQuaternionAdd(ahrs->quaternion, FusionQuaternionMultiplyVector(ahrs->q
 191:Core/Src/Fusion/FusionAhrs.c **** 
 192:Core/Src/Fusion/FusionAhrs.c ****     // Normalise quaternion
 193:Core/Src/Fusion/FusionAhrs.c ****     ahrs->quaternion = FusionQuaternionNormalise(ahrs->quaternion);
ARM GAS  /tmp/ccEJb272.s 			page 13


 194:Core/Src/Fusion/FusionAhrs.c **** #undef Q
 195:Core/Src/Fusion/FusionAhrs.c **** }
 196:Core/Src/Fusion/FusionAhrs.c **** 
 197:Core/Src/Fusion/FusionAhrs.c **** /**
 198:Core/Src/Fusion/FusionAhrs.c ****  * @brief Updates the AHRS algorithm using the gyroscope and accelerometer
 199:Core/Src/Fusion/FusionAhrs.c ****  * measurements only.
 200:Core/Src/Fusion/FusionAhrs.c ****  * @param ahrs AHRS algorithm structure.
 201:Core/Src/Fusion/FusionAhrs.c ****  * @param gyroscope Gyroscope measurement in degrees per second.
 202:Core/Src/Fusion/FusionAhrs.c ****  * @param accelerometer Accelerometer measurement in g.
 203:Core/Src/Fusion/FusionAhrs.c ****  * @param deltaTime Delta time in seconds.
 204:Core/Src/Fusion/FusionAhrs.c ****  */
 205:Core/Src/Fusion/FusionAhrs.c **** void FusionAhrsUpdateNoMagnetometer(FusionAhrs *const ahrs, const FusionVector gyroscope, const Fus
 206:Core/Src/Fusion/FusionAhrs.c **** 
 207:Core/Src/Fusion/FusionAhrs.c ****     // Update AHRS algorithm
 208:Core/Src/Fusion/FusionAhrs.c ****     FusionAhrsUpdate(ahrs, gyroscope, accelerometer, FUSION_VECTOR_ZERO, deltaTime);
 209:Core/Src/Fusion/FusionAhrs.c **** 
 210:Core/Src/Fusion/FusionAhrs.c ****     // Zero heading during initialisation
 211:Core/Src/Fusion/FusionAhrs.c ****     if ((ahrs->initialising == true) && (ahrs->accelerationRejectionTimeout == false)) {
 212:Core/Src/Fusion/FusionAhrs.c ****         FusionAhrsSetHeading(ahrs, 0.0f);
 213:Core/Src/Fusion/FusionAhrs.c ****     }
 214:Core/Src/Fusion/FusionAhrs.c **** }
 215:Core/Src/Fusion/FusionAhrs.c **** 
 216:Core/Src/Fusion/FusionAhrs.c **** /**
 217:Core/Src/Fusion/FusionAhrs.c ****  * @brief Updates the AHRS algorithm using the gyroscope, accelerometer, and
 218:Core/Src/Fusion/FusionAhrs.c ****  * heading measurements.
 219:Core/Src/Fusion/FusionAhrs.c ****  * @param ahrs AHRS algorithm structure.
 220:Core/Src/Fusion/FusionAhrs.c ****  * @param gyroscope Gyroscope measurement in degrees per second.
 221:Core/Src/Fusion/FusionAhrs.c ****  * @param accelerometer Accelerometer measurement in g.
 222:Core/Src/Fusion/FusionAhrs.c ****  * @param heading Heading measurement in degrees.
 223:Core/Src/Fusion/FusionAhrs.c ****  * @param deltaTime Delta time in seconds.
 224:Core/Src/Fusion/FusionAhrs.c ****  */
 225:Core/Src/Fusion/FusionAhrs.c **** void FusionAhrsUpdateExternalHeading(FusionAhrs *const ahrs, const FusionVector gyroscope, const Fu
 226:Core/Src/Fusion/FusionAhrs.c **** #define Q ahrs->quaternion.element
 227:Core/Src/Fusion/FusionAhrs.c **** 
 228:Core/Src/Fusion/FusionAhrs.c ****     // Calculate roll
 229:Core/Src/Fusion/FusionAhrs.c ****     const float roll = atan2f(Q.w * Q.x + Q.y * Q.z, 0.5f - Q.y * Q.y - Q.x * Q.x);
 230:Core/Src/Fusion/FusionAhrs.c **** 
 231:Core/Src/Fusion/FusionAhrs.c ****     // Calculate magnetometer
 232:Core/Src/Fusion/FusionAhrs.c ****     const float headingRadians = FusionDegreesToRadians(heading);
 233:Core/Src/Fusion/FusionAhrs.c ****     const float sinHeadingRadians = sinf(headingRadians);
 234:Core/Src/Fusion/FusionAhrs.c ****     const FusionVector magnetometer = {
 235:Core/Src/Fusion/FusionAhrs.c ****             .axis.x = cosf(headingRadians),
 236:Core/Src/Fusion/FusionAhrs.c ****             .axis.y = -1.0f * cosf(roll) * sinHeadingRadians,
 237:Core/Src/Fusion/FusionAhrs.c ****             .axis.z = sinHeadingRadians * sinf(roll),
 238:Core/Src/Fusion/FusionAhrs.c ****     };
 239:Core/Src/Fusion/FusionAhrs.c **** 
 240:Core/Src/Fusion/FusionAhrs.c ****     // Update AHRS algorithm
 241:Core/Src/Fusion/FusionAhrs.c ****     FusionAhrsUpdate(ahrs, gyroscope, accelerometer, magnetometer, deltaTime);
 242:Core/Src/Fusion/FusionAhrs.c **** #undef Q
 243:Core/Src/Fusion/FusionAhrs.c **** }
 244:Core/Src/Fusion/FusionAhrs.c **** 
 245:Core/Src/Fusion/FusionAhrs.c **** /**
 246:Core/Src/Fusion/FusionAhrs.c ****  * @brief Returns the quaternion describing the sensor relative to the Earth.
 247:Core/Src/Fusion/FusionAhrs.c ****  * @param ahrs AHRS algorithm structure.
 248:Core/Src/Fusion/FusionAhrs.c ****  * @return Quaternion describing the sensor relative to the Earth.
 249:Core/Src/Fusion/FusionAhrs.c ****  */
 250:Core/Src/Fusion/FusionAhrs.c **** FusionQuaternion FusionAhrsGetQuaternion(const FusionAhrs *const ahrs) {
ARM GAS  /tmp/ccEJb272.s 			page 14


 353              		.loc 1 250 72 is_stmt 1 view -0
 354              		.cfi_startproc
 355              		@ args = 0, pretend = 0, frame = 0
 356              		@ frame_needed = 0, uses_anonymous_args = 0
 357              		.loc 1 250 72 is_stmt 0 view .LVU83
 358 0000 30B5     		push	{r4, r5, lr}
 359              	.LCFI3:
 360              		.cfi_def_cfa_offset 12
 361              		.cfi_offset 4, -12
 362              		.cfi_offset 5, -8
 363              		.cfi_offset 14, -4
 251:Core/Src/Fusion/FusionAhrs.c ****     return ahrs->quaternion;
 364              		.loc 1 251 5 is_stmt 1 view .LVU84
 365              		.loc 1 251 16 is_stmt 0 view .LVU85
 366 0002 1031     		adds	r1, r1, #16
 367              	.LVL26:
 368              		.loc 1 251 16 view .LVU86
 369 0004 0300     		movs	r3, r0
 370 0006 34C9     		ldmia	r1!, {r2, r4, r5}
 371 0008 34C3     		stmia	r3!, {r2, r4, r5}
 372              	.LVL27:
 373              		.loc 1 251 16 view .LVU87
 374 000a 0A68     		ldr	r2, [r1]
 375 000c 1A60     		str	r2, [r3]
 252:Core/Src/Fusion/FusionAhrs.c **** }
 376              		.loc 1 252 1 view .LVU88
 377              		@ sp needed
 378 000e 30BD     		pop	{r4, r5, pc}
 379              		.cfi_endproc
 380              	.LFE27:
 382              		.global	__aeabi_fadd
 383              		.section	.text.FusionAhrsGetLinearAcceleration,"ax",%progbits
 384              		.align	1
 385              		.global	FusionAhrsGetLinearAcceleration
 386              		.syntax unified
 387              		.code	16
 388              		.thumb_func
 389              		.fpu softvfp
 391              	FusionAhrsGetLinearAcceleration:
 392              	.LVL28:
 393              	.LFB28:
 253:Core/Src/Fusion/FusionAhrs.c **** 
 254:Core/Src/Fusion/FusionAhrs.c **** /**
 255:Core/Src/Fusion/FusionAhrs.c ****  * @brief Returns the linear acceleration measurement equal to the accelerometer
 256:Core/Src/Fusion/FusionAhrs.c ****  * measurement with the 1 g of gravity removed.
 257:Core/Src/Fusion/FusionAhrs.c ****  * @param ahrs AHRS algorithm structure.
 258:Core/Src/Fusion/FusionAhrs.c ****  * @return Linear acceleration measurement in g.
 259:Core/Src/Fusion/FusionAhrs.c ****  */
 260:Core/Src/Fusion/FusionAhrs.c **** FusionVector FusionAhrsGetLinearAcceleration(const FusionAhrs *const ahrs) {
 394              		.loc 1 260 76 is_stmt 1 view -0
 395              		.cfi_startproc
 396              		@ args = 0, pretend = 0, frame = 48
 397              		@ frame_needed = 0, uses_anonymous_args = 0
 398              		.loc 1 260 76 is_stmt 0 view .LVU90
 399 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 400              	.LCFI4:
 401              		.cfi_def_cfa_offset 20
ARM GAS  /tmp/ccEJb272.s 			page 15


 402              		.cfi_offset 4, -20
 403              		.cfi_offset 5, -16
 404              		.cfi_offset 6, -12
 405              		.cfi_offset 7, -8
 406              		.cfi_offset 14, -4
 407 0002 DE46     		mov	lr, fp
 408 0004 5746     		mov	r7, r10
 409 0006 4E46     		mov	r6, r9
 410 0008 4546     		mov	r5, r8
 411 000a E0B5     		push	{r5, r6, r7, lr}
 412              	.LCFI5:
 413              		.cfi_def_cfa_offset 36
 414              		.cfi_offset 8, -36
 415              		.cfi_offset 9, -32
 416              		.cfi_offset 10, -28
 417              		.cfi_offset 11, -24
 418 000c 8DB0     		sub	sp, sp, #52
 419              	.LCFI6:
 420              		.cfi_def_cfa_offset 88
 421 000e 0500     		movs	r5, r0
 422 0010 0C00     		movs	r4, r1
 261:Core/Src/Fusion/FusionAhrs.c **** #define Q ahrs->quaternion.element
 262:Core/Src/Fusion/FusionAhrs.c ****     const FusionVector gravity = {
 423              		.loc 1 262 5 is_stmt 1 view .LVU91
 263:Core/Src/Fusion/FusionAhrs.c ****             .axis.x = 2.0f * (Q.x * Q.z - Q.w * Q.y),
 424              		.loc 1 263 32 is_stmt 0 view .LVU92
 425 0012 4B69     		ldr	r3, [r1, #20]
 426 0014 9946     		mov	r9, r3
 427              		.loc 1 263 38 view .LVU93
 428 0016 CF69     		ldr	r7, [r1, #28]
 429              		.loc 1 263 35 view .LVU94
 430 0018 391C     		adds	r1, r7, #0
 431              	.LVL29:
 432              		.loc 1 263 35 view .LVU95
 433 001a 181C     		adds	r0, r3, #0
 434              	.LVL30:
 435              		.loc 1 263 35 view .LVU96
 436 001c FFF7FEFF 		bl	__aeabi_fmul
 437              	.LVL31:
 438 0020 061C     		adds	r6, r0, #0
 439              		.loc 1 263 44 view .LVU97
 440 0022 2369     		ldr	r3, [r4, #16]
 441 0024 9846     		mov	r8, r3
 442              		.loc 1 263 50 view .LVU98
 443 0026 A369     		ldr	r3, [r4, #24]
 444 0028 9B46     		mov	fp, r3
 445              		.loc 1 263 47 view .LVU99
 446 002a 191C     		adds	r1, r3, #0
 447 002c 4046     		mov	r0, r8
 448 002e FFF7FEFF 		bl	__aeabi_fmul
 449              	.LVL32:
 450 0032 011C     		adds	r1, r0, #0
 451              		.loc 1 263 41 view .LVU100
 452 0034 301C     		adds	r0, r6, #0
 453 0036 FFF7FEFF 		bl	__aeabi_fsub
 454              	.LVL33:
 455              		.loc 1 263 28 view .LVU101
ARM GAS  /tmp/ccEJb272.s 			page 16


 456 003a 011C     		adds	r1, r0, #0
 457 003c FFF7FEFF 		bl	__aeabi_fadd
 458              	.LVL34:
 459 0040 8246     		mov	r10, r0
 262:Core/Src/Fusion/FusionAhrs.c ****             .axis.x = 2.0f * (Q.x * Q.z - Q.w * Q.y),
 460              		.loc 1 262 24 view .LVU102
 461 0042 09AE     		add	r6, sp, #36
 462 0044 0990     		str	r0, [sp, #36]
 264:Core/Src/Fusion/FusionAhrs.c ****             .axis.y = 2.0f * (Q.y * Q.z + Q.w * Q.x),
 463              		.loc 1 264 35 view .LVU103
 464 0046 5946     		mov	r1, fp
 465 0048 381C     		adds	r0, r7, #0
 466 004a FFF7FEFF 		bl	__aeabi_fmul
 467              	.LVL35:
 468 004e 8346     		mov	fp, r0
 469              		.loc 1 264 47 view .LVU104
 470 0050 4146     		mov	r1, r8
 471 0052 4846     		mov	r0, r9
 472 0054 FFF7FEFF 		bl	__aeabi_fmul
 473              	.LVL36:
 474 0058 011C     		adds	r1, r0, #0
 475              		.loc 1 264 41 view .LVU105
 476 005a 5846     		mov	r0, fp
 477 005c FFF7FEFF 		bl	__aeabi_fadd
 478              	.LVL37:
 479              		.loc 1 264 28 view .LVU106
 480 0060 011C     		adds	r1, r0, #0
 481 0062 FFF7FEFF 		bl	__aeabi_fadd
 482              	.LVL38:
 483 0066 8146     		mov	r9, r0
 262:Core/Src/Fusion/FusionAhrs.c ****             .axis.x = 2.0f * (Q.x * Q.z - Q.w * Q.y),
 484              		.loc 1 262 24 view .LVU107
 485 0068 0A90     		str	r0, [sp, #40]
 265:Core/Src/Fusion/FusionAhrs.c ****             .axis.z = 2.0f * (Q.w * Q.w - 0.5f + Q.z * Q.z),
 486              		.loc 1 265 35 view .LVU108
 487 006a 4146     		mov	r1, r8
 488 006c 4046     		mov	r0, r8
 489 006e FFF7FEFF 		bl	__aeabi_fmul
 490              	.LVL39:
 491              		.loc 1 265 41 view .LVU109
 492 0072 FC21     		movs	r1, #252
 493 0074 8905     		lsls	r1, r1, #22
 494 0076 FFF7FEFF 		bl	__aeabi_fsub
 495              	.LVL40:
 496 007a 8046     		mov	r8, r0
 497              		.loc 1 265 54 view .LVU110
 498 007c 391C     		adds	r1, r7, #0
 499 007e 381C     		adds	r0, r7, #0
 500 0080 FFF7FEFF 		bl	__aeabi_fmul
 501              	.LVL41:
 502 0084 011C     		adds	r1, r0, #0
 503              		.loc 1 265 48 view .LVU111
 504 0086 4046     		mov	r0, r8
 505 0088 FFF7FEFF 		bl	__aeabi_fadd
 506              	.LVL42:
 507              		.loc 1 265 28 view .LVU112
 508 008c 011C     		adds	r1, r0, #0
ARM GAS  /tmp/ccEJb272.s 			page 17


 509 008e FFF7FEFF 		bl	__aeabi_fadd
 510              	.LVL43:
 511 0092 8046     		mov	r8, r0
 262:Core/Src/Fusion/FusionAhrs.c ****             .axis.x = 2.0f * (Q.x * Q.z - Q.w * Q.y),
 512              		.loc 1 262 24 view .LVU113
 513 0094 0B90     		str	r0, [sp, #44]
 266:Core/Src/Fusion/FusionAhrs.c ****     }; // third column of transposed rotation matrix
 267:Core/Src/Fusion/FusionAhrs.c ****     const FusionVector linearAcceleration = FusionVectorSubtract(ahrs->accelerometer, gravity);
 514              		.loc 1 267 5 is_stmt 1 view .LVU114
 515 0096 6F46     		mov	r7, sp
 516 0098 2034     		adds	r4, r4, #32
 517              	.LVL44:
 518              		.loc 1 267 5 is_stmt 0 view .LVU115
 519 009a 3B00     		movs	r3, r7
 520 009c 07CC     		ldmia	r4!, {r0, r1, r2}
 521 009e 07C3     		stmia	r3!, {r0, r1, r2}
 522              	.LVL45:
 523              		.loc 1 267 5 view .LVU116
 524 00a0 07CE     		ldmia	r6!, {r0, r1, r2}
 525 00a2 07C3     		stmia	r3!, {r0, r1, r2}
 526              	.LBB50:
 527              	.LBI50:
 129:Core/Inc/Fusion/FusionMath.h **** }
 130:Core/Inc/Fusion/FusionMath.h **** 
 131:Core/Inc/Fusion/FusionMath.h **** /**
 132:Core/Inc/Fusion/FusionMath.h ****  * @brief Converts radians to degrees.
 133:Core/Inc/Fusion/FusionMath.h ****  * @param radians Radians.
 134:Core/Inc/Fusion/FusionMath.h ****  * @return Degrees.
 135:Core/Inc/Fusion/FusionMath.h ****  */
 136:Core/Inc/Fusion/FusionMath.h **** static inline float FusionRadiansToDegrees(const float radians) {
 137:Core/Inc/Fusion/FusionMath.h ****     return radians * (180.0f / (float) M_PI);
 138:Core/Inc/Fusion/FusionMath.h **** }
 139:Core/Inc/Fusion/FusionMath.h **** 
 140:Core/Inc/Fusion/FusionMath.h **** //------------------------------------------------------------------------------
 141:Core/Inc/Fusion/FusionMath.h **** // Inline functions - Arc sine
 142:Core/Inc/Fusion/FusionMath.h **** 
 143:Core/Inc/Fusion/FusionMath.h **** /**
 144:Core/Inc/Fusion/FusionMath.h ****  * @brief Returns the arc sine of the value.
 145:Core/Inc/Fusion/FusionMath.h ****  * @param value Value.
 146:Core/Inc/Fusion/FusionMath.h ****  * @return Arc sine of the value.
 147:Core/Inc/Fusion/FusionMath.h ****  */
 148:Core/Inc/Fusion/FusionMath.h **** static inline float FusionAsin(const float value) {
 149:Core/Inc/Fusion/FusionMath.h ****     if (value <= -1.0f) {
 150:Core/Inc/Fusion/FusionMath.h ****         return (float) M_PI / -2.0f;
 151:Core/Inc/Fusion/FusionMath.h ****     }
 152:Core/Inc/Fusion/FusionMath.h ****     if (value >= 1.0f) {
 153:Core/Inc/Fusion/FusionMath.h ****         return (float) M_PI / 2.0f;
 154:Core/Inc/Fusion/FusionMath.h ****     }
 155:Core/Inc/Fusion/FusionMath.h ****     return asinf(value);
 156:Core/Inc/Fusion/FusionMath.h **** }
 157:Core/Inc/Fusion/FusionMath.h **** 
 158:Core/Inc/Fusion/FusionMath.h **** //------------------------------------------------------------------------------
 159:Core/Inc/Fusion/FusionMath.h **** // Inline functions - Fast inverse square root
 160:Core/Inc/Fusion/FusionMath.h **** 
 161:Core/Inc/Fusion/FusionMath.h **** #ifndef FUSION_USE_NORMAL_SQRT
 162:Core/Inc/Fusion/FusionMath.h **** 
 163:Core/Inc/Fusion/FusionMath.h **** /**
ARM GAS  /tmp/ccEJb272.s 			page 18


 164:Core/Inc/Fusion/FusionMath.h ****  * @brief Calculates the reciprocal of the square root.
 165:Core/Inc/Fusion/FusionMath.h ****  * See https://pizer.wordpress.com/2008/10/12/fast-inverse-square-root/
 166:Core/Inc/Fusion/FusionMath.h ****  * @param x Operand.
 167:Core/Inc/Fusion/FusionMath.h ****  * @return Reciprocal of the square root of x.
 168:Core/Inc/Fusion/FusionMath.h ****  */
 169:Core/Inc/Fusion/FusionMath.h **** static inline float FusionFastInverseSqrt(const float x) {
 170:Core/Inc/Fusion/FusionMath.h **** 
 171:Core/Inc/Fusion/FusionMath.h ****     typedef union {
 172:Core/Inc/Fusion/FusionMath.h ****         float f;
 173:Core/Inc/Fusion/FusionMath.h ****         int32_t i;
 174:Core/Inc/Fusion/FusionMath.h ****     } Union32;
 175:Core/Inc/Fusion/FusionMath.h **** 
 176:Core/Inc/Fusion/FusionMath.h ****     Union32 union32 = {.f = x};
 177:Core/Inc/Fusion/FusionMath.h ****     union32.i = 0x5F1F1412 - (union32.i >> 1);
 178:Core/Inc/Fusion/FusionMath.h ****     return union32.f * (1.69000231f - 0.714158168f * x * union32.f * union32.f);
 179:Core/Inc/Fusion/FusionMath.h **** }
 180:Core/Inc/Fusion/FusionMath.h **** 
 181:Core/Inc/Fusion/FusionMath.h **** #endif
 182:Core/Inc/Fusion/FusionMath.h **** 
 183:Core/Inc/Fusion/FusionMath.h **** //------------------------------------------------------------------------------
 184:Core/Inc/Fusion/FusionMath.h **** // Inline functions - Vector operations
 185:Core/Inc/Fusion/FusionMath.h **** 
 186:Core/Inc/Fusion/FusionMath.h **** /**
 187:Core/Inc/Fusion/FusionMath.h ****  * @brief Returns true if the vector is zero.
 188:Core/Inc/Fusion/FusionMath.h ****  * @param vector Vector.
 189:Core/Inc/Fusion/FusionMath.h ****  * @return True if the vector is zero.
 190:Core/Inc/Fusion/FusionMath.h ****  */
 191:Core/Inc/Fusion/FusionMath.h **** static inline bool FusionVectorIsZero(const FusionVector vector) {
 192:Core/Inc/Fusion/FusionMath.h ****     return (vector.axis.x == 0.0f) && (vector.axis.y == 0.0f) && (vector.axis.z == 0.0f);
 193:Core/Inc/Fusion/FusionMath.h **** }
 194:Core/Inc/Fusion/FusionMath.h **** 
 195:Core/Inc/Fusion/FusionMath.h **** /**
 196:Core/Inc/Fusion/FusionMath.h ****  * @brief Returns the sum of two vectors.
 197:Core/Inc/Fusion/FusionMath.h ****  * @param vectorA Vector A.
 198:Core/Inc/Fusion/FusionMath.h ****  * @param vectorB Vector B.
 199:Core/Inc/Fusion/FusionMath.h ****  * @return Sum of two vectors.
 200:Core/Inc/Fusion/FusionMath.h ****  */
 201:Core/Inc/Fusion/FusionMath.h **** static inline FusionVector FusionVectorAdd(const FusionVector vectorA, const FusionVector vectorB) 
 202:Core/Inc/Fusion/FusionMath.h ****     FusionVector result;
 203:Core/Inc/Fusion/FusionMath.h ****     result.axis.x = vectorA.axis.x + vectorB.axis.x;
 204:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = vectorA.axis.y + vectorB.axis.y;
 205:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = vectorA.axis.z + vectorB.axis.z;
 206:Core/Inc/Fusion/FusionMath.h ****     return result;
 207:Core/Inc/Fusion/FusionMath.h **** }
 208:Core/Inc/Fusion/FusionMath.h **** 
 209:Core/Inc/Fusion/FusionMath.h **** /**
 210:Core/Inc/Fusion/FusionMath.h ****  * @brief Returns vector B subtracted from vector A.
 211:Core/Inc/Fusion/FusionMath.h ****  * @param vectorA Vector A.
 212:Core/Inc/Fusion/FusionMath.h ****  * @param vectorB Vector B.
 213:Core/Inc/Fusion/FusionMath.h ****  * @return Vector B subtracted from vector A.
 214:Core/Inc/Fusion/FusionMath.h ****  */
 215:Core/Inc/Fusion/FusionMath.h **** static inline FusionVector FusionVectorSubtract(const FusionVector vectorA, const FusionVector vect
 528              		.loc 2 215 28 is_stmt 1 view .LVU117
 529              	.LBB51:
 216:Core/Inc/Fusion/FusionMath.h ****     FusionVector result;
 530              		.loc 2 216 5 view .LVU118
 217:Core/Inc/Fusion/FusionMath.h ****     result.axis.x = vectorA.axis.x - vectorB.axis.x;
ARM GAS  /tmp/ccEJb272.s 			page 19


 531              		.loc 2 217 5 view .LVU119
 532              		.loc 2 217 36 is_stmt 0 view .LVU120
 533 00a4 5146     		mov	r1, r10
 534 00a6 0098     		ldr	r0, [sp]
 535 00a8 FFF7FEFF 		bl	__aeabi_fsub
 536              	.LVL46:
 537              		.loc 2 217 19 view .LVU121
 538 00ac 06AC     		add	r4, sp, #24
 539              	.LVL47:
 540              		.loc 2 217 19 view .LVU122
 541 00ae 0690     		str	r0, [sp, #24]
 218:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = vectorA.axis.y - vectorB.axis.y;
 542              		.loc 2 218 5 is_stmt 1 view .LVU123
 543              		.loc 2 218 36 is_stmt 0 view .LVU124
 544 00b0 4946     		mov	r1, r9
 545 00b2 7868     		ldr	r0, [r7, #4]
 546 00b4 FFF7FEFF 		bl	__aeabi_fsub
 547              	.LVL48:
 548              		.loc 2 218 19 view .LVU125
 549 00b8 0790     		str	r0, [sp, #28]
 219:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = vectorA.axis.z - vectorB.axis.z;
 550              		.loc 2 219 5 is_stmt 1 view .LVU126
 551              		.loc 2 219 33 is_stmt 0 view .LVU127
 552 00ba B868     		ldr	r0, [r7, #8]
 553              		.loc 2 219 36 view .LVU128
 554 00bc 4146     		mov	r1, r8
 555 00be FFF7FEFF 		bl	__aeabi_fsub
 556              	.LVL49:
 557              		.loc 2 219 19 view .LVU129
 558 00c2 0890     		str	r0, [sp, #32]
 220:Core/Inc/Fusion/FusionMath.h ****     return result;
 559              		.loc 2 220 5 is_stmt 1 view .LVU130
 560              		.loc 2 220 12 is_stmt 0 view .LVU131
 561 00c4 2B00     		movs	r3, r5
 562 00c6 07CC     		ldmia	r4!, {r0, r1, r2}
 563 00c8 07C3     		stmia	r3!, {r0, r1, r2}
 564              	.LBE51:
 565              	.LBE50:
 268:Core/Src/Fusion/FusionAhrs.c ****     return linearAcceleration;
 566              		.loc 1 268 5 is_stmt 1 view .LVU132
 269:Core/Src/Fusion/FusionAhrs.c **** #undef Q
 270:Core/Src/Fusion/FusionAhrs.c **** }
 567              		.loc 1 270 1 is_stmt 0 view .LVU133
 568 00ca 2800     		movs	r0, r5
 569 00cc 0DB0     		add	sp, sp, #52
 570              		@ sp needed
 571              	.LVL50:
 572              		.loc 1 270 1 view .LVU134
 573 00ce F0BC     		pop	{r4, r5, r6, r7}
 574 00d0 BB46     		mov	fp, r7
 575 00d2 B246     		mov	r10, r6
 576 00d4 A946     		mov	r9, r5
 577 00d6 A046     		mov	r8, r4
 578 00d8 F0BD     		pop	{r4, r5, r6, r7, pc}
 579              		.cfi_endproc
 580              	.LFE28:
 582              		.section	.text.FusionAhrsGetEarthAcceleration,"ax",%progbits
ARM GAS  /tmp/ccEJb272.s 			page 20


 583              		.align	1
 584              		.global	FusionAhrsGetEarthAcceleration
 585              		.syntax unified
 586              		.code	16
 587              		.thumb_func
 588              		.fpu softvfp
 590              	FusionAhrsGetEarthAcceleration:
 591              	.LVL51:
 592              	.LFB29:
 271:Core/Src/Fusion/FusionAhrs.c **** 
 272:Core/Src/Fusion/FusionAhrs.c **** /**
 273:Core/Src/Fusion/FusionAhrs.c ****  * @brief Returns the Earth acceleration measurement equal to accelerometer
 274:Core/Src/Fusion/FusionAhrs.c ****  * measurement in the Earth coordinate frame with the 1 g of gravity removed.
 275:Core/Src/Fusion/FusionAhrs.c ****  * @param ahrs AHRS algorithm structure.
 276:Core/Src/Fusion/FusionAhrs.c ****  * @return Earth acceleration measurement in g.
 277:Core/Src/Fusion/FusionAhrs.c ****  */
 278:Core/Src/Fusion/FusionAhrs.c **** FusionVector FusionAhrsGetEarthAcceleration(const FusionAhrs *const ahrs) {
 593              		.loc 1 278 75 is_stmt 1 view -0
 594              		.cfi_startproc
 595              		@ args = 0, pretend = 0, frame = 24
 596              		@ frame_needed = 0, uses_anonymous_args = 0
 597              		.loc 1 278 75 is_stmt 0 view .LVU136
 598 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 599              	.LCFI7:
 600              		.cfi_def_cfa_offset 20
 601              		.cfi_offset 4, -20
 602              		.cfi_offset 5, -16
 603              		.cfi_offset 6, -12
 604              		.cfi_offset 7, -8
 605              		.cfi_offset 14, -4
 606 0002 DE46     		mov	lr, fp
 607 0004 5746     		mov	r7, r10
 608 0006 4E46     		mov	r6, r9
 609 0008 4546     		mov	r5, r8
 610 000a E0B5     		push	{r5, r6, r7, lr}
 611              	.LCFI8:
 612              		.cfi_def_cfa_offset 36
 613              		.cfi_offset 8, -36
 614              		.cfi_offset 9, -32
 615              		.cfi_offset 10, -28
 616              		.cfi_offset 11, -24
 617 000c 87B0     		sub	sp, sp, #28
 618              	.LCFI9:
 619              		.cfi_def_cfa_offset 64
 620 000e 0500     		movs	r5, r0
 621 0010 0C00     		movs	r4, r1
 279:Core/Src/Fusion/FusionAhrs.c **** #define Q ahrs->quaternion.element
 280:Core/Src/Fusion/FusionAhrs.c **** #define A ahrs->accelerometer.axis
 281:Core/Src/Fusion/FusionAhrs.c ****     const float qwqw = Q.w * Q.w; // calculate common terms to avoid repeated operations
 622              		.loc 1 281 5 is_stmt 1 view .LVU137
 623              		.loc 1 281 25 is_stmt 0 view .LVU138
 624 0012 0E69     		ldr	r6, [r1, #16]
 625              		.loc 1 281 17 view .LVU139
 626 0014 311C     		adds	r1, r6, #0
 627              	.LVL52:
 628              		.loc 1 281 17 view .LVU140
 629 0016 301C     		adds	r0, r6, #0
ARM GAS  /tmp/ccEJb272.s 			page 21


 630              	.LVL53:
 631              		.loc 1 281 17 view .LVU141
 632 0018 FFF7FEFF 		bl	__aeabi_fmul
 633              	.LVL54:
 634 001c 8246     		mov	r10, r0
 635              	.LVL55:
 282:Core/Src/Fusion/FusionAhrs.c ****     const float qwqx = Q.w * Q.x;
 636              		.loc 1 282 5 is_stmt 1 view .LVU142
 637              		.loc 1 282 31 is_stmt 0 view .LVU143
 638 001e 6369     		ldr	r3, [r4, #20]
 639 0020 9946     		mov	r9, r3
 640              		.loc 1 282 17 view .LVU144
 641 0022 191C     		adds	r1, r3, #0
 642 0024 301C     		adds	r0, r6, #0
 643              	.LVL56:
 644              		.loc 1 282 17 view .LVU145
 645 0026 FFF7FEFF 		bl	__aeabi_fmul
 646              	.LVL57:
 647 002a 8346     		mov	fp, r0
 648              	.LVL58:
 283:Core/Src/Fusion/FusionAhrs.c ****     const float qwqy = Q.w * Q.y;
 649              		.loc 1 283 5 is_stmt 1 view .LVU146
 650              		.loc 1 283 31 is_stmt 0 view .LVU147
 651 002c A369     		ldr	r3, [r4, #24]
 652 002e 9846     		mov	r8, r3
 653              		.loc 1 283 17 view .LVU148
 654 0030 191C     		adds	r1, r3, #0
 655 0032 301C     		adds	r0, r6, #0
 656              	.LVL59:
 657              		.loc 1 283 17 view .LVU149
 658 0034 FFF7FEFF 		bl	__aeabi_fmul
 659              	.LVL60:
 660 0038 0090     		str	r0, [sp]
 661              	.LVL61:
 284:Core/Src/Fusion/FusionAhrs.c ****     const float qwqz = Q.w * Q.z;
 662              		.loc 1 284 5 is_stmt 1 view .LVU150
 663              		.loc 1 284 31 is_stmt 0 view .LVU151
 664 003a E769     		ldr	r7, [r4, #28]
 665              		.loc 1 284 17 view .LVU152
 666 003c 391C     		adds	r1, r7, #0
 667 003e 301C     		adds	r0, r6, #0
 668              	.LVL62:
 669              		.loc 1 284 17 view .LVU153
 670 0040 FFF7FEFF 		bl	__aeabi_fmul
 671              	.LVL63:
 672 0044 0190     		str	r0, [sp, #4]
 673              	.LVL64:
 285:Core/Src/Fusion/FusionAhrs.c ****     const float qxqy = Q.x * Q.y;
 674              		.loc 1 285 5 is_stmt 1 view .LVU154
 675              		.loc 1 285 17 is_stmt 0 view .LVU155
 676 0046 4146     		mov	r1, r8
 677 0048 4846     		mov	r0, r9
 678              	.LVL65:
 679              		.loc 1 285 17 view .LVU156
 680 004a FFF7FEFF 		bl	__aeabi_fmul
 681              	.LVL66:
 682 004e 0290     		str	r0, [sp, #8]
ARM GAS  /tmp/ccEJb272.s 			page 22


 683              	.LVL67:
 286:Core/Src/Fusion/FusionAhrs.c ****     const float qxqz = Q.x * Q.z;
 684              		.loc 1 286 5 is_stmt 1 view .LVU157
 685              		.loc 1 286 17 is_stmt 0 view .LVU158
 686 0050 391C     		adds	r1, r7, #0
 687 0052 4846     		mov	r0, r9
 688              	.LVL68:
 689              		.loc 1 286 17 view .LVU159
 690 0054 FFF7FEFF 		bl	__aeabi_fmul
 691              	.LVL69:
 692 0058 0390     		str	r0, [sp, #12]
 693              	.LVL70:
 287:Core/Src/Fusion/FusionAhrs.c ****     const float qyqz = Q.y * Q.z;
 694              		.loc 1 287 5 is_stmt 1 view .LVU160
 695              		.loc 1 287 17 is_stmt 0 view .LVU161
 696 005a 391C     		adds	r1, r7, #0
 697 005c 4046     		mov	r0, r8
 698              	.LVL71:
 699              		.loc 1 287 17 view .LVU162
 700 005e FFF7FEFF 		bl	__aeabi_fmul
 701              	.LVL72:
 702 0062 0490     		str	r0, [sp, #16]
 703              	.LVL73:
 288:Core/Src/Fusion/FusionAhrs.c ****     const FusionVector earthAcceleration = {
 704              		.loc 1 288 5 is_stmt 1 view .LVU163
 289:Core/Src/Fusion/FusionAhrs.c ****             .axis.x = 2.0f * ((qwqw - 0.5f + Q.x * Q.x) * A.x + (qxqy - qwqz) * A.y + (qxqz + qwqy)
 705              		.loc 1 289 37 is_stmt 0 view .LVU164
 706 0064 FC21     		movs	r1, #252
 707 0066 8905     		lsls	r1, r1, #22
 708 0068 5046     		mov	r0, r10
 709              	.LVL74:
 710              		.loc 1 289 37 view .LVU165
 711 006a FFF7FEFF 		bl	__aeabi_fsub
 712              	.LVL75:
 713 006e 061C     		adds	r6, r0, #0
 714              		.loc 1 289 50 view .LVU166
 715 0070 4946     		mov	r1, r9
 716 0072 4846     		mov	r0, r9
 717 0074 FFF7FEFF 		bl	__aeabi_fmul
 718              	.LVL76:
 719 0078 011C     		adds	r1, r0, #0
 720              		.loc 1 289 44 view .LVU167
 721 007a 301C     		adds	r0, r6, #0
 722 007c FFF7FEFF 		bl	__aeabi_fadd
 723              	.LVL77:
 724              		.loc 1 289 60 view .LVU168
 725 0080 236A     		ldr	r3, [r4, #32]
 726 0082 9A46     		mov	r10, r3
 727              	.LVL78:
 728              		.loc 1 289 57 view .LVU169
 729 0084 191C     		adds	r1, r3, #0
 730 0086 FFF7FEFF 		bl	__aeabi_fmul
 731              	.LVL79:
 732 008a 0590     		str	r0, [sp, #20]
 733              		.loc 1 289 71 view .LVU170
 734 008c 0199     		ldr	r1, [sp, #4]
 735 008e 0298     		ldr	r0, [sp, #8]
ARM GAS  /tmp/ccEJb272.s 			page 23


 736 0090 FFF7FEFF 		bl	__aeabi_fsub
 737              	.LVL80:
 738              		.loc 1 289 82 view .LVU171
 739 0094 636A     		ldr	r3, [r4, #36]
 740 0096 9946     		mov	r9, r3
 741              		.loc 1 289 79 view .LVU172
 742 0098 191C     		adds	r1, r3, #0
 743 009a FFF7FEFF 		bl	__aeabi_fmul
 744              	.LVL81:
 745 009e 011C     		adds	r1, r0, #0
 746              		.loc 1 289 63 view .LVU173
 747 00a0 0598     		ldr	r0, [sp, #20]
 748 00a2 FFF7FEFF 		bl	__aeabi_fadd
 749              	.LVL82:
 750 00a6 0590     		str	r0, [sp, #20]
 751              		.loc 1 289 93 view .LVU174
 752 00a8 0399     		ldr	r1, [sp, #12]
 753 00aa 0098     		ldr	r0, [sp]
 754 00ac FFF7FEFF 		bl	__aeabi_fadd
 755              	.LVL83:
 756              		.loc 1 289 104 view .LVU175
 757 00b0 A46A     		ldr	r4, [r4, #40]
 758              	.LVL84:
 759              		.loc 1 289 101 view .LVU176
 760 00b2 211C     		adds	r1, r4, #0
 761 00b4 FFF7FEFF 		bl	__aeabi_fmul
 762              	.LVL85:
 763 00b8 011C     		adds	r1, r0, #0
 764              		.loc 1 289 85 view .LVU177
 765 00ba 0598     		ldr	r0, [sp, #20]
 766 00bc FFF7FEFF 		bl	__aeabi_fadd
 767              	.LVL86:
 768              		.loc 1 289 28 view .LVU178
 769 00c0 011C     		adds	r1, r0, #0
 770 00c2 FFF7FEFF 		bl	__aeabi_fadd
 771              	.LVL87:
 288:Core/Src/Fusion/FusionAhrs.c ****     const FusionVector earthAcceleration = {
 772              		.loc 1 288 24 view .LVU179
 773 00c6 2860     		str	r0, [r5]
 290:Core/Src/Fusion/FusionAhrs.c ****             .axis.y = 2.0f * ((qxqy + qwqz) * A.x + (qwqw - 0.5f + Q.y * Q.y) * A.y + (qyqz - qwqx)
 774              		.loc 1 290 37 view .LVU180
 775 00c8 0299     		ldr	r1, [sp, #8]
 776 00ca 0198     		ldr	r0, [sp, #4]
 777 00cc FFF7FEFF 		bl	__aeabi_fadd
 778              	.LVL88:
 779 00d0 011C     		adds	r1, r0, #0
 780              		.loc 1 290 45 view .LVU181
 781 00d2 5046     		mov	r0, r10
 782 00d4 FFF7FEFF 		bl	__aeabi_fmul
 783              	.LVL89:
 784 00d8 0190     		str	r0, [sp, #4]
 785              	.LVL90:
 786              		.loc 1 290 72 view .LVU182
 787 00da 4146     		mov	r1, r8
 788 00dc 4046     		mov	r0, r8
 789 00de FFF7FEFF 		bl	__aeabi_fmul
 790              	.LVL91:
ARM GAS  /tmp/ccEJb272.s 			page 24


 791 00e2 011C     		adds	r1, r0, #0
 792              		.loc 1 290 66 view .LVU183
 793 00e4 301C     		adds	r0, r6, #0
 794 00e6 FFF7FEFF 		bl	__aeabi_fadd
 795              	.LVL92:
 796 00ea 011C     		adds	r1, r0, #0
 797              		.loc 1 290 79 view .LVU184
 798 00ec 4846     		mov	r0, r9
 799 00ee FFF7FEFF 		bl	__aeabi_fmul
 800              	.LVL93:
 801 00f2 011C     		adds	r1, r0, #0
 802              		.loc 1 290 51 view .LVU185
 803 00f4 0198     		ldr	r0, [sp, #4]
 804 00f6 FFF7FEFF 		bl	__aeabi_fadd
 805              	.LVL94:
 806 00fa 8046     		mov	r8, r0
 807              		.loc 1 290 93 view .LVU186
 808 00fc 5946     		mov	r1, fp
 809 00fe 0498     		ldr	r0, [sp, #16]
 810 0100 FFF7FEFF 		bl	__aeabi_fsub
 811              	.LVL95:
 812 0104 011C     		adds	r1, r0, #0
 813              		.loc 1 290 101 view .LVU187
 814 0106 201C     		adds	r0, r4, #0
 815 0108 FFF7FEFF 		bl	__aeabi_fmul
 816              	.LVL96:
 817 010c 011C     		adds	r1, r0, #0
 818              		.loc 1 290 85 view .LVU188
 819 010e 4046     		mov	r0, r8
 820 0110 FFF7FEFF 		bl	__aeabi_fadd
 821              	.LVL97:
 822              		.loc 1 290 28 view .LVU189
 823 0114 011C     		adds	r1, r0, #0
 824 0116 FFF7FEFF 		bl	__aeabi_fadd
 825              	.LVL98:
 288:Core/Src/Fusion/FusionAhrs.c ****     const FusionVector earthAcceleration = {
 826              		.loc 1 288 24 view .LVU190
 827 011a 6860     		str	r0, [r5, #4]
 291:Core/Src/Fusion/FusionAhrs.c ****             .axis.z = (2.0f * ((qxqz - qwqy) * A.x + (qyqz + qwqx) * A.y + (qwqw - 0.5f + Q.z * Q.z
 828              		.loc 1 291 38 view .LVU191
 829 011c 0099     		ldr	r1, [sp]
 830 011e 0398     		ldr	r0, [sp, #12]
 831 0120 FFF7FEFF 		bl	__aeabi_fsub
 832              	.LVL99:
 833 0124 011C     		adds	r1, r0, #0
 834              		.loc 1 291 46 view .LVU192
 835 0126 5046     		mov	r0, r10
 836 0128 FFF7FEFF 		bl	__aeabi_fmul
 837              	.LVL100:
 838 012c 8046     		mov	r8, r0
 839              		.loc 1 291 60 view .LVU193
 840 012e 0499     		ldr	r1, [sp, #16]
 841 0130 5846     		mov	r0, fp
 842 0132 FFF7FEFF 		bl	__aeabi_fadd
 843              	.LVL101:
 844 0136 011C     		adds	r1, r0, #0
 845              		.loc 1 291 68 view .LVU194
ARM GAS  /tmp/ccEJb272.s 			page 25


 846 0138 4846     		mov	r0, r9
 847 013a FFF7FEFF 		bl	__aeabi_fmul
 848              	.LVL102:
 849 013e 011C     		adds	r1, r0, #0
 850              		.loc 1 291 52 view .LVU195
 851 0140 4046     		mov	r0, r8
 852 0142 FFF7FEFF 		bl	__aeabi_fadd
 853              	.LVL103:
 854 0146 8046     		mov	r8, r0
 855              		.loc 1 291 95 view .LVU196
 856 0148 391C     		adds	r1, r7, #0
 857 014a 381C     		adds	r0, r7, #0
 858 014c FFF7FEFF 		bl	__aeabi_fmul
 859              	.LVL104:
 860 0150 011C     		adds	r1, r0, #0
 861              		.loc 1 291 89 view .LVU197
 862 0152 301C     		adds	r0, r6, #0
 863 0154 FFF7FEFF 		bl	__aeabi_fadd
 864              	.LVL105:
 865 0158 011C     		adds	r1, r0, #0
 866              		.loc 1 291 102 view .LVU198
 867 015a 201C     		adds	r0, r4, #0
 868 015c FFF7FEFF 		bl	__aeabi_fmul
 869              	.LVL106:
 870 0160 011C     		adds	r1, r0, #0
 871              		.loc 1 291 74 view .LVU199
 872 0162 4046     		mov	r0, r8
 873 0164 FFF7FEFF 		bl	__aeabi_fadd
 874              	.LVL107:
 875              		.loc 1 291 29 view .LVU200
 876 0168 011C     		adds	r1, r0, #0
 877 016a FFF7FEFF 		bl	__aeabi_fadd
 878              	.LVL108:
 879              		.loc 1 291 110 view .LVU201
 880 016e FE21     		movs	r1, #254
 881 0170 8905     		lsls	r1, r1, #22
 882 0172 FFF7FEFF 		bl	__aeabi_fsub
 883              	.LVL109:
 288:Core/Src/Fusion/FusionAhrs.c ****             .axis.x = 2.0f * ((qwqw - 0.5f + Q.x * Q.x) * A.x + (qxqy - qwqz) * A.y + (qxqz + qwqy)
 884              		.loc 1 288 24 view .LVU202
 885 0176 A860     		str	r0, [r5, #8]
 292:Core/Src/Fusion/FusionAhrs.c ****     }; // rotation matrix multiplied with the accelerometer, with 1 g subtracted
 293:Core/Src/Fusion/FusionAhrs.c ****     return earthAcceleration;
 886              		.loc 1 293 5 is_stmt 1 view .LVU203
 294:Core/Src/Fusion/FusionAhrs.c **** #undef Q
 295:Core/Src/Fusion/FusionAhrs.c **** #undef A
 296:Core/Src/Fusion/FusionAhrs.c **** }
 887              		.loc 1 296 1 is_stmt 0 view .LVU204
 888 0178 2800     		movs	r0, r5
 889 017a 07B0     		add	sp, sp, #28
 890              	.LVL110:
 891              		.loc 1 296 1 view .LVU205
 892              		@ sp needed
 893              	.LVL111:
 894              	.LVL112:
 895              		.loc 1 296 1 view .LVU206
 896 017c F0BC     		pop	{r4, r5, r6, r7}
ARM GAS  /tmp/ccEJb272.s 			page 26


 897 017e BB46     		mov	fp, r7
 898 0180 B246     		mov	r10, r6
 899 0182 A946     		mov	r9, r5
 900 0184 A046     		mov	r8, r4
 901 0186 F0BD     		pop	{r4, r5, r6, r7, pc}
 902              		.cfi_endproc
 903              	.LFE29:
 905              		.global	__aeabi_fcmple
 906              		.global	__aeabi_fcmpge
 907              		.global	__aeabi_ui2f
 908              		.section	.text.FusionAhrsGetInternalStates,"ax",%progbits
 909              		.align	1
 910              		.global	FusionAhrsGetInternalStates
 911              		.syntax unified
 912              		.code	16
 913              		.thumb_func
 914              		.fpu softvfp
 916              	FusionAhrsGetInternalStates:
 917              	.LVL113:
 918              	.LFB30:
 297:Core/Src/Fusion/FusionAhrs.c **** 
 298:Core/Src/Fusion/FusionAhrs.c **** /**
 299:Core/Src/Fusion/FusionAhrs.c ****  * @brief Returns the AHRS algorithm internal states.
 300:Core/Src/Fusion/FusionAhrs.c ****  * @param ahrs AHRS algorithm structure.
 301:Core/Src/Fusion/FusionAhrs.c ****  * @return AHRS algorithm internal states.
 302:Core/Src/Fusion/FusionAhrs.c ****  */
 303:Core/Src/Fusion/FusionAhrs.c **** FusionAhrsInternalStates FusionAhrsGetInternalStates(const FusionAhrs *const ahrs) {
 919              		.loc 1 303 84 is_stmt 1 view -0
 920              		.cfi_startproc
 921              		@ args = 0, pretend = 0, frame = 96
 922              		@ frame_needed = 0, uses_anonymous_args = 0
 923              		.loc 1 303 84 is_stmt 0 view .LVU208
 924 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 925              	.LCFI10:
 926              		.cfi_def_cfa_offset 20
 927              		.cfi_offset 4, -20
 928              		.cfi_offset 5, -16
 929              		.cfi_offset 6, -12
 930              		.cfi_offset 7, -8
 931              		.cfi_offset 14, -4
 932 0002 D646     		mov	lr, r10
 933 0004 4F46     		mov	r7, r9
 934 0006 4646     		mov	r6, r8
 935 0008 C0B5     		push	{r6, r7, lr}
 936              	.LCFI11:
 937              		.cfi_def_cfa_offset 32
 938              		.cfi_offset 8, -32
 939              		.cfi_offset 9, -28
 940              		.cfi_offset 10, -24
 941 000a 98B0     		sub	sp, sp, #96
 942              	.LCFI12:
 943              		.cfi_def_cfa_offset 128
 944 000c 0500     		movs	r5, r0
 945 000e 0E00     		movs	r6, r1
 304:Core/Src/Fusion/FusionAhrs.c ****     const FusionAhrsInternalStates internalStates = {
 946              		.loc 1 304 5 is_stmt 1 view .LVU209
 947 0010 03AB     		add	r3, sp, #12
ARM GAS  /tmp/ccEJb272.s 			page 27


 948 0012 0A00     		movs	r2, r1
 949 0014 3832     		adds	r2, r2, #56
 950 0016 1900     		movs	r1, r3
 951              	.LVL114:
 952              		.loc 1 304 5 is_stmt 0 view .LVU210
 953 0018 91CA     		ldmia	r2!, {r0, r4, r7}
 954 001a 91C1     		stmia	r1!, {r0, r4, r7}
 955              	.LVL115:
 956              	.LBB76:
 957              	.LBI76:
 221:Core/Inc/Fusion/FusionMath.h **** }
 222:Core/Inc/Fusion/FusionMath.h **** 
 223:Core/Inc/Fusion/FusionMath.h **** /**
 224:Core/Inc/Fusion/FusionMath.h ****  * @brief Returns the sum of the elements.
 225:Core/Inc/Fusion/FusionMath.h ****  * @param vector Vector.
 226:Core/Inc/Fusion/FusionMath.h ****  * @return Sum of the elements.
 227:Core/Inc/Fusion/FusionMath.h ****  */
 228:Core/Inc/Fusion/FusionMath.h **** static inline float FusionVectorSum(const FusionVector vector) {
 229:Core/Inc/Fusion/FusionMath.h ****     return vector.axis.x + vector.axis.y + vector.axis.z;
 230:Core/Inc/Fusion/FusionMath.h **** }
 231:Core/Inc/Fusion/FusionMath.h **** 
 232:Core/Inc/Fusion/FusionMath.h **** /**
 233:Core/Inc/Fusion/FusionMath.h ****  * @brief Returns the multiplication of a vector by a scalar.
 234:Core/Inc/Fusion/FusionMath.h ****  * @param vector Vector.
 235:Core/Inc/Fusion/FusionMath.h ****  * @param scalar Scalar.
 236:Core/Inc/Fusion/FusionMath.h ****  * @return Multiplication of a vector by a scalar.
 237:Core/Inc/Fusion/FusionMath.h ****  */
 238:Core/Inc/Fusion/FusionMath.h **** static inline FusionVector FusionVectorMultiplyScalar(const FusionVector vector, const float scalar
 239:Core/Inc/Fusion/FusionMath.h ****     FusionVector result;
 240:Core/Inc/Fusion/FusionMath.h ****     result.axis.x = vector.axis.x * scalar;
 241:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = vector.axis.y * scalar;
 242:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = vector.axis.z * scalar;
 243:Core/Inc/Fusion/FusionMath.h ****     return result;
 244:Core/Inc/Fusion/FusionMath.h **** }
 245:Core/Inc/Fusion/FusionMath.h **** 
 246:Core/Inc/Fusion/FusionMath.h **** /**
 247:Core/Inc/Fusion/FusionMath.h ****  * @brief Calculates the Hadamard product (element-wise multiplication).
 248:Core/Inc/Fusion/FusionMath.h ****  * @param vectorA Vector A.
 249:Core/Inc/Fusion/FusionMath.h ****  * @param vectorB Vector B.
 250:Core/Inc/Fusion/FusionMath.h ****  * @return Hadamard product.
 251:Core/Inc/Fusion/FusionMath.h ****  */
 252:Core/Inc/Fusion/FusionMath.h **** static inline FusionVector FusionVectorHadamardProduct(const FusionVector vectorA, const FusionVect
 253:Core/Inc/Fusion/FusionMath.h ****     FusionVector result;
 254:Core/Inc/Fusion/FusionMath.h ****     result.axis.x = vectorA.axis.x * vectorB.axis.x;
 255:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = vectorA.axis.y * vectorB.axis.y;
 256:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = vectorA.axis.z * vectorB.axis.z;
 257:Core/Inc/Fusion/FusionMath.h ****     return result;
 258:Core/Inc/Fusion/FusionMath.h **** }
 259:Core/Inc/Fusion/FusionMath.h **** 
 260:Core/Inc/Fusion/FusionMath.h **** /**
 261:Core/Inc/Fusion/FusionMath.h ****  * @brief Returns the cross product.
 262:Core/Inc/Fusion/FusionMath.h ****  * @param vectorA Vector A.
 263:Core/Inc/Fusion/FusionMath.h ****  * @param vectorB Vector B.
 264:Core/Inc/Fusion/FusionMath.h ****  * @return Cross product.
 265:Core/Inc/Fusion/FusionMath.h ****  */
 266:Core/Inc/Fusion/FusionMath.h **** static inline FusionVector FusionVectorCrossProduct(const FusionVector vectorA, const FusionVector 
 267:Core/Inc/Fusion/FusionMath.h **** #define A vectorA.axis
ARM GAS  /tmp/ccEJb272.s 			page 28


 268:Core/Inc/Fusion/FusionMath.h **** #define B vectorB.axis
 269:Core/Inc/Fusion/FusionMath.h ****     FusionVector result;
 270:Core/Inc/Fusion/FusionMath.h ****     result.axis.x = A.y * B.z - A.z * B.y;
 271:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = A.z * B.x - A.x * B.z;
 272:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = A.x * B.y - A.y * B.x;
 273:Core/Inc/Fusion/FusionMath.h ****     return result;
 274:Core/Inc/Fusion/FusionMath.h **** #undef A
 275:Core/Inc/Fusion/FusionMath.h **** #undef B
 276:Core/Inc/Fusion/FusionMath.h **** }
 277:Core/Inc/Fusion/FusionMath.h **** 
 278:Core/Inc/Fusion/FusionMath.h **** /**
 279:Core/Inc/Fusion/FusionMath.h ****  * @brief Returns the vector magnitude squared.
 280:Core/Inc/Fusion/FusionMath.h ****  * @param vector Vector.
 281:Core/Inc/Fusion/FusionMath.h ****  * @return Vector magnitude squared.
 282:Core/Inc/Fusion/FusionMath.h ****  */
 283:Core/Inc/Fusion/FusionMath.h **** static inline float FusionVectorMagnitudeSquared(const FusionVector vector) {
 284:Core/Inc/Fusion/FusionMath.h ****     return FusionVectorSum(FusionVectorHadamardProduct(vector, vector));
 285:Core/Inc/Fusion/FusionMath.h **** }
 286:Core/Inc/Fusion/FusionMath.h **** 
 287:Core/Inc/Fusion/FusionMath.h **** /**
 288:Core/Inc/Fusion/FusionMath.h ****  * @brief Returns the vector magnitude.
 289:Core/Inc/Fusion/FusionMath.h ****  * @param vector Vector.
 290:Core/Inc/Fusion/FusionMath.h ****  * @return Vector magnitude.
 291:Core/Inc/Fusion/FusionMath.h ****  */
 292:Core/Inc/Fusion/FusionMath.h **** static inline float FusionVectorMagnitude(const FusionVector vector) {
 958              		.loc 2 292 21 is_stmt 1 view .LVU211
 959              	.LBB77:
 293:Core/Inc/Fusion/FusionMath.h ****     return sqrtf(FusionVectorMagnitudeSquared(vector));
 960              		.loc 2 293 5 view .LVU212
 961 001c 0C00     		movs	r4, r1
 962 001e 0A00     		movs	r2, r1
 963 0020 83CB     		ldmia	r3!, {r0, r1, r7}
 964 0022 83C2     		stmia	r2!, {r0, r1, r7}
 965              	.LBB78:
 966              	.LBI78:
 283:Core/Inc/Fusion/FusionMath.h ****     return FusionVectorSum(FusionVectorHadamardProduct(vector, vector));
 967              		.loc 2 283 21 view .LVU213
 968              	.LBB79:
 284:Core/Inc/Fusion/FusionMath.h **** }
 969              		.loc 2 284 5 view .LVU214
 970 0024 0C22     		movs	r2, #12
 971 0026 2100     		movs	r1, r4
 972 0028 0CA8     		add	r0, sp, #48
 973 002a FFF7FEFF 		bl	memcpy
 974              	.LVL116:
 975 002e 09AF     		add	r7, sp, #36
 976 0030 3B00     		movs	r3, r7
 977 0032 07CC     		ldmia	r4!, {r0, r1, r2}
 978 0034 07C3     		stmia	r3!, {r0, r1, r2}
 979              	.LBB80:
 980              	.LBI80:
 252:Core/Inc/Fusion/FusionMath.h ****     FusionVector result;
 981              		.loc 2 252 28 view .LVU215
 982              	.LBB81:
 253:Core/Inc/Fusion/FusionMath.h ****     result.axis.x = vectorA.axis.x * vectorB.axis.x;
 983              		.loc 2 253 5 view .LVU216
 254:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = vectorA.axis.y * vectorB.axis.y;
ARM GAS  /tmp/ccEJb272.s 			page 29


 984              		.loc 2 254 5 view .LVU217
 254:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = vectorA.axis.y * vectorB.axis.y;
 985              		.loc 2 254 36 is_stmt 0 view .LVU218
 986 0036 0999     		ldr	r1, [sp, #36]
 987 0038 0C98     		ldr	r0, [sp, #48]
 988 003a FFF7FEFF 		bl	__aeabi_fmul
 989              	.LVL117:
 990 003e 8046     		mov	r8, r0
 254:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = vectorA.axis.y * vectorB.axis.y;
 991              		.loc 2 254 19 view .LVU219
 992 0040 0FAC     		add	r4, sp, #60
 993 0042 0F90     		str	r0, [sp, #60]
 255:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = vectorA.axis.z * vectorB.axis.z;
 994              		.loc 2 255 5 is_stmt 1 view .LVU220
 255:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = vectorA.axis.z * vectorB.axis.z;
 995              		.loc 2 255 33 is_stmt 0 view .LVU221
 996 0044 0D9B     		ldr	r3, [sp, #52]
 997 0046 0193     		str	r3, [sp, #4]
 255:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = vectorA.axis.z * vectorB.axis.z;
 998              		.loc 2 255 36 view .LVU222
 999 0048 0A99     		ldr	r1, [sp, #40]
 1000 004a 181C     		adds	r0, r3, #0
 1001 004c FFF7FEFF 		bl	__aeabi_fmul
 1002              	.LVL118:
 1003 0050 8146     		mov	r9, r0
 255:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = vectorA.axis.z * vectorB.axis.z;
 1004              		.loc 2 255 19 view .LVU223
 1005 0052 1090     		str	r0, [sp, #64]
 256:Core/Inc/Fusion/FusionMath.h ****     return result;
 1006              		.loc 2 256 5 is_stmt 1 view .LVU224
 256:Core/Inc/Fusion/FusionMath.h ****     return result;
 1007              		.loc 2 256 33 is_stmt 0 view .LVU225
 1008 0054 0E98     		ldr	r0, [sp, #56]
 256:Core/Inc/Fusion/FusionMath.h ****     return result;
 1009              		.loc 2 256 50 view .LVU226
 1010 0056 0B99     		ldr	r1, [sp, #44]
 256:Core/Inc/Fusion/FusionMath.h ****     return result;
 1011              		.loc 2 256 36 view .LVU227
 1012 0058 FFF7FEFF 		bl	__aeabi_fmul
 1013              	.LVL119:
 1014 005c 8246     		mov	r10, r0
 256:Core/Inc/Fusion/FusionMath.h ****     return result;
 1015              		.loc 2 256 19 view .LVU228
 1016 005e 1190     		str	r0, [sp, #68]
 257:Core/Inc/Fusion/FusionMath.h **** }
 1017              		.loc 2 257 5 is_stmt 1 view .LVU229
 257:Core/Inc/Fusion/FusionMath.h **** }
 1018              		.loc 2 257 12 is_stmt 0 view .LVU230
 1019 0060 12AB     		add	r3, sp, #72
 1020 0062 9C46     		mov	ip, r3
 1021 0064 1A00     		movs	r2, r3
 1022 0066 2100     		movs	r1, r4
 1023 0068 89C9     		ldmia	r1!, {r0, r3, r7}
 1024 006a 89C2     		stmia	r2!, {r0, r3, r7}
 1025 006c 6346     		mov	r3, ip
 1026 006e 07CB     		ldmia	r3!, {r0, r1, r2}
 1027 0070 07C4     		stmia	r4!, {r0, r1, r2}
ARM GAS  /tmp/ccEJb272.s 			page 30


 1028              	.LBE81:
 1029              	.LBE80:
 1030              	.LBB82:
 1031              	.LBI82:
 228:Core/Inc/Fusion/FusionMath.h ****     return vector.axis.x + vector.axis.y + vector.axis.z;
 1032              		.loc 2 228 21 is_stmt 1 view .LVU231
 1033              	.LBB83:
 229:Core/Inc/Fusion/FusionMath.h **** }
 1034              		.loc 2 229 5 view .LVU232
 229:Core/Inc/Fusion/FusionMath.h **** }
 1035              		.loc 2 229 26 is_stmt 0 view .LVU233
 1036 0072 4946     		mov	r1, r9
 1037 0074 4046     		mov	r0, r8
 1038 0076 FFF7FEFF 		bl	__aeabi_fadd
 1039              	.LVL120:
 1040 007a 011C     		adds	r1, r0, #0
 229:Core/Inc/Fusion/FusionMath.h **** }
 1041              		.loc 2 229 42 view .LVU234
 1042 007c 5046     		mov	r0, r10
 1043 007e FFF7FEFF 		bl	__aeabi_fadd
 1044              	.LVL121:
 1045              	.LBE83:
 1046              	.LBE82:
 1047              	.LBE79:
 1048              	.LBE78:
 1049              		.loc 2 293 12 view .LVU235
 1050 0082 FFF7FEFF 		bl	sqrtf
 1051              	.LVL122:
 1052              	.LBE77:
 1053              	.LBE76:
 305:Core/Src/Fusion/FusionAhrs.c ****             .accelerationError = FusionRadiansToDegrees(FusionAsin(2.0f * FusionVectorMagnitude(ahr
 1054              		.loc 1 305 34 view .LVU236
 1055 0086 011C     		adds	r1, r0, #0
 1056 0088 FFF7FEFF 		bl	__aeabi_fadd
 1057              	.LVL123:
 1058 008c 041C     		adds	r4, r0, #0
 1059              	.LVL124:
 1060              	.LBB84:
 1061              	.LBI84:
 148:Core/Inc/Fusion/FusionMath.h ****     if (value <= -1.0f) {
 1062              		.loc 2 148 21 is_stmt 1 view .LVU237
 1063              	.LBB85:
 149:Core/Inc/Fusion/FusionMath.h ****         return (float) M_PI / -2.0f;
 1064              		.loc 2 149 5 view .LVU238
 149:Core/Inc/Fusion/FusionMath.h ****         return (float) M_PI / -2.0f;
 1065              		.loc 2 149 8 is_stmt 0 view .LVU239
 1066 008e 4F49     		ldr	r1, .L33
 1067 0090 FFF7FEFF 		bl	__aeabi_fcmple
 1068              	.LVL125:
 149:Core/Inc/Fusion/FusionMath.h ****         return (float) M_PI / -2.0f;
 1069              		.loc 2 149 8 view .LVU240
 1070 0094 0028     		cmp	r0, #0
 1071 0096 00D0     		beq	.LCB794
 1072 0098 8CE0     		b	.L25	@long jump
 1073              	.LCB794:
 152:Core/Inc/Fusion/FusionMath.h ****         return (float) M_PI / 2.0f;
 1074              		.loc 2 152 5 is_stmt 1 view .LVU241
ARM GAS  /tmp/ccEJb272.s 			page 31


 152:Core/Inc/Fusion/FusionMath.h ****         return (float) M_PI / 2.0f;
 1075              		.loc 2 152 8 is_stmt 0 view .LVU242
 1076 009a FE21     		movs	r1, #254
 1077 009c 8905     		lsls	r1, r1, #22
 1078 009e 201C     		adds	r0, r4, #0
 1079 00a0 FFF7FEFF 		bl	__aeabi_fcmpge
 1080              	.LVL126:
 1081 00a4 0028     		cmp	r0, #0
 1082 00a6 00D1     		bne	.LCB802
 1083 00a8 80E0     		b	.L31	@long jump
 1084              	.LCB802:
 153:Core/Inc/Fusion/FusionMath.h ****     }
 1085              		.loc 2 153 29 view .LVU243
 1086 00aa 4948     		ldr	r0, .L33+4
 1087              	.L21:
 1088              	.LVL127:
 153:Core/Inc/Fusion/FusionMath.h ****     }
 1089              		.loc 2 153 29 view .LVU244
 1090              	.LBE85:
 1091              	.LBE84:
 1092              	.LBB87:
 1093              	.LBI87:
 136:Core/Inc/Fusion/FusionMath.h ****     return radians * (180.0f / (float) M_PI);
 1094              		.loc 2 136 21 is_stmt 1 view .LVU245
 1095              	.LBB88:
 137:Core/Inc/Fusion/FusionMath.h **** }
 1096              		.loc 2 137 5 view .LVU246
 137:Core/Inc/Fusion/FusionMath.h **** }
 1097              		.loc 2 137 20 is_stmt 0 view .LVU247
 1098 00ac 4949     		ldr	r1, .L33+8
 1099 00ae FFF7FEFF 		bl	__aeabi_fmul
 1100              	.LVL128:
 137:Core/Inc/Fusion/FusionMath.h **** }
 1101              		.loc 2 137 20 view .LVU248
 1102              	.LBE88:
 1103              	.LBE87:
 304:Core/Src/Fusion/FusionAhrs.c ****             .accelerationError = FusionRadiansToDegrees(FusionAsin(2.0f * FusionVectorMagnitude(ahr
 1104              		.loc 1 304 36 view .LVU249
 1105 00b2 2860     		str	r0, [r5]
 306:Core/Src/Fusion/FusionAhrs.c ****             .accelerometerIgnored = ahrs->accelerometerIgnored,
 1106              		.loc 1 306 41 view .LVU250
 1107 00b4 5023     		movs	r3, #80
 1108 00b6 F35C     		ldrb	r3, [r6, r3]
 304:Core/Src/Fusion/FusionAhrs.c ****             .accelerationError = FusionRadiansToDegrees(FusionAsin(2.0f * FusionVectorMagnitude(ahr
 1109              		.loc 1 304 36 view .LVU251
 1110 00b8 2B71     		strb	r3, [r5, #4]
 307:Core/Src/Fusion/FusionAhrs.c ****             .accelerationRejectionTimer = ahrs->settings.rejectionTimeout == 0 ? 0.0f : (float) ahr
 1111              		.loc 1 307 57 view .LVU252
 1112 00ba F468     		ldr	r4, [r6, #12]
 1113              		.loc 1 307 87 view .LVU253
 1114 00bc 002C     		cmp	r4, #0
 1115 00be 00D1     		bne	.LCB827
 1116 00c0 7AE0     		b	.L27	@long jump
 1117              	.LCB827:
 1118              		.loc 1 307 89 discriminator 1 view .LVU254
 1119 00c2 706D     		ldr	r0, [r6, #84]
 1120 00c4 FFF7FEFF 		bl	__aeabi_ui2f
ARM GAS  /tmp/ccEJb272.s 			page 32


 1121              	.LVL129:
 1122 00c8 071C     		adds	r7, r0, #0
 1123              		.loc 1 307 132 discriminator 1 view .LVU255
 1124 00ca 2000     		movs	r0, r4
 1125 00cc FFF7FEFF 		bl	__aeabi_ui2f
 1126              	.LVL130:
 1127 00d0 011C     		adds	r1, r0, #0
 1128              		.loc 1 307 87 discriminator 1 view .LVU256
 1129 00d2 381C     		adds	r0, r7, #0
 1130 00d4 FFF7FEFF 		bl	__aeabi_fdiv
 1131              	.LVL131:
 1132              	.L22:
 304:Core/Src/Fusion/FusionAhrs.c ****             .accelerationError = FusionRadiansToDegrees(FusionAsin(2.0f * FusionVectorMagnitude(ahr
 1133              		.loc 1 304 36 view .LVU257
 1134 00d8 A860     		str	r0, [r5, #8]
 1135 00da 03AB     		add	r3, sp, #12
 1136 00dc 3200     		movs	r2, r6
 1137 00de 4432     		adds	r2, r2, #68
 1138 00e0 1900     		movs	r1, r3
 1139 00e2 91CA     		ldmia	r2!, {r0, r4, r7}
 1140 00e4 91C1     		stmia	r1!, {r0, r4, r7}
 1141              	.LBB89:
 1142              	.LBI89:
 292:Core/Inc/Fusion/FusionMath.h ****     return sqrtf(FusionVectorMagnitudeSquared(vector));
 1143              		.loc 2 292 21 is_stmt 1 view .LVU258
 1144              	.LBB90:
 1145              		.loc 2 293 5 view .LVU259
 1146 00e6 0C00     		movs	r4, r1
 1147 00e8 0A00     		movs	r2, r1
 1148 00ea 83CB     		ldmia	r3!, {r0, r1, r7}
 1149 00ec 83C2     		stmia	r2!, {r0, r1, r7}
 1150              	.LBB91:
 1151              	.LBI91:
 283:Core/Inc/Fusion/FusionMath.h ****     return FusionVectorSum(FusionVectorHadamardProduct(vector, vector));
 1152              		.loc 2 283 21 view .LVU260
 1153              	.LBB92:
 284:Core/Inc/Fusion/FusionMath.h **** }
 1154              		.loc 2 284 5 view .LVU261
 1155 00ee 0C22     		movs	r2, #12
 1156 00f0 2100     		movs	r1, r4
 1157 00f2 0CA8     		add	r0, sp, #48
 1158 00f4 FFF7FEFF 		bl	memcpy
 1159              	.LVL132:
 1160 00f8 09AF     		add	r7, sp, #36
 1161 00fa 3B00     		movs	r3, r7
 1162 00fc 07CC     		ldmia	r4!, {r0, r1, r2}
 1163 00fe 07C3     		stmia	r3!, {r0, r1, r2}
 1164              	.LBB93:
 1165              	.LBI93:
 252:Core/Inc/Fusion/FusionMath.h ****     FusionVector result;
 1166              		.loc 2 252 28 view .LVU262
 1167              	.LBB94:
 253:Core/Inc/Fusion/FusionMath.h ****     result.axis.x = vectorA.axis.x * vectorB.axis.x;
 1168              		.loc 2 253 5 view .LVU263
 254:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = vectorA.axis.y * vectorB.axis.y;
 1169              		.loc 2 254 5 view .LVU264
 254:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = vectorA.axis.y * vectorB.axis.y;
ARM GAS  /tmp/ccEJb272.s 			page 33


 1170              		.loc 2 254 36 is_stmt 0 view .LVU265
 1171 0100 0999     		ldr	r1, [sp, #36]
 1172 0102 0C98     		ldr	r0, [sp, #48]
 1173 0104 FFF7FEFF 		bl	__aeabi_fmul
 1174              	.LVL133:
 1175 0108 8046     		mov	r8, r0
 254:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = vectorA.axis.y * vectorB.axis.y;
 1176              		.loc 2 254 19 view .LVU266
 1177 010a 0FAC     		add	r4, sp, #60
 1178 010c 0F90     		str	r0, [sp, #60]
 255:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = vectorA.axis.z * vectorB.axis.z;
 1179              		.loc 2 255 5 is_stmt 1 view .LVU267
 255:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = vectorA.axis.z * vectorB.axis.z;
 1180              		.loc 2 255 33 is_stmt 0 view .LVU268
 1181 010e 0D9B     		ldr	r3, [sp, #52]
 1182 0110 0193     		str	r3, [sp, #4]
 255:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = vectorA.axis.z * vectorB.axis.z;
 1183              		.loc 2 255 36 view .LVU269
 1184 0112 0A99     		ldr	r1, [sp, #40]
 1185 0114 181C     		adds	r0, r3, #0
 1186 0116 FFF7FEFF 		bl	__aeabi_fmul
 1187              	.LVL134:
 1188 011a 8146     		mov	r9, r0
 255:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = vectorA.axis.z * vectorB.axis.z;
 1189              		.loc 2 255 19 view .LVU270
 1190 011c 1090     		str	r0, [sp, #64]
 256:Core/Inc/Fusion/FusionMath.h ****     return result;
 1191              		.loc 2 256 5 is_stmt 1 view .LVU271
 256:Core/Inc/Fusion/FusionMath.h ****     return result;
 1192              		.loc 2 256 33 is_stmt 0 view .LVU272
 1193 011e 0E98     		ldr	r0, [sp, #56]
 256:Core/Inc/Fusion/FusionMath.h ****     return result;
 1194              		.loc 2 256 50 view .LVU273
 1195 0120 0B99     		ldr	r1, [sp, #44]
 256:Core/Inc/Fusion/FusionMath.h ****     return result;
 1196              		.loc 2 256 36 view .LVU274
 1197 0122 FFF7FEFF 		bl	__aeabi_fmul
 1198              	.LVL135:
 1199 0126 8246     		mov	r10, r0
 256:Core/Inc/Fusion/FusionMath.h ****     return result;
 1200              		.loc 2 256 19 view .LVU275
 1201 0128 1190     		str	r0, [sp, #68]
 257:Core/Inc/Fusion/FusionMath.h **** }
 1202              		.loc 2 257 5 is_stmt 1 view .LVU276
 257:Core/Inc/Fusion/FusionMath.h **** }
 1203              		.loc 2 257 12 is_stmt 0 view .LVU277
 1204 012a 15AB     		add	r3, sp, #84
 1205 012c 9C46     		mov	ip, r3
 1206 012e 1A00     		movs	r2, r3
 1207 0130 2100     		movs	r1, r4
 1208 0132 89C9     		ldmia	r1!, {r0, r3, r7}
 1209 0134 89C2     		stmia	r2!, {r0, r3, r7}
 1210 0136 6346     		mov	r3, ip
 1211 0138 07CB     		ldmia	r3!, {r0, r1, r2}
 1212 013a 07C4     		stmia	r4!, {r0, r1, r2}
 1213              	.LBE94:
 1214              	.LBE93:
ARM GAS  /tmp/ccEJb272.s 			page 34


 1215              	.LBB95:
 1216              	.LBI95:
 228:Core/Inc/Fusion/FusionMath.h ****     return vector.axis.x + vector.axis.y + vector.axis.z;
 1217              		.loc 2 228 21 is_stmt 1 view .LVU278
 1218              	.LBB96:
 229:Core/Inc/Fusion/FusionMath.h **** }
 1219              		.loc 2 229 5 view .LVU279
 229:Core/Inc/Fusion/FusionMath.h **** }
 1220              		.loc 2 229 26 is_stmt 0 view .LVU280
 1221 013c 4946     		mov	r1, r9
 1222 013e 4046     		mov	r0, r8
 1223 0140 FFF7FEFF 		bl	__aeabi_fadd
 1224              	.LVL136:
 1225 0144 011C     		adds	r1, r0, #0
 229:Core/Inc/Fusion/FusionMath.h **** }
 1226              		.loc 2 229 42 view .LVU281
 1227 0146 5046     		mov	r0, r10
 1228 0148 FFF7FEFF 		bl	__aeabi_fadd
 1229              	.LVL137:
 1230              	.LBE96:
 1231              	.LBE95:
 1232              	.LBE92:
 1233              	.LBE91:
 1234              		.loc 2 293 12 view .LVU282
 1235 014c FFF7FEFF 		bl	sqrtf
 1236              	.LVL138:
 1237              	.LBE90:
 1238              	.LBE89:
 308:Core/Src/Fusion/FusionAhrs.c ****             .magneticError = FusionRadiansToDegrees(FusionAsin(2.0f * FusionVectorMagnitude(ahrs->h
 1239              		.loc 1 308 30 view .LVU283
 1240 0150 011C     		adds	r1, r0, #0
 1241 0152 FFF7FEFF 		bl	__aeabi_fadd
 1242              	.LVL139:
 1243 0156 041C     		adds	r4, r0, #0
 1244              	.LVL140:
 1245              	.LBB97:
 1246              	.LBI97:
 148:Core/Inc/Fusion/FusionMath.h ****     if (value <= -1.0f) {
 1247              		.loc 2 148 21 is_stmt 1 view .LVU284
 1248              	.LBB98:
 149:Core/Inc/Fusion/FusionMath.h ****         return (float) M_PI / -2.0f;
 1249              		.loc 2 149 5 view .LVU285
 149:Core/Inc/Fusion/FusionMath.h ****         return (float) M_PI / -2.0f;
 1250              		.loc 2 149 8 is_stmt 0 view .LVU286
 1251 0158 1C49     		ldr	r1, .L33
 1252 015a FFF7FEFF 		bl	__aeabi_fcmple
 1253              	.LVL141:
 149:Core/Inc/Fusion/FusionMath.h ****         return (float) M_PI / -2.0f;
 1254              		.loc 2 149 8 view .LVU287
 1255 015e 0028     		cmp	r0, #0
 1256 0160 30D1     		bne	.L28
 152:Core/Inc/Fusion/FusionMath.h ****         return (float) M_PI / 2.0f;
 1257              		.loc 2 152 5 is_stmt 1 view .LVU288
 152:Core/Inc/Fusion/FusionMath.h ****         return (float) M_PI / 2.0f;
 1258              		.loc 2 152 8 is_stmt 0 view .LVU289
 1259 0162 FE21     		movs	r1, #254
 1260 0164 8905     		lsls	r1, r1, #22
ARM GAS  /tmp/ccEJb272.s 			page 35


 1261 0166 201C     		adds	r0, r4, #0
 1262 0168 FFF7FEFF 		bl	__aeabi_fcmpge
 1263              	.LVL142:
 1264 016c 0028     		cmp	r0, #0
 1265 016e 25D0     		beq	.L32
 153:Core/Inc/Fusion/FusionMath.h ****     }
 1266              		.loc 2 153 29 view .LVU290
 1267 0170 1748     		ldr	r0, .L33+4
 1268              	.L23:
 1269              	.LVL143:
 153:Core/Inc/Fusion/FusionMath.h ****     }
 1270              		.loc 2 153 29 view .LVU291
 1271              	.LBE98:
 1272              	.LBE97:
 1273              	.LBB100:
 1274              	.LBI100:
 136:Core/Inc/Fusion/FusionMath.h ****     return radians * (180.0f / (float) M_PI);
 1275              		.loc 2 136 21 is_stmt 1 view .LVU292
 1276              	.LBB101:
 137:Core/Inc/Fusion/FusionMath.h **** }
 1277              		.loc 2 137 5 view .LVU293
 137:Core/Inc/Fusion/FusionMath.h **** }
 1278              		.loc 2 137 20 is_stmt 0 view .LVU294
 1279 0172 1849     		ldr	r1, .L33+8
 1280 0174 FFF7FEFF 		bl	__aeabi_fmul
 1281              	.LVL144:
 137:Core/Inc/Fusion/FusionMath.h **** }
 1282              		.loc 2 137 20 view .LVU295
 1283              	.LBE101:
 1284              	.LBE100:
 304:Core/Src/Fusion/FusionAhrs.c ****             .accelerationError = FusionRadiansToDegrees(FusionAsin(2.0f * FusionVectorMagnitude(ahr
 1285              		.loc 1 304 36 view .LVU296
 1286 0178 E860     		str	r0, [r5, #12]
 309:Core/Src/Fusion/FusionAhrs.c ****             .magnetometerIgnored = ahrs->magnetometerIgnored,
 1287              		.loc 1 309 40 view .LVU297
 1288 017a 5923     		movs	r3, #89
 1289 017c F35C     		ldrb	r3, [r6, r3]
 304:Core/Src/Fusion/FusionAhrs.c ****             .accelerationError = FusionRadiansToDegrees(FusionAsin(2.0f * FusionVectorMagnitude(ahr
 1290              		.loc 1 304 36 view .LVU298
 1291 017e 2B74     		strb	r3, [r5, #16]
 310:Core/Src/Fusion/FusionAhrs.c ****             .magneticRejectionTimer = ahrs->settings.rejectionTimeout == 0 ? 0.0f : (float) ahrs->m
 1292              		.loc 1 310 53 view .LVU299
 1293 0180 F468     		ldr	r4, [r6, #12]
 1294              		.loc 1 310 83 view .LVU300
 1295 0182 002C     		cmp	r4, #0
 1296 0184 20D0     		beq	.L30
 1297              		.loc 1 310 97 discriminator 1 view .LVU301
 1298 0186 F06D     		ldr	r0, [r6, #92]
 1299              		.loc 1 310 85 discriminator 1 view .LVU302
 1300 0188 FFF7FEFF 		bl	__aeabi_ui2f
 1301              	.LVL145:
 1302 018c 061C     		adds	r6, r0, #0
 1303              	.LVL146:
 1304              		.loc 1 310 124 discriminator 1 view .LVU303
 1305 018e 2000     		movs	r0, r4
 1306 0190 FFF7FEFF 		bl	__aeabi_ui2f
 1307              	.LVL147:
ARM GAS  /tmp/ccEJb272.s 			page 36


 1308 0194 011C     		adds	r1, r0, #0
 1309              		.loc 1 310 83 discriminator 1 view .LVU304
 1310 0196 301C     		adds	r0, r6, #0
 1311 0198 FFF7FEFF 		bl	__aeabi_fdiv
 1312              	.LVL148:
 1313              	.L24:
 304:Core/Src/Fusion/FusionAhrs.c ****             .accelerationError = FusionRadiansToDegrees(FusionAsin(2.0f * FusionVectorMagnitude(ahr
 1314              		.loc 1 304 36 view .LVU305
 1315 019c 6861     		str	r0, [r5, #20]
 311:Core/Src/Fusion/FusionAhrs.c ****     };
 312:Core/Src/Fusion/FusionAhrs.c ****     return internalStates;
 1316              		.loc 1 312 5 is_stmt 1 view .LVU306
 313:Core/Src/Fusion/FusionAhrs.c **** }
 1317              		.loc 1 313 1 is_stmt 0 view .LVU307
 1318 019e 2800     		movs	r0, r5
 1319 01a0 18B0     		add	sp, sp, #96
 1320              		@ sp needed
 1321              	.LVL149:
 1322              		.loc 1 313 1 view .LVU308
 1323 01a2 E0BC     		pop	{r5, r6, r7}
 1324 01a4 BA46     		mov	r10, r7
 1325 01a6 B146     		mov	r9, r6
 1326 01a8 A846     		mov	r8, r5
 1327 01aa F0BD     		pop	{r4, r5, r6, r7, pc}
 1328              	.LVL150:
 1329              	.L31:
 1330              	.LBB102:
 1331              	.LBB86:
 155:Core/Inc/Fusion/FusionMath.h **** }
 1332              		.loc 2 155 5 is_stmt 1 view .LVU309
 155:Core/Inc/Fusion/FusionMath.h **** }
 1333              		.loc 2 155 12 is_stmt 0 view .LVU310
 1334 01ac 201C     		adds	r0, r4, #0
 1335 01ae FFF7FEFF 		bl	asinf
 1336              	.LVL151:
 1337 01b2 7BE7     		b	.L21
 1338              	.L25:
 150:Core/Inc/Fusion/FusionMath.h ****     }
 1339              		.loc 2 150 29 view .LVU311
 1340 01b4 0848     		ldr	r0, .L33+12
 1341 01b6 79E7     		b	.L21
 1342              	.LVL152:
 1343              	.L27:
 150:Core/Inc/Fusion/FusionMath.h ****     }
 1344              		.loc 2 150 29 view .LVU312
 1345              	.LBE86:
 1346              	.LBE102:
 307:Core/Src/Fusion/FusionAhrs.c ****             .magneticError = FusionRadiansToDegrees(FusionAsin(2.0f * FusionVectorMagnitude(ahrs->h
 1347              		.loc 1 307 87 view .LVU313
 1348 01b8 0020     		movs	r0, #0
 1349 01ba 8DE7     		b	.L22
 1350              	.LVL153:
 1351              	.L32:
 1352              	.LBB103:
 1353              	.LBB99:
 155:Core/Inc/Fusion/FusionMath.h **** }
 1354              		.loc 2 155 5 is_stmt 1 view .LVU314
ARM GAS  /tmp/ccEJb272.s 			page 37


 155:Core/Inc/Fusion/FusionMath.h **** }
 1355              		.loc 2 155 12 is_stmt 0 view .LVU315
 1356 01bc 201C     		adds	r0, r4, #0
 1357 01be FFF7FEFF 		bl	asinf
 1358              	.LVL154:
 1359 01c2 D6E7     		b	.L23
 1360              	.L28:
 150:Core/Inc/Fusion/FusionMath.h ****     }
 1361              		.loc 2 150 29 view .LVU316
 1362 01c4 0448     		ldr	r0, .L33+12
 1363 01c6 D4E7     		b	.L23
 1364              	.LVL155:
 1365              	.L30:
 150:Core/Inc/Fusion/FusionMath.h ****     }
 1366              		.loc 2 150 29 view .LVU317
 1367              	.LBE99:
 1368              	.LBE103:
 310:Core/Src/Fusion/FusionAhrs.c ****     };
 1369              		.loc 1 310 83 view .LVU318
 1370 01c8 0020     		movs	r0, #0
 1371 01ca E7E7     		b	.L24
 1372              	.L34:
 1373              		.align	2
 1374              	.L33:
 1375 01cc 000080BF 		.word	-1082130432
 1376 01d0 DB0FC93F 		.word	1070141403
 1377 01d4 E02E6542 		.word	1113927392
 1378 01d8 DB0FC9BF 		.word	-1077342245
 1379              		.cfi_endproc
 1380              	.LFE30:
 1382              		.section	.text.FusionAhrsGetFlags,"ax",%progbits
 1383              		.align	1
 1384              		.global	FusionAhrsGetFlags
 1385              		.syntax unified
 1386              		.code	16
 1387              		.thumb_func
 1388              		.fpu softvfp
 1390              	FusionAhrsGetFlags:
 1391              	.LVL156:
 1392              	.LFB31:
 314:Core/Src/Fusion/FusionAhrs.c **** 
 315:Core/Src/Fusion/FusionAhrs.c **** /**
 316:Core/Src/Fusion/FusionAhrs.c ****  * @brief Returns the AHRS algorithm flags.
 317:Core/Src/Fusion/FusionAhrs.c ****  * @param ahrs AHRS algorithm structure.
 318:Core/Src/Fusion/FusionAhrs.c ****  * @return AHRS algorithm flags.
 319:Core/Src/Fusion/FusionAhrs.c ****  */
 320:Core/Src/Fusion/FusionAhrs.c **** FusionAhrsFlags FusionAhrsGetFlags(FusionAhrs *const ahrs) {
 1393              		.loc 1 320 60 is_stmt 1 view -0
 1394              		.cfi_startproc
 1395              		@ args = 0, pretend = 0, frame = 0
 1396              		@ frame_needed = 0, uses_anonymous_args = 0
 1397              		@ link register save eliminated.
 321:Core/Src/Fusion/FusionAhrs.c ****     const unsigned int warningTimeout = ahrs->settings.rejectionTimeout / 4;
 1398              		.loc 1 321 5 view .LVU320
 1399              		.loc 1 321 24 is_stmt 0 view .LVU321
 1400 0000 CB68     		ldr	r3, [r1, #12]
 1401 0002 9B08     		lsrs	r3, r3, #2
ARM GAS  /tmp/ccEJb272.s 			page 38


 1402              	.LVL157:
 322:Core/Src/Fusion/FusionAhrs.c ****     const FusionAhrsFlags flags = {
 1403              		.loc 1 322 5 is_stmt 1 view .LVU322
 323:Core/Src/Fusion/FusionAhrs.c ****             .initialising = ahrs->initialising,
 1404              		.loc 1 323 33 is_stmt 0 view .LVU323
 1405 0004 2C22     		movs	r2, #44
 1406 0006 8A5C     		ldrb	r2, [r1, r2]
 322:Core/Src/Fusion/FusionAhrs.c ****     const FusionAhrsFlags flags = {
 1407              		.loc 1 322 27 view .LVU324
 1408 0008 0270     		strb	r2, [r0]
 324:Core/Src/Fusion/FusionAhrs.c ****             .accelerationRejectionWarning = ahrs->accelerationRejectionTimer > warningTimeout,
 1409              		.loc 1 324 78 view .LVU325
 1410 000a 4A6D     		ldr	r2, [r1, #84]
 1411 000c 9342     		cmp	r3, r2
 1412 000e 9241     		sbcs	r2, r2, r2
 1413 0010 5242     		rsbs	r2, r2, #0
 322:Core/Src/Fusion/FusionAhrs.c ****     const FusionAhrsFlags flags = {
 1414              		.loc 1 322 27 view .LVU326
 1415 0012 4270     		strb	r2, [r0, #1]
 325:Core/Src/Fusion/FusionAhrs.c ****             .accelerationRejectionTimeout = ahrs->accelerationRejectionTimeout,
 1416              		.loc 1 325 49 view .LVU327
 1417 0014 5822     		movs	r2, #88
 1418 0016 8A5C     		ldrb	r2, [r1, r2]
 322:Core/Src/Fusion/FusionAhrs.c ****             .initialising = ahrs->initialising,
 1419              		.loc 1 322 27 view .LVU328
 1420 0018 8270     		strb	r2, [r0, #2]
 326:Core/Src/Fusion/FusionAhrs.c ****             .magneticRejectionWarning = ahrs->magneticRejectionTimer > warningTimeout,
 1421              		.loc 1 326 70 view .LVU329
 1422 001a CA6D     		ldr	r2, [r1, #92]
 1423 001c 9342     		cmp	r3, r2
 1424 001e 9B41     		sbcs	r3, r3, r3
 1425              	.LVL158:
 1426              		.loc 1 326 70 view .LVU330
 1427 0020 5B42     		rsbs	r3, r3, #0
 322:Core/Src/Fusion/FusionAhrs.c ****             .initialising = ahrs->initialising,
 1428              		.loc 1 322 27 view .LVU331
 1429 0022 C370     		strb	r3, [r0, #3]
 327:Core/Src/Fusion/FusionAhrs.c ****             .magneticRejectionTimeout = ahrs->magneticRejectionTimeout,
 1430              		.loc 1 327 45 view .LVU332
 1431 0024 6023     		movs	r3, #96
 1432 0026 CB5C     		ldrb	r3, [r1, r3]
 322:Core/Src/Fusion/FusionAhrs.c ****             .initialising = ahrs->initialising,
 1433              		.loc 1 322 27 view .LVU333
 1434 0028 0371     		strb	r3, [r0, #4]
 328:Core/Src/Fusion/FusionAhrs.c ****     };
 329:Core/Src/Fusion/FusionAhrs.c ****     return flags;
 1435              		.loc 1 329 5 is_stmt 1 view .LVU334
 330:Core/Src/Fusion/FusionAhrs.c **** }
 1436              		.loc 1 330 1 is_stmt 0 view .LVU335
 1437              		@ sp needed
 1438 002a 7047     		bx	lr
 1439              		.cfi_endproc
 1440              	.LFE31:
 1442              		.section	.text.FusionAhrsSetHeading,"ax",%progbits
 1443              		.align	1
 1444              		.global	FusionAhrsSetHeading
 1445              		.syntax unified
ARM GAS  /tmp/ccEJb272.s 			page 39


 1446              		.code	16
 1447              		.thumb_func
 1448              		.fpu softvfp
 1450              	FusionAhrsSetHeading:
 1451              	.LVL159:
 1452              	.LFB32:
 331:Core/Src/Fusion/FusionAhrs.c **** 
 332:Core/Src/Fusion/FusionAhrs.c **** /**
 333:Core/Src/Fusion/FusionAhrs.c ****  * @brief Sets the heading of the orientation measurement provided by the AHRS
 334:Core/Src/Fusion/FusionAhrs.c ****  * algorithm.  This function can be used to reset drift in heading when the AHRS
 335:Core/Src/Fusion/FusionAhrs.c ****  * algorithm is being used without a magnetometer.
 336:Core/Src/Fusion/FusionAhrs.c ****  * @param ahrs AHRS algorithm structure.
 337:Core/Src/Fusion/FusionAhrs.c ****  * @param heading Heading angle in degrees.
 338:Core/Src/Fusion/FusionAhrs.c ****  */
 339:Core/Src/Fusion/FusionAhrs.c **** void FusionAhrsSetHeading(FusionAhrs *const ahrs, const float heading) {
 1453              		.loc 1 339 72 is_stmt 1 view -0
 1454              		.cfi_startproc
 1455              		@ args = 0, pretend = 0, frame = 88
 1456              		@ frame_needed = 0, uses_anonymous_args = 0
 1457              		.loc 1 339 72 is_stmt 0 view .LVU337
 1458 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1459              	.LCFI13:
 1460              		.cfi_def_cfa_offset 20
 1461              		.cfi_offset 4, -20
 1462              		.cfi_offset 5, -16
 1463              		.cfi_offset 6, -12
 1464              		.cfi_offset 7, -8
 1465              		.cfi_offset 14, -4
 1466 0002 DE46     		mov	lr, fp
 1467 0004 5746     		mov	r7, r10
 1468 0006 4E46     		mov	r6, r9
 1469 0008 4546     		mov	r5, r8
 1470 000a E0B5     		push	{r5, r6, r7, lr}
 1471              	.LCFI14:
 1472              		.cfi_def_cfa_offset 36
 1473              		.cfi_offset 8, -36
 1474              		.cfi_offset 9, -32
 1475              		.cfi_offset 10, -28
 1476              		.cfi_offset 11, -24
 1477 000c 97B0     		sub	sp, sp, #92
 1478              	.LCFI15:
 1479              		.cfi_def_cfa_offset 128
 1480 000e 0400     		movs	r4, r0
 1481 0010 8946     		mov	r9, r1
 340:Core/Src/Fusion/FusionAhrs.c **** #define Q ahrs->quaternion.element
 341:Core/Src/Fusion/FusionAhrs.c ****     const float yaw = atan2f(Q.w * Q.z + Q.x * Q.y, 0.5f - Q.y * Q.y - Q.z * Q.z);
 1482              		.loc 1 341 5 is_stmt 1 view .LVU338
 1483              		.loc 1 341 37 is_stmt 0 view .LVU339
 1484 0012 C669     		ldr	r6, [r0, #28]
 1485              		.loc 1 341 34 view .LVU340
 1486 0014 311C     		adds	r1, r6, #0
 1487              	.LVL160:
 1488              		.loc 1 341 34 view .LVU341
 1489 0016 0069     		ldr	r0, [r0, #16]
 1490              	.LVL161:
 1491              		.loc 1 341 34 view .LVU342
 1492 0018 FFF7FEFF 		bl	__aeabi_fmul
ARM GAS  /tmp/ccEJb272.s 			page 40


 1493              	.LVL162:
 1494 001c 071C     		adds	r7, r0, #0
 1495              		.loc 1 341 49 view .LVU343
 1496 001e A569     		ldr	r5, [r4, #24]
 1497              		.loc 1 341 46 view .LVU344
 1498 0020 291C     		adds	r1, r5, #0
 1499 0022 6069     		ldr	r0, [r4, #20]
 1500 0024 FFF7FEFF 		bl	__aeabi_fmul
 1501              	.LVL163:
 1502 0028 8046     		mov	r8, r0
 1503              		.loc 1 341 64 view .LVU345
 1504 002a 291C     		adds	r1, r5, #0
 1505 002c 281C     		adds	r0, r5, #0
 1506 002e FFF7FEFF 		bl	__aeabi_fmul
 1507              	.LVL164:
 1508 0032 011C     		adds	r1, r0, #0
 1509              		.loc 1 341 58 view .LVU346
 1510 0034 FC20     		movs	r0, #252
 1511 0036 8005     		lsls	r0, r0, #22
 1512 0038 FFF7FEFF 		bl	__aeabi_fsub
 1513              	.LVL165:
 1514 003c 051C     		adds	r5, r0, #0
 1515              		.loc 1 341 76 view .LVU347
 1516 003e 311C     		adds	r1, r6, #0
 1517 0040 301C     		adds	r0, r6, #0
 1518 0042 FFF7FEFF 		bl	__aeabi_fmul
 1519              	.LVL166:
 1520 0046 011C     		adds	r1, r0, #0
 1521              		.loc 1 341 23 view .LVU348
 1522 0048 281C     		adds	r0, r5, #0
 1523 004a FFF7FEFF 		bl	__aeabi_fsub
 1524              	.LVL167:
 1525 004e 051C     		adds	r5, r0, #0
 1526 0050 4146     		mov	r1, r8
 1527 0052 381C     		adds	r0, r7, #0
 1528 0054 FFF7FEFF 		bl	__aeabi_fadd
 1529              	.LVL168:
 1530 0058 291C     		adds	r1, r5, #0
 1531 005a FFF7FEFF 		bl	atan2f
 1532              	.LVL169:
 1533 005e 051C     		adds	r5, r0, #0
 1534              	.LVL170:
 342:Core/Src/Fusion/FusionAhrs.c ****     const float halfYawMinusHeading = 0.5f * (yaw - FusionDegreesToRadians(heading));
 1535              		.loc 1 342 5 is_stmt 1 view .LVU349
 1536              	.LBB108:
 1537              	.LBI108:
 127:Core/Inc/Fusion/FusionMath.h ****     return degrees * ((float) M_PI / 180.0f);
 1538              		.loc 2 127 21 view .LVU350
 1539              	.LBB109:
 128:Core/Inc/Fusion/FusionMath.h **** }
 1540              		.loc 2 128 5 view .LVU351
 128:Core/Inc/Fusion/FusionMath.h **** }
 1541              		.loc 2 128 20 is_stmt 0 view .LVU352
 1542 0060 6349     		ldr	r1, .L37
 1543 0062 4846     		mov	r0, r9
 1544              	.LVL171:
 128:Core/Inc/Fusion/FusionMath.h **** }
ARM GAS  /tmp/ccEJb272.s 			page 41


 1545              		.loc 2 128 20 view .LVU353
 1546 0064 FFF7FEFF 		bl	__aeabi_fmul
 1547              	.LVL172:
 1548 0068 011C     		adds	r1, r0, #0
 1549              	.LVL173:
 128:Core/Inc/Fusion/FusionMath.h **** }
 1550              		.loc 2 128 20 view .LVU354
 1551              	.LBE109:
 1552              	.LBE108:
 1553              		.loc 1 342 51 view .LVU355
 1554 006a 281C     		adds	r0, r5, #0
 1555 006c FFF7FEFF 		bl	__aeabi_fsub
 1556              	.LVL174:
 1557              		.loc 1 342 17 view .LVU356
 1558 0070 FC21     		movs	r1, #252
 1559 0072 8905     		lsls	r1, r1, #22
 1560 0074 FFF7FEFF 		bl	__aeabi_fmul
 1561              	.LVL175:
 1562 0078 051C     		adds	r5, r0, #0
 1563              	.LVL176:
 343:Core/Src/Fusion/FusionAhrs.c ****     const FusionQuaternion rotation = {
 1564              		.loc 1 343 5 is_stmt 1 view .LVU357
 344:Core/Src/Fusion/FusionAhrs.c ****             .element.w = cosf(halfYawMinusHeading),
 1565              		.loc 1 344 26 is_stmt 0 view .LVU358
 1566 007a FFF7FEFF 		bl	cosf
 1567              	.LVL177:
 343:Core/Src/Fusion/FusionAhrs.c ****     const FusionQuaternion rotation = {
 1568              		.loc 1 343 28 view .LVU359
 1569 007e 0E90     		str	r0, [sp, #56]
 1570 0080 0023     		movs	r3, #0
 1571 0082 0F93     		str	r3, [sp, #60]
 1572 0084 1093     		str	r3, [sp, #64]
 345:Core/Src/Fusion/FusionAhrs.c ****             .element.x = 0.0f,
 346:Core/Src/Fusion/FusionAhrs.c ****             .element.y = 0.0f,
 347:Core/Src/Fusion/FusionAhrs.c ****             .element.z = -1.0f * sinf(halfYawMinusHeading),
 1573              		.loc 1 347 34 view .LVU360
 1574 0086 281C     		adds	r0, r5, #0
 1575 0088 FFF7FEFF 		bl	sinf
 1576              	.LVL178:
 1577              		.loc 1 347 32 view .LVU361
 1578 008c 8023     		movs	r3, #128
 1579 008e 1B06     		lsls	r3, r3, #24
 1580 0090 9C46     		mov	ip, r3
 1581 0092 6044     		add	r0, r0, ip
 343:Core/Src/Fusion/FusionAhrs.c ****             .element.w = cosf(halfYawMinusHeading),
 1582              		.loc 1 343 28 view .LVU362
 1583 0094 1190     		str	r0, [sp, #68]
 348:Core/Src/Fusion/FusionAhrs.c ****     };
 349:Core/Src/Fusion/FusionAhrs.c ****     ahrs->quaternion = FusionQuaternionMultiply(rotation, ahrs->quaternion);
 1584              		.loc 1 349 5 is_stmt 1 view .LVU363
 1585 0096 1022     		movs	r2, #16
 1586 0098 0EA9     		add	r1, sp, #56
 1587 009a 02A8     		add	r0, sp, #8
 1588 009c FFF7FEFF 		bl	memcpy
 1589              	.LVL179:
 1590 00a0 06AD     		add	r5, sp, #24
 1591              	.LVL180:
ARM GAS  /tmp/ccEJb272.s 			page 42


 1592              		.loc 1 349 5 is_stmt 0 view .LVU364
 1593 00a2 2300     		movs	r3, r4
 1594 00a4 1033     		adds	r3, r3, #16
 1595 00a6 2A00     		movs	r2, r5
 1596 00a8 43CB     		ldmia	r3!, {r0, r1, r6}
 1597 00aa 43C2     		stmia	r2!, {r0, r1, r6}
 1598 00ac 1B68     		ldr	r3, [r3]
 1599 00ae 1360     		str	r3, [r2]
 1600              	.LBB110:
 1601              	.LBI110:
 294:Core/Inc/Fusion/FusionMath.h **** }
 295:Core/Inc/Fusion/FusionMath.h **** 
 296:Core/Inc/Fusion/FusionMath.h **** /**
 297:Core/Inc/Fusion/FusionMath.h ****  * @brief Returns the normalised vector.
 298:Core/Inc/Fusion/FusionMath.h ****  * @param vector Vector.
 299:Core/Inc/Fusion/FusionMath.h ****  * @return Normalised vector.
 300:Core/Inc/Fusion/FusionMath.h ****  */
 301:Core/Inc/Fusion/FusionMath.h **** static inline FusionVector FusionVectorNormalise(const FusionVector vector) {
 302:Core/Inc/Fusion/FusionMath.h **** #ifdef FUSION_USE_NORMAL_SQRT
 303:Core/Inc/Fusion/FusionMath.h ****     const float magnitudeReciprocal = 1.0f / sqrtf(FusionVectorMagnitudeSquared(vector));
 304:Core/Inc/Fusion/FusionMath.h **** #else
 305:Core/Inc/Fusion/FusionMath.h ****     const float magnitudeReciprocal = FusionFastInverseSqrt(FusionVectorMagnitudeSquared(vector));
 306:Core/Inc/Fusion/FusionMath.h **** #endif
 307:Core/Inc/Fusion/FusionMath.h ****     return FusionVectorMultiplyScalar(vector, magnitudeReciprocal);
 308:Core/Inc/Fusion/FusionMath.h **** }
 309:Core/Inc/Fusion/FusionMath.h **** 
 310:Core/Inc/Fusion/FusionMath.h **** //------------------------------------------------------------------------------
 311:Core/Inc/Fusion/FusionMath.h **** // Inline functions - Quaternion operations
 312:Core/Inc/Fusion/FusionMath.h **** 
 313:Core/Inc/Fusion/FusionMath.h **** /**
 314:Core/Inc/Fusion/FusionMath.h ****  * @brief Returns the sum of two quaternions.
 315:Core/Inc/Fusion/FusionMath.h ****  * @param quaternionA Quaternion A.
 316:Core/Inc/Fusion/FusionMath.h ****  * @param quaternionB Quaternion B.
 317:Core/Inc/Fusion/FusionMath.h ****  * @return Sum of two quaternions.
 318:Core/Inc/Fusion/FusionMath.h ****  */
 319:Core/Inc/Fusion/FusionMath.h **** static inline FusionQuaternion FusionQuaternionAdd(const FusionQuaternion quaternionA, const Fusion
 320:Core/Inc/Fusion/FusionMath.h ****     FusionQuaternion result;
 321:Core/Inc/Fusion/FusionMath.h ****     result.element.w = quaternionA.element.w + quaternionB.element.w;
 322:Core/Inc/Fusion/FusionMath.h ****     result.element.x = quaternionA.element.x + quaternionB.element.x;
 323:Core/Inc/Fusion/FusionMath.h ****     result.element.y = quaternionA.element.y + quaternionB.element.y;
 324:Core/Inc/Fusion/FusionMath.h ****     result.element.z = quaternionA.element.z + quaternionB.element.z;
 325:Core/Inc/Fusion/FusionMath.h ****     return result;
 326:Core/Inc/Fusion/FusionMath.h **** }
 327:Core/Inc/Fusion/FusionMath.h **** 
 328:Core/Inc/Fusion/FusionMath.h **** /**
 329:Core/Inc/Fusion/FusionMath.h ****  * @brief Returns the multiplication of two quaternions.
 330:Core/Inc/Fusion/FusionMath.h ****  * @param quaternionA Quaternion A (to be post-multiplied).
 331:Core/Inc/Fusion/FusionMath.h ****  * @param quaternionB Quaternion B (to be pre-multiplied).
 332:Core/Inc/Fusion/FusionMath.h ****  * @return Multiplication of two quaternions.
 333:Core/Inc/Fusion/FusionMath.h ****  */
 334:Core/Inc/Fusion/FusionMath.h **** static inline FusionQuaternion FusionQuaternionMultiply(const FusionQuaternion quaternionA, const F
 1602              		.loc 2 334 32 is_stmt 1 view .LVU365
 1603              	.LBB111:
 335:Core/Inc/Fusion/FusionMath.h **** #define A quaternionA.element
 336:Core/Inc/Fusion/FusionMath.h **** #define B quaternionB.element
 337:Core/Inc/Fusion/FusionMath.h ****     FusionQuaternion result;
 1604              		.loc 2 337 5 view .LVU366
ARM GAS  /tmp/ccEJb272.s 			page 43


 338:Core/Inc/Fusion/FusionMath.h ****     result.element.w = A.w * B.w - A.x * B.x - A.y * B.y - A.z * B.z;
 1605              		.loc 2 338 5 view .LVU367
 1606              		.loc 2 338 25 is_stmt 0 view .LVU368
 1607 00b0 029B     		ldr	r3, [sp, #8]
 1608 00b2 9B46     		mov	fp, r3
 1609              		.loc 2 338 31 view .LVU369
 1610 00b4 069E     		ldr	r6, [sp, #24]
 1611              		.loc 2 338 28 view .LVU370
 1612 00b6 311C     		adds	r1, r6, #0
 1613 00b8 181C     		adds	r0, r3, #0
 1614 00ba FFF7FEFF 		bl	__aeabi_fmul
 1615              	.LVL181:
 1616 00be 071C     		adds	r7, r0, #0
 1617              		.loc 2 338 37 view .LVU371
 1618 00c0 039B     		ldr	r3, [sp, #12]
 1619 00c2 9946     		mov	r9, r3
 1620              	.LVL182:
 1621              		.loc 2 338 43 view .LVU372
 1622 00c4 079B     		ldr	r3, [sp, #28]
 1623              		.loc 2 338 40 view .LVU373
 1624 00c6 0093     		str	r3, [sp]
 1625 00c8 191C     		adds	r1, r3, #0
 1626 00ca 4846     		mov	r0, r9
 1627 00cc FFF7FEFF 		bl	__aeabi_fmul
 1628              	.LVL183:
 1629 00d0 011C     		adds	r1, r0, #0
 1630              		.loc 2 338 34 view .LVU374
 1631 00d2 381C     		adds	r0, r7, #0
 1632 00d4 FFF7FEFF 		bl	__aeabi_fsub
 1633              	.LVL184:
 1634 00d8 071C     		adds	r7, r0, #0
 1635              		.loc 2 338 49 view .LVU375
 1636 00da 049A     		ldr	r2, [sp, #16]
 1637 00dc 9046     		mov	r8, r2
 1638              		.loc 2 338 55 view .LVU376
 1639 00de 089A     		ldr	r2, [sp, #32]
 1640 00e0 9246     		mov	r10, r2
 1641              		.loc 2 338 52 view .LVU377
 1642 00e2 111C     		adds	r1, r2, #0
 1643 00e4 4046     		mov	r0, r8
 1644 00e6 FFF7FEFF 		bl	__aeabi_fmul
 1645              	.LVL185:
 1646 00ea 011C     		adds	r1, r0, #0
 1647              		.loc 2 338 46 view .LVU378
 1648 00ec 381C     		adds	r0, r7, #0
 1649 00ee FFF7FEFF 		bl	__aeabi_fsub
 1650              	.LVL186:
 1651 00f2 0190     		str	r0, [sp, #4]
 1652              		.loc 2 338 61 view .LVU379
 1653 00f4 059F     		ldr	r7, [sp, #20]
 1654              		.loc 2 338 67 view .LVU380
 1655 00f6 099D     		ldr	r5, [sp, #36]
 1656              		.loc 2 338 64 view .LVU381
 1657 00f8 291C     		adds	r1, r5, #0
 1658 00fa 381C     		adds	r0, r7, #0
 1659 00fc FFF7FEFF 		bl	__aeabi_fmul
 1660              	.LVL187:
ARM GAS  /tmp/ccEJb272.s 			page 44


 1661 0100 011C     		adds	r1, r0, #0
 1662              		.loc 2 338 58 view .LVU382
 1663 0102 0198     		ldr	r0, [sp, #4]
 1664 0104 FFF7FEFF 		bl	__aeabi_fsub
 1665              	.LVL188:
 1666              		.loc 2 338 22 view .LVU383
 1667 0108 0A90     		str	r0, [sp, #40]
 339:Core/Inc/Fusion/FusionMath.h ****     result.element.x = A.w * B.x + A.x * B.w + A.y * B.z - A.z * B.y;
 1668              		.loc 2 339 5 is_stmt 1 view .LVU384
 1669              		.loc 2 339 28 is_stmt 0 view .LVU385
 1670 010a 0099     		ldr	r1, [sp]
 1671 010c 5846     		mov	r0, fp
 1672 010e FFF7FEFF 		bl	__aeabi_fmul
 1673              	.LVL189:
 1674 0112 0190     		str	r0, [sp, #4]
 1675              		.loc 2 339 40 view .LVU386
 1676 0114 4946     		mov	r1, r9
 1677 0116 301C     		adds	r0, r6, #0
 1678 0118 FFF7FEFF 		bl	__aeabi_fmul
 1679              	.LVL190:
 1680 011c 011C     		adds	r1, r0, #0
 1681              		.loc 2 339 34 view .LVU387
 1682 011e 0198     		ldr	r0, [sp, #4]
 1683 0120 FFF7FEFF 		bl	__aeabi_fadd
 1684              	.LVL191:
 1685 0124 0190     		str	r0, [sp, #4]
 1686              		.loc 2 339 52 view .LVU388
 1687 0126 291C     		adds	r1, r5, #0
 1688 0128 4046     		mov	r0, r8
 1689 012a FFF7FEFF 		bl	__aeabi_fmul
 1690              	.LVL192:
 1691 012e 011C     		adds	r1, r0, #0
 1692              		.loc 2 339 46 view .LVU389
 1693 0130 0198     		ldr	r0, [sp, #4]
 1694 0132 FFF7FEFF 		bl	__aeabi_fadd
 1695              	.LVL193:
 1696 0136 0190     		str	r0, [sp, #4]
 1697              		.loc 2 339 64 view .LVU390
 1698 0138 391C     		adds	r1, r7, #0
 1699 013a 5046     		mov	r0, r10
 1700 013c FFF7FEFF 		bl	__aeabi_fmul
 1701              	.LVL194:
 1702 0140 011C     		adds	r1, r0, #0
 1703              		.loc 2 339 58 view .LVU391
 1704 0142 0198     		ldr	r0, [sp, #4]
 1705 0144 FFF7FEFF 		bl	__aeabi_fsub
 1706              	.LVL195:
 1707              		.loc 2 339 22 view .LVU392
 1708 0148 0B90     		str	r0, [sp, #44]
 340:Core/Inc/Fusion/FusionMath.h ****     result.element.y = A.w * B.y - A.x * B.z + A.y * B.w + A.z * B.x;
 1709              		.loc 2 340 5 is_stmt 1 view .LVU393
 1710              		.loc 2 340 28 is_stmt 0 view .LVU394
 1711 014a 5146     		mov	r1, r10
 1712 014c 5846     		mov	r0, fp
 1713 014e FFF7FEFF 		bl	__aeabi_fmul
 1714              	.LVL196:
 1715 0152 0190     		str	r0, [sp, #4]
ARM GAS  /tmp/ccEJb272.s 			page 45


 1716              		.loc 2 340 40 view .LVU395
 1717 0154 291C     		adds	r1, r5, #0
 1718 0156 4846     		mov	r0, r9
 1719 0158 FFF7FEFF 		bl	__aeabi_fmul
 1720              	.LVL197:
 1721 015c 011C     		adds	r1, r0, #0
 1722              		.loc 2 340 34 view .LVU396
 1723 015e 0198     		ldr	r0, [sp, #4]
 1724 0160 FFF7FEFF 		bl	__aeabi_fsub
 1725              	.LVL198:
 1726 0164 0190     		str	r0, [sp, #4]
 1727              		.loc 2 340 52 view .LVU397
 1728 0166 4146     		mov	r1, r8
 1729 0168 301C     		adds	r0, r6, #0
 1730 016a FFF7FEFF 		bl	__aeabi_fmul
 1731              	.LVL199:
 1732 016e 011C     		adds	r1, r0, #0
 1733              		.loc 2 340 46 view .LVU398
 1734 0170 0198     		ldr	r0, [sp, #4]
 1735 0172 FFF7FEFF 		bl	__aeabi_fadd
 1736              	.LVL200:
 1737 0176 0190     		str	r0, [sp, #4]
 1738              		.loc 2 340 64 view .LVU399
 1739 0178 391C     		adds	r1, r7, #0
 1740 017a 0098     		ldr	r0, [sp]
 1741 017c FFF7FEFF 		bl	__aeabi_fmul
 1742              	.LVL201:
 1743 0180 011C     		adds	r1, r0, #0
 1744              		.loc 2 340 58 view .LVU400
 1745 0182 0198     		ldr	r0, [sp, #4]
 1746 0184 FFF7FEFF 		bl	__aeabi_fadd
 1747              	.LVL202:
 1748              		.loc 2 340 22 view .LVU401
 1749 0188 0C90     		str	r0, [sp, #48]
 341:Core/Inc/Fusion/FusionMath.h ****     result.element.z = A.w * B.z + A.x * B.y - A.y * B.x + A.z * B.w;
 1750              		.loc 2 341 5 is_stmt 1 view .LVU402
 1751              		.loc 2 341 28 is_stmt 0 view .LVU403
 1752 018a 291C     		adds	r1, r5, #0
 1753 018c 5846     		mov	r0, fp
 1754 018e FFF7FEFF 		bl	__aeabi_fmul
 1755              	.LVL203:
 1756 0192 051C     		adds	r5, r0, #0
 1757              		.loc 2 341 40 view .LVU404
 1758 0194 5146     		mov	r1, r10
 1759 0196 4846     		mov	r0, r9
 1760 0198 FFF7FEFF 		bl	__aeabi_fmul
 1761              	.LVL204:
 1762 019c 011C     		adds	r1, r0, #0
 1763              		.loc 2 341 34 view .LVU405
 1764 019e 281C     		adds	r0, r5, #0
 1765 01a0 FFF7FEFF 		bl	__aeabi_fadd
 1766              	.LVL205:
 1767 01a4 051C     		adds	r5, r0, #0
 1768              		.loc 2 341 52 view .LVU406
 1769 01a6 4146     		mov	r1, r8
 1770 01a8 0098     		ldr	r0, [sp]
 1771 01aa FFF7FEFF 		bl	__aeabi_fmul
ARM GAS  /tmp/ccEJb272.s 			page 46


 1772              	.LVL206:
 1773 01ae 011C     		adds	r1, r0, #0
 1774              		.loc 2 341 46 view .LVU407
 1775 01b0 281C     		adds	r0, r5, #0
 1776 01b2 FFF7FEFF 		bl	__aeabi_fsub
 1777              	.LVL207:
 1778 01b6 051C     		adds	r5, r0, #0
 1779              		.loc 2 341 64 view .LVU408
 1780 01b8 391C     		adds	r1, r7, #0
 1781 01ba 301C     		adds	r0, r6, #0
 1782 01bc FFF7FEFF 		bl	__aeabi_fmul
 1783              	.LVL208:
 1784 01c0 011C     		adds	r1, r0, #0
 1785              		.loc 2 341 58 view .LVU409
 1786 01c2 281C     		adds	r0, r5, #0
 1787 01c4 FFF7FEFF 		bl	__aeabi_fadd
 1788              	.LVL209:
 1789              		.loc 2 341 22 view .LVU410
 1790 01c8 0D90     		str	r0, [sp, #52]
 342:Core/Inc/Fusion/FusionMath.h ****     return result;
 1791              		.loc 2 342 5 is_stmt 1 view .LVU411
 1792              		.loc 2 342 12 is_stmt 0 view .LVU412
 1793 01ca 12AD     		add	r5, sp, #72
 1794 01cc 1022     		movs	r2, #16
 1795 01ce 0AA9     		add	r1, sp, #40
 1796 01d0 2800     		movs	r0, r5
 1797 01d2 FFF7FEFF 		bl	memcpy
 1798              	.LVL210:
 1799              	.LBE111:
 1800              	.LBE110:
 1801              		.loc 1 349 24 view .LVU413
 1802 01d6 1034     		adds	r4, r4, #16
 1803              	.LVL211:
 1804              		.loc 1 349 24 view .LVU414
 1805 01d8 0ECD     		ldmia	r5!, {r1, r2, r3}
 1806 01da 0EC4     		stmia	r4!, {r1, r2, r3}
 1807              	.LVL212:
 1808              		.loc 1 349 24 view .LVU415
 1809 01dc 2B68     		ldr	r3, [r5]
 1810 01de 2360     		str	r3, [r4]
 350:Core/Src/Fusion/FusionAhrs.c **** #undef Q
 351:Core/Src/Fusion/FusionAhrs.c **** }
 1811              		.loc 1 351 1 view .LVU416
 1812 01e0 17B0     		add	sp, sp, #92
 1813              		@ sp needed
 1814              	.LVL213:
 1815              		.loc 1 351 1 view .LVU417
 1816 01e2 F0BC     		pop	{r4, r5, r6, r7}
 1817 01e4 BB46     		mov	fp, r7
 1818 01e6 B246     		mov	r10, r6
 1819 01e8 A946     		mov	r9, r5
 1820 01ea A046     		mov	r8, r4
 1821 01ec F0BD     		pop	{r4, r5, r6, r7, pc}
 1822              	.L38:
 1823 01ee C046     		.align	2
 1824              	.L37:
 1825 01f0 35FA8E3C 		.word	1016003125
ARM GAS  /tmp/ccEJb272.s 			page 47


 1826              		.cfi_endproc
 1827              	.LFE32:
 1829              		.global	__aeabi_fcmplt
 1830              		.section	.text.FusionAhrsUpdate,"ax",%progbits
 1831              		.align	1
 1832              		.global	FusionAhrsUpdate
 1833              		.syntax unified
 1834              		.code	16
 1835              		.thumb_func
 1836              		.fpu softvfp
 1838              	FusionAhrsUpdate:
 1839              	.LVL214:
 1840              	.LFB24:
 100:Core/Src/Fusion/FusionAhrs.c **** #define Q ahrs->quaternion.element
 1841              		.loc 1 100 167 is_stmt 1 view -0
 1842              		.cfi_startproc
 1843              		@ args = 28, pretend = 0, frame = 376
 1844              		@ frame_needed = 0, uses_anonymous_args = 0
 100:Core/Src/Fusion/FusionAhrs.c **** #define Q ahrs->quaternion.element
 1845              		.loc 1 100 167 is_stmt 0 view .LVU419
 1846 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1847              	.LCFI16:
 1848              		.cfi_def_cfa_offset 20
 1849              		.cfi_offset 4, -20
 1850              		.cfi_offset 5, -16
 1851              		.cfi_offset 6, -12
 1852              		.cfi_offset 7, -8
 1853              		.cfi_offset 14, -4
 1854 0002 DE46     		mov	lr, fp
 1855 0004 5746     		mov	r7, r10
 1856 0006 4E46     		mov	r6, r9
 1857 0008 4546     		mov	r5, r8
 1858 000a E0B5     		push	{r5, r6, r7, lr}
 1859              	.LCFI17:
 1860              		.cfi_def_cfa_offset 36
 1861              		.cfi_offset 8, -36
 1862              		.cfi_offset 9, -32
 1863              		.cfi_offset 10, -28
 1864              		.cfi_offset 11, -24
 1865 000c E1B0     		sub	sp, sp, #388
 1866              	.LCFI18:
 1867              		.cfi_def_cfa_offset 424
 1868 000e 8246     		mov	r10, r0
 1869 0010 0991     		str	r1, [sp, #36]
 1870 0012 0A92     		str	r2, [sp, #40]
 1871 0014 0B93     		str	r3, [sp, #44]
 104:Core/Src/Fusion/FusionAhrs.c **** 
 1872              		.loc 1 104 5 is_stmt 1 view .LVU420
 104:Core/Src/Fusion/FusionAhrs.c **** 
 1873              		.loc 1 104 25 is_stmt 0 view .LVU421
 1874 0016 0300     		movs	r3, r0
 1875 0018 2033     		adds	r3, r3, #32
 1876 001a 6AAA     		add	r2, sp, #424
 1877              	.LVL215:
 104:Core/Src/Fusion/FusionAhrs.c **** 
 1878              		.loc 1 104 25 view .LVU422
 1879 001c 13CA     		ldmia	r2!, {r0, r1, r4}
ARM GAS  /tmp/ccEJb272.s 			page 48


 1880 001e 13C3     		stmia	r3!, {r0, r1, r4}
 1881              	.LVL216:
 107:Core/Src/Fusion/FusionAhrs.c ****         ahrs->rampedGain -= ahrs->rampedGainStep * deltaTime;
 1882              		.loc 1 107 5 is_stmt 1 view .LVU423
 107:Core/Src/Fusion/FusionAhrs.c ****         ahrs->rampedGain -= ahrs->rampedGainStep * deltaTime;
 1883              		.loc 1 107 13 is_stmt 0 view .LVU424
 1884 0020 2C23     		movs	r3, #44
 1885 0022 5246     		mov	r2, r10
 1886 0024 D35C     		ldrb	r3, [r2, r3]
 107:Core/Src/Fusion/FusionAhrs.c ****         ahrs->rampedGain -= ahrs->rampedGainStep * deltaTime;
 1887              		.loc 1 107 8 view .LVU425
 1888 0026 002B     		cmp	r3, #0
 1889 0028 18D0     		beq	.L40
 108:Core/Src/Fusion/FusionAhrs.c ****         if (ahrs->rampedGain < ahrs->settings.gain) {
 1890              		.loc 1 108 9 is_stmt 1 view .LVU426
 108:Core/Src/Fusion/FusionAhrs.c ****         if (ahrs->rampedGain < ahrs->settings.gain) {
 1891              		.loc 1 108 50 is_stmt 0 view .LVU427
 1892 002a 7099     		ldr	r1, [sp, #448]
 1893 002c 506B     		ldr	r0, [r2, #52]
 1894 002e FFF7FEFF 		bl	__aeabi_fmul
 1895              	.LVL217:
 1896 0032 011C     		adds	r1, r0, #0
 108:Core/Src/Fusion/FusionAhrs.c ****         if (ahrs->rampedGain < ahrs->settings.gain) {
 1897              		.loc 1 108 26 view .LVU428
 1898 0034 5346     		mov	r3, r10
 1899 0036 186B     		ldr	r0, [r3, #48]
 1900 0038 FFF7FEFF 		bl	__aeabi_fsub
 1901              	.LVL218:
 1902 003c 5346     		mov	r3, r10
 1903 003e 1863     		str	r0, [r3, #48]
 109:Core/Src/Fusion/FusionAhrs.c ****             ahrs->rampedGain = ahrs->settings.gain;
 1904              		.loc 1 109 9 is_stmt 1 view .LVU429
 109:Core/Src/Fusion/FusionAhrs.c ****             ahrs->rampedGain = ahrs->settings.gain;
 1905              		.loc 1 109 46 is_stmt 0 view .LVU430
 1906 0040 1C68     		ldr	r4, [r3]
 109:Core/Src/Fusion/FusionAhrs.c ****             ahrs->rampedGain = ahrs->settings.gain;
 1907              		.loc 1 109 12 view .LVU431
 1908 0042 211C     		adds	r1, r4, #0
 1909 0044 FFF7FEFF 		bl	__aeabi_fcmplt
 1910              	.LVL219:
 1911 0048 0028     		cmp	r0, #0
 1912 004a 07D0     		beq	.L40
 110:Core/Src/Fusion/FusionAhrs.c ****             ahrs->initialising = false;
 1913              		.loc 1 110 13 is_stmt 1 view .LVU432
 110:Core/Src/Fusion/FusionAhrs.c ****             ahrs->initialising = false;
 1914              		.loc 1 110 30 is_stmt 0 view .LVU433
 1915 004c 5346     		mov	r3, r10
 1916 004e 1C63     		str	r4, [r3, #48]
 111:Core/Src/Fusion/FusionAhrs.c ****             ahrs->accelerationRejectionTimeout = false;
 1917              		.loc 1 111 13 is_stmt 1 view .LVU434
 111:Core/Src/Fusion/FusionAhrs.c ****             ahrs->accelerationRejectionTimeout = false;
 1918              		.loc 1 111 32 is_stmt 0 view .LVU435
 1919 0050 0023     		movs	r3, #0
 1920 0052 2C22     		movs	r2, #44
 1921 0054 5146     		mov	r1, r10
 1922 0056 8B54     		strb	r3, [r1, r2]
 112:Core/Src/Fusion/FusionAhrs.c ****         }
ARM GAS  /tmp/ccEJb272.s 			page 49


 1923              		.loc 1 112 13 is_stmt 1 view .LVU436
 112:Core/Src/Fusion/FusionAhrs.c ****         }
 1924              		.loc 1 112 48 is_stmt 0 view .LVU437
 1925 0058 2C32     		adds	r2, r2, #44
 1926 005a 8B54     		strb	r3, [r1, r2]
 1927              	.L40:
 117:Core/Src/Fusion/FusionAhrs.c ****             .axis.x = Q.x * Q.z - Q.w * Q.y,
 1928              		.loc 1 117 5 is_stmt 1 view .LVU438
 118:Core/Src/Fusion/FusionAhrs.c ****             .axis.y = Q.y * Q.z + Q.w * Q.x,
 1929              		.loc 1 118 24 is_stmt 0 view .LVU439
 1930 005c 5346     		mov	r3, r10
 1931 005e 5F69     		ldr	r7, [r3, #20]
 118:Core/Src/Fusion/FusionAhrs.c ****             .axis.y = Q.y * Q.z + Q.w * Q.x,
 1932              		.loc 1 118 30 view .LVU440
 1933 0060 DC69     		ldr	r4, [r3, #28]
 118:Core/Src/Fusion/FusionAhrs.c ****             .axis.y = Q.y * Q.z + Q.w * Q.x,
 1934              		.loc 1 118 27 view .LVU441
 1935 0062 211C     		adds	r1, r4, #0
 1936 0064 381C     		adds	r0, r7, #0
 1937 0066 FFF7FEFF 		bl	__aeabi_fmul
 1938              	.LVL220:
 1939 006a 8046     		mov	r8, r0
 118:Core/Src/Fusion/FusionAhrs.c ****             .axis.y = Q.y * Q.z + Q.w * Q.x,
 1940              		.loc 1 118 36 view .LVU442
 1941 006c 5346     		mov	r3, r10
 1942 006e 1D69     		ldr	r5, [r3, #16]
 118:Core/Src/Fusion/FusionAhrs.c ****             .axis.y = Q.y * Q.z + Q.w * Q.x,
 1943              		.loc 1 118 42 view .LVU443
 1944 0070 9E69     		ldr	r6, [r3, #24]
 118:Core/Src/Fusion/FusionAhrs.c ****             .axis.y = Q.y * Q.z + Q.w * Q.x,
 1945              		.loc 1 118 39 view .LVU444
 1946 0072 311C     		adds	r1, r6, #0
 1947 0074 281C     		adds	r0, r5, #0
 1948 0076 FFF7FEFF 		bl	__aeabi_fmul
 1949              	.LVL221:
 1950 007a 011C     		adds	r1, r0, #0
 118:Core/Src/Fusion/FusionAhrs.c ****             .axis.y = Q.y * Q.z + Q.w * Q.x,
 1951              		.loc 1 118 33 view .LVU445
 1952 007c 4046     		mov	r0, r8
 1953 007e FFF7FEFF 		bl	__aeabi_fsub
 1954              	.LVL222:
 117:Core/Src/Fusion/FusionAhrs.c ****             .axis.x = Q.x * Q.z - Q.w * Q.y,
 1955              		.loc 1 117 24 view .LVU446
 1956 0082 2D90     		str	r0, [sp, #180]
 119:Core/Src/Fusion/FusionAhrs.c ****             .axis.z = Q.w * Q.w - 0.5f + Q.z * Q.z,
 1957              		.loc 1 119 27 view .LVU447
 1958 0084 311C     		adds	r1, r6, #0
 1959 0086 201C     		adds	r0, r4, #0
 1960 0088 FFF7FEFF 		bl	__aeabi_fmul
 1961              	.LVL223:
 1962 008c 061C     		adds	r6, r0, #0
 119:Core/Src/Fusion/FusionAhrs.c ****             .axis.z = Q.w * Q.w - 0.5f + Q.z * Q.z,
 1963              		.loc 1 119 39 view .LVU448
 1964 008e 291C     		adds	r1, r5, #0
 1965 0090 381C     		adds	r0, r7, #0
 1966 0092 FFF7FEFF 		bl	__aeabi_fmul
 1967              	.LVL224:
ARM GAS  /tmp/ccEJb272.s 			page 50


 1968 0096 011C     		adds	r1, r0, #0
 119:Core/Src/Fusion/FusionAhrs.c ****             .axis.z = Q.w * Q.w - 0.5f + Q.z * Q.z,
 1969              		.loc 1 119 33 view .LVU449
 1970 0098 301C     		adds	r0, r6, #0
 1971 009a FFF7FEFF 		bl	__aeabi_fadd
 1972              	.LVL225:
 117:Core/Src/Fusion/FusionAhrs.c ****             .axis.x = Q.x * Q.z - Q.w * Q.y,
 1973              		.loc 1 117 24 view .LVU450
 1974 009e 2E90     		str	r0, [sp, #184]
 120:Core/Src/Fusion/FusionAhrs.c ****     }; // third column of transposed rotation matrix scaled by 0.5
 1975              		.loc 1 120 27 view .LVU451
 1976 00a0 291C     		adds	r1, r5, #0
 1977 00a2 281C     		adds	r0, r5, #0
 1978 00a4 FFF7FEFF 		bl	__aeabi_fmul
 1979              	.LVL226:
 120:Core/Src/Fusion/FusionAhrs.c ****     }; // third column of transposed rotation matrix scaled by 0.5
 1980              		.loc 1 120 33 view .LVU452
 1981 00a8 FC21     		movs	r1, #252
 1982 00aa 8905     		lsls	r1, r1, #22
 1983 00ac FFF7FEFF 		bl	__aeabi_fsub
 1984              	.LVL227:
 1985 00b0 051C     		adds	r5, r0, #0
 120:Core/Src/Fusion/FusionAhrs.c ****     }; // third column of transposed rotation matrix scaled by 0.5
 1986              		.loc 1 120 46 view .LVU453
 1987 00b2 211C     		adds	r1, r4, #0
 1988 00b4 201C     		adds	r0, r4, #0
 1989 00b6 FFF7FEFF 		bl	__aeabi_fmul
 1990              	.LVL228:
 1991 00ba 011C     		adds	r1, r0, #0
 120:Core/Src/Fusion/FusionAhrs.c ****     }; // third column of transposed rotation matrix scaled by 0.5
 1992              		.loc 1 120 40 view .LVU454
 1993 00bc 281C     		adds	r0, r5, #0
 1994 00be FFF7FEFF 		bl	__aeabi_fadd
 1995              	.LVL229:
 117:Core/Src/Fusion/FusionAhrs.c ****             .axis.x = Q.x * Q.z - Q.w * Q.y,
 1996              		.loc 1 117 24 view .LVU455
 1997 00c2 2F90     		str	r0, [sp, #188]
 124:Core/Src/Fusion/FusionAhrs.c ****     ahrs->accelerometerIgnored = true;
 1998              		.loc 1 124 5 is_stmt 1 view .LVU456
 124:Core/Src/Fusion/FusionAhrs.c ****     ahrs->accelerometerIgnored = true;
 1999              		.loc 1 124 18 is_stmt 0 view .LVU457
 2000 00c4 0021     		movs	r1, #0
 2001 00c6 2A91     		str	r1, [sp, #168]
 2002 00c8 2B91     		str	r1, [sp, #172]
 2003 00ca 2C91     		str	r1, [sp, #176]
 125:Core/Src/Fusion/FusionAhrs.c ****     if (FusionVectorIsZero(accelerometer) == false) {
 2004              		.loc 1 125 5 is_stmt 1 view .LVU458
 125:Core/Src/Fusion/FusionAhrs.c ****     if (FusionVectorIsZero(accelerometer) == false) {
 2005              		.loc 1 125 32 is_stmt 0 view .LVU459
 2006 00cc 5023     		movs	r3, #80
 2007 00ce 0122     		movs	r2, #1
 2008 00d0 5046     		mov	r0, r10
 2009 00d2 C254     		strb	r2, [r0, r3]
 126:Core/Src/Fusion/FusionAhrs.c **** 
 2010              		.loc 1 126 5 is_stmt 1 view .LVU460
 2011 00d4 1DAB     		add	r3, sp, #116
 2012 00d6 6AAA     		add	r2, sp, #424
ARM GAS  /tmp/ccEJb272.s 			page 51


 2013 00d8 31CA     		ldmia	r2!, {r0, r4, r5}
 2014 00da 31C3     		stmia	r3!, {r0, r4, r5}
 2015              	.LBB178:
 2016              	.LBI178:
 191:Core/Inc/Fusion/FusionMath.h ****     return (vector.axis.x == 0.0f) && (vector.axis.y == 0.0f) && (vector.axis.z == 0.0f);
 2017              		.loc 2 191 20 view .LVU461
 2018              	.LBB179:
 192:Core/Inc/Fusion/FusionMath.h **** }
 2019              		.loc 2 192 5 view .LVU462
 192:Core/Inc/Fusion/FusionMath.h **** }
 2020              		.loc 2 192 63 is_stmt 0 view .LVU463
 2021 00dc 1D98     		ldr	r0, [sp, #116]
 2022 00de FFF7FEFF 		bl	__aeabi_fcmpeq
 2023              	.LVL230:
 2024 00e2 0028     		cmp	r0, #0
 2025 00e4 0FD0     		beq	.L74
 192:Core/Inc/Fusion/FusionMath.h **** }
 2026              		.loc 2 192 36 view .LVU464
 2027 00e6 0021     		movs	r1, #0
 2028 00e8 1E98     		ldr	r0, [sp, #120]
 2029 00ea FFF7FEFF 		bl	__aeabi_fcmpeq
 2030              	.LVL231:
 2031 00ee 0028     		cmp	r0, #0
 2032 00f0 00D1     		bne	.LCB1554
 2033 00f2 2AE1     		b	.L75	@long jump
 2034              	.LCB1554:
 192:Core/Inc/Fusion/FusionMath.h **** }
 2035              		.loc 2 192 63 view .LVU465
 2036 00f4 0021     		movs	r1, #0
 2037 00f6 1F98     		ldr	r0, [sp, #124]
 2038 00f8 FFF7FEFF 		bl	__aeabi_fcmpeq
 2039              	.LVL232:
 2040 00fc 0028     		cmp	r0, #0
 2041 00fe 00D0     		beq	.LCB1561
 2042 0100 25E1     		b	.L63	@long jump
 2043              	.LCB1561:
 2044 0102 0023     		movs	r3, #0
 2045 0104 00E0     		b	.L42
 2046              	.L74:
 2047 0106 0023     		movs	r3, #0
 2048              	.L42:
 2049              	.LBE179:
 2050              	.LBE178:
 126:Core/Src/Fusion/FusionAhrs.c **** 
 2051              		.loc 1 126 8 view .LVU466
 2052 0108 002B     		cmp	r3, #0
 2053 010a 00D0     		beq	.LCB1576
 2054 010c FCE0     		b	.L45	@long jump
 2055              	.LCB1576:
 129:Core/Src/Fusion/FusionAhrs.c ****             const FusionQuaternion quaternion = ahrs->quaternion;
 2056              		.loc 1 129 9 is_stmt 1 view .LVU467
 129:Core/Src/Fusion/FusionAhrs.c ****             const FusionQuaternion quaternion = ahrs->quaternion;
 2057              		.loc 1 129 12 is_stmt 0 view .LVU468
 2058 010e 5346     		mov	r3, r10
 2059 0110 5A6D     		ldr	r2, [r3, #84]
 2060 0112 DB68     		ldr	r3, [r3, #12]
 2061 0114 9A42     		cmp	r2, r3
ARM GAS  /tmp/ccEJb272.s 			page 52


 2062 0116 00D9     		bls	.LCB1584
 2063 0118 1BE1     		b	.L80	@long jump
 2064              	.LCB1584:
 2065              	.L46:
 138:Core/Src/Fusion/FusionAhrs.c **** 
 2066              		.loc 1 138 9 is_stmt 1 view .LVU469
 2067 011a 0FAB     		add	r3, sp, #60
 2068 011c 6AAA     		add	r2, sp, #424
 2069 011e 13CA     		ldmia	r2!, {r0, r1, r4}
 2070 0120 13C3     		stmia	r3!, {r0, r1, r4}
 2071              	.LBB181:
 2072              	.LBI181:
 301:Core/Inc/Fusion/FusionMath.h **** #ifdef FUSION_USE_NORMAL_SQRT
 2073              		.loc 2 301 28 view .LVU470
 2074              	.LBB182:
 305:Core/Inc/Fusion/FusionMath.h **** #endif
 2075              		.loc 2 305 5 view .LVU471
 2076 0122 1A00     		movs	r2, r3
 2077 0124 0FA9     		add	r1, sp, #60
 2078 0126 31C9     		ldmia	r1!, {r0, r4, r5}
 2079 0128 31C2     		stmia	r2!, {r0, r4, r5}
 2080              	.LBB183:
 2081              	.LBI183:
 283:Core/Inc/Fusion/FusionMath.h ****     return FusionVectorSum(FusionVectorHadamardProduct(vector, vector));
 2082              		.loc 2 283 21 view .LVU472
 2083              	.LBB184:
 284:Core/Inc/Fusion/FusionMath.h **** }
 2084              		.loc 2 284 5 view .LVU473
 2085 012a 19AD     		add	r5, sp, #100
 2086 012c 2A00     		movs	r2, r5
 2087 012e 91C9     		ldmia	r1!, {r0, r4, r7}
 2088 0130 91C2     		stmia	r2!, {r0, r4, r7}
 2089 0132 0F00     		movs	r7, r1
 2090 0134 0A00     		movs	r2, r1
 2091 0136 13CB     		ldmia	r3!, {r0, r1, r4}
 2092 0138 13C2     		stmia	r2!, {r0, r1, r4}
 2093              	.LBB185:
 2094              	.LBI185:
 252:Core/Inc/Fusion/FusionMath.h ****     FusionVector result;
 2095              		.loc 2 252 28 view .LVU474
 2096              	.LBB186:
 253:Core/Inc/Fusion/FusionMath.h ****     result.axis.x = vectorA.axis.x * vectorB.axis.x;
 2097              		.loc 2 253 5 view .LVU475
 254:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = vectorA.axis.y * vectorB.axis.y;
 2098              		.loc 2 254 5 view .LVU476
 254:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = vectorA.axis.y * vectorB.axis.y;
 2099              		.loc 2 254 36 is_stmt 0 view .LVU477
 2100 013a 1599     		ldr	r1, [sp, #84]
 2101 013c 1998     		ldr	r0, [sp, #100]
 2102 013e FFF7FEFF 		bl	__aeabi_fmul
 2103              	.LVL233:
 2104 0142 8146     		mov	r9, r0
 254:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = vectorA.axis.y * vectorB.axis.y;
 2105              		.loc 2 254 19 view .LVU478
 2106 0144 1DAC     		add	r4, sp, #116
 2107 0146 1D90     		str	r0, [sp, #116]
 255:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = vectorA.axis.z * vectorB.axis.z;
ARM GAS  /tmp/ccEJb272.s 			page 53


 2108              		.loc 2 255 5 is_stmt 1 view .LVU479
 255:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = vectorA.axis.z * vectorB.axis.z;
 2109              		.loc 2 255 36 is_stmt 0 view .LVU480
 2110 0148 7968     		ldr	r1, [r7, #4]
 2111 014a 1A98     		ldr	r0, [sp, #104]
 2112 014c FFF7FEFF 		bl	__aeabi_fmul
 2113              	.LVL234:
 2114 0150 8346     		mov	fp, r0
 255:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = vectorA.axis.z * vectorB.axis.z;
 2115              		.loc 2 255 19 view .LVU481
 2116 0152 1E90     		str	r0, [sp, #120]
 256:Core/Inc/Fusion/FusionMath.h ****     return result;
 2117              		.loc 2 256 5 is_stmt 1 view .LVU482
 256:Core/Inc/Fusion/FusionMath.h ****     return result;
 2118              		.loc 2 256 36 is_stmt 0 view .LVU483
 2119 0154 B968     		ldr	r1, [r7, #8]
 2120 0156 1B98     		ldr	r0, [sp, #108]
 2121 0158 FFF7FEFF 		bl	__aeabi_fmul
 2122              	.LVL235:
 2123 015c 8046     		mov	r8, r0
 256:Core/Inc/Fusion/FusionMath.h ****     return result;
 2124              		.loc 2 256 19 view .LVU484
 2125 015e 1F90     		str	r0, [sp, #124]
 257:Core/Inc/Fusion/FusionMath.h **** }
 2126              		.loc 2 257 5 is_stmt 1 view .LVU485
 257:Core/Inc/Fusion/FusionMath.h **** }
 2127              		.loc 2 257 12 is_stmt 0 view .LVU486
 2128 0160 4DAB     		add	r3, sp, #308
 2129 0162 9C46     		mov	ip, r3
 2130 0164 1A00     		movs	r2, r3
 2131 0166 2100     		movs	r1, r4
 2132 0168 49C9     		ldmia	r1!, {r0, r3, r6}
 2133 016a 49C2     		stmia	r2!, {r0, r3, r6}
 2134 016c 2200     		movs	r2, r4
 2135 016e 6346     		mov	r3, ip
 2136 0170 43CB     		ldmia	r3!, {r0, r1, r6}
 2137 0172 43C2     		stmia	r2!, {r0, r1, r6}
 2138              	.LBE186:
 2139              	.LBE185:
 2140              	.LBB187:
 2141              	.LBI187:
 228:Core/Inc/Fusion/FusionMath.h ****     return vector.axis.x + vector.axis.y + vector.axis.z;
 2142              		.loc 2 228 21 is_stmt 1 view .LVU487
 2143              	.LBB188:
 229:Core/Inc/Fusion/FusionMath.h **** }
 2144              		.loc 2 229 5 view .LVU488
 229:Core/Inc/Fusion/FusionMath.h **** }
 2145              		.loc 2 229 26 is_stmt 0 view .LVU489
 2146 0174 5946     		mov	r1, fp
 2147 0176 4846     		mov	r0, r9
 2148 0178 FFF7FEFF 		bl	__aeabi_fadd
 2149              	.LVL236:
 2150 017c 011C     		adds	r1, r0, #0
 229:Core/Inc/Fusion/FusionMath.h **** }
 2151              		.loc 2 229 42 view .LVU490
 2152 017e 4046     		mov	r0, r8
 2153 0180 FFF7FEFF 		bl	__aeabi_fadd
ARM GAS  /tmp/ccEJb272.s 			page 54


 2154              	.LVL237:
 229:Core/Inc/Fusion/FusionMath.h **** }
 2155              		.loc 2 229 42 view .LVU491
 2156              	.LBE188:
 2157              	.LBE187:
 2158              	.LBE184:
 2159              	.LBE183:
 2160              	.LBB189:
 2161              	.LBI189:
 169:Core/Inc/Fusion/FusionMath.h **** 
 2162              		.loc 2 169 21 is_stmt 1 view .LVU492
 2163              	.LBB190:
 171:Core/Inc/Fusion/FusionMath.h ****         float f;
 2164              		.loc 2 171 5 view .LVU493
 176:Core/Inc/Fusion/FusionMath.h ****     union32.i = 0x5F1F1412 - (union32.i >> 1);
 2165              		.loc 2 176 5 view .LVU494
 177:Core/Inc/Fusion/FusionMath.h ****     return union32.f * (1.69000231f - 0.714158168f * x * union32.f * union32.f);
 2166              		.loc 2 177 5 view .LVU495
 177:Core/Inc/Fusion/FusionMath.h ****     return union32.f * (1.69000231f - 0.714158168f * x * union32.f * union32.f);
 2167              		.loc 2 177 41 is_stmt 0 view .LVU496
 2168 0184 4310     		asrs	r3, r0, #1
 178:Core/Inc/Fusion/FusionMath.h **** }
 2169              		.loc 2 178 5 is_stmt 1 view .LVU497
 2170 0186 834A     		ldr	r2, .L82
 2171 0188 D31A     		subs	r3, r2, r3
 2172 018a 9846     		mov	r8, r3
 178:Core/Inc/Fusion/FusionMath.h **** }
 2173              		.loc 2 178 52 is_stmt 0 view .LVU498
 2174 018c 8249     		ldr	r1, .L82+4
 2175 018e FFF7FEFF 		bl	__aeabi_fmul
 2176              	.LVL238:
 178:Core/Inc/Fusion/FusionMath.h **** }
 2177              		.loc 2 178 52 view .LVU499
 2178 0192 011C     		adds	r1, r0, #0
 178:Core/Inc/Fusion/FusionMath.h **** }
 2179              		.loc 2 178 56 view .LVU500
 2180 0194 4046     		mov	r0, r8
 2181 0196 FFF7FEFF 		bl	__aeabi_fmul
 2182              	.LVL239:
 2183 019a 011C     		adds	r1, r0, #0
 178:Core/Inc/Fusion/FusionMath.h **** }
 2184              		.loc 2 178 68 view .LVU501
 2185 019c 4046     		mov	r0, r8
 2186 019e FFF7FEFF 		bl	__aeabi_fmul
 2187              	.LVL240:
 2188 01a2 011C     		adds	r1, r0, #0
 178:Core/Inc/Fusion/FusionMath.h **** }
 2189              		.loc 2 178 37 view .LVU502
 2190 01a4 7D48     		ldr	r0, .L82+8
 2191 01a6 FFF7FEFF 		bl	__aeabi_fsub
 2192              	.LVL241:
 2193 01aa 011C     		adds	r1, r0, #0
 178:Core/Inc/Fusion/FusionMath.h **** }
 2194              		.loc 2 178 22 view .LVU503
 2195 01ac 4046     		mov	r0, r8
 2196 01ae FFF7FEFF 		bl	__aeabi_fmul
 2197              	.LVL242:
ARM GAS  /tmp/ccEJb272.s 			page 55


 2198 01b2 8046     		mov	r8, r0
 2199              	.LVL243:
 178:Core/Inc/Fusion/FusionMath.h **** }
 2200              		.loc 2 178 22 view .LVU504
 2201              	.LBE190:
 2202              	.LBE189:
 307:Core/Inc/Fusion/FusionMath.h **** }
 2203              		.loc 2 307 5 is_stmt 1 view .LVU505
 2204 01b4 2B00     		movs	r3, r5
 2205 01b6 0FAE     		add	r6, sp, #60
 2206 01b8 07CE     		ldmia	r6!, {r0, r1, r2}
 2207 01ba 07C3     		stmia	r3!, {r0, r1, r2}
 2208              	.LVL244:
 2209              	.LBB191:
 2210              	.LBI191:
 238:Core/Inc/Fusion/FusionMath.h ****     FusionVector result;
 2211              		.loc 2 238 28 view .LVU506
 2212              	.LBB192:
 239:Core/Inc/Fusion/FusionMath.h ****     result.axis.x = vector.axis.x * scalar;
 2213              		.loc 2 239 5 view .LVU507
 240:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = vector.axis.y * scalar;
 2214              		.loc 2 240 5 view .LVU508
 240:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = vector.axis.y * scalar;
 2215              		.loc 2 240 35 is_stmt 0 view .LVU509
 2216 01bc 1999     		ldr	r1, [sp, #100]
 2217 01be 4046     		mov	r0, r8
 2218 01c0 FFF7FEFF 		bl	__aeabi_fmul
 2219              	.LVL245:
 240:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = vector.axis.y * scalar;
 2220              		.loc 2 240 19 view .LVU510
 2221 01c4 1D90     		str	r0, [sp, #116]
 241:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = vector.axis.z * scalar;
 2222              		.loc 2 241 5 is_stmt 1 view .LVU511
 241:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = vector.axis.z * scalar;
 2223              		.loc 2 241 35 is_stmt 0 view .LVU512
 2224 01c6 1A99     		ldr	r1, [sp, #104]
 2225 01c8 4046     		mov	r0, r8
 2226 01ca FFF7FEFF 		bl	__aeabi_fmul
 2227              	.LVL246:
 241:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = vector.axis.z * scalar;
 2228              		.loc 2 241 19 view .LVU513
 2229 01ce 1E90     		str	r0, [sp, #120]
 242:Core/Inc/Fusion/FusionMath.h ****     return result;
 2230              		.loc 2 242 5 is_stmt 1 view .LVU514
 242:Core/Inc/Fusion/FusionMath.h ****     return result;
 2231              		.loc 2 242 35 is_stmt 0 view .LVU515
 2232 01d0 1B99     		ldr	r1, [sp, #108]
 2233 01d2 4046     		mov	r0, r8
 2234 01d4 FFF7FEFF 		bl	__aeabi_fmul
 2235              	.LVL247:
 242:Core/Inc/Fusion/FusionMath.h ****     return result;
 2236              		.loc 2 242 19 view .LVU516
 2237 01d8 1F90     		str	r0, [sp, #124]
 243:Core/Inc/Fusion/FusionMath.h **** }
 2238              		.loc 2 243 5 is_stmt 1 view .LVU517
 243:Core/Inc/Fusion/FusionMath.h **** }
 2239              		.loc 2 243 12 is_stmt 0 view .LVU518
ARM GAS  /tmp/ccEJb272.s 			page 56


 2240 01da 30AB     		add	r3, sp, #192
 2241 01dc 9C46     		mov	ip, r3
 2242 01de 1A00     		movs	r2, r3
 2243 01e0 2100     		movs	r1, r4
 2244 01e2 49C9     		ldmia	r1!, {r0, r3, r6}
 2245 01e4 49C2     		stmia	r2!, {r0, r3, r6}
 2246              	.LVL248:
 243:Core/Inc/Fusion/FusionMath.h **** }
 2247              		.loc 2 243 12 view .LVU519
 2248 01e6 3A00     		movs	r2, r7
 2249 01e8 6346     		mov	r3, ip
 2250 01ea 43CB     		ldmia	r3!, {r0, r1, r6}
 2251 01ec 43C2     		stmia	r2!, {r0, r1, r6}
 2252 01ee 2DAB     		add	r3, sp, #180
 2253 01f0 2A00     		movs	r2, r5
 2254 01f2 43CB     		ldmia	r3!, {r0, r1, r6}
 2255 01f4 43C2     		stmia	r2!, {r0, r1, r6}
 2256              	.LBE192:
 2257              	.LBE191:
 2258              	.LBE182:
 2259              	.LBE181:
 2260              	.LBB193:
 2261              	.LBI193:
 266:Core/Inc/Fusion/FusionMath.h **** #define A vectorA.axis
 2262              		.loc 2 266 28 is_stmt 1 view .LVU520
 2263              	.LBB194:
 269:Core/Inc/Fusion/FusionMath.h ****     result.axis.x = A.y * B.z - A.z * B.y;
 2264              		.loc 2 269 5 view .LVU521
 270:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = A.z * B.x - A.x * B.z;
 2265              		.loc 2 270 5 view .LVU522
 270:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = A.z * B.x - A.x * B.z;
 2266              		.loc 2 270 22 is_stmt 0 view .LVU523
 2267 01f6 7B68     		ldr	r3, [r7, #4]
 2268 01f8 9846     		mov	r8, r3
 2269              	.LVL249:
 270:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = A.z * B.x - A.x * B.z;
 2270              		.loc 2 270 28 view .LVU524
 2271 01fa 1B9B     		ldr	r3, [sp, #108]
 2272 01fc 9946     		mov	r9, r3
 270:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = A.z * B.x - A.x * B.z;
 2273              		.loc 2 270 25 view .LVU525
 2274 01fe 191C     		adds	r1, r3, #0
 2275 0200 4046     		mov	r0, r8
 2276 0202 FFF7FEFF 		bl	__aeabi_fmul
 2277              	.LVL250:
 2278 0206 061C     		adds	r6, r0, #0
 270:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = A.z * B.x - A.x * B.z;
 2279              		.loc 2 270 34 view .LVU526
 2280 0208 BB68     		ldr	r3, [r7, #8]
 2281 020a 9B46     		mov	fp, r3
 270:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = A.z * B.x - A.x * B.z;
 2282              		.loc 2 270 40 view .LVU527
 2283 020c 1A9F     		ldr	r7, [sp, #104]
 270:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = A.z * B.x - A.x * B.z;
 2284              		.loc 2 270 37 view .LVU528
 2285 020e 391C     		adds	r1, r7, #0
 2286 0210 181C     		adds	r0, r3, #0
ARM GAS  /tmp/ccEJb272.s 			page 57


 2287 0212 FFF7FEFF 		bl	__aeabi_fmul
 2288              	.LVL251:
 2289 0216 011C     		adds	r1, r0, #0
 270:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = A.z * B.x - A.x * B.z;
 2290              		.loc 2 270 31 view .LVU529
 2291 0218 301C     		adds	r0, r6, #0
 2292 021a FFF7FEFF 		bl	__aeabi_fsub
 2293              	.LVL252:
 270:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = A.z * B.x - A.x * B.z;
 2294              		.loc 2 270 19 view .LVU530
 2295 021e 1D90     		str	r0, [sp, #116]
 271:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = A.x * B.y - A.y * B.x;
 2296              		.loc 2 271 5 is_stmt 1 view .LVU531
 271:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = A.x * B.y - A.y * B.x;
 2297              		.loc 2 271 28 is_stmt 0 view .LVU532
 2298 0220 199E     		ldr	r6, [sp, #100]
 271:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = A.x * B.y - A.y * B.x;
 2299              		.loc 2 271 25 view .LVU533
 2300 0222 311C     		adds	r1, r6, #0
 2301 0224 5846     		mov	r0, fp
 2302 0226 FFF7FEFF 		bl	__aeabi_fmul
 2303              	.LVL253:
 2304 022a 8346     		mov	fp, r0
 271:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = A.x * B.y - A.y * B.x;
 2305              		.loc 2 271 34 view .LVU534
 2306 022c 159D     		ldr	r5, [sp, #84]
 271:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = A.x * B.y - A.y * B.x;
 2307              		.loc 2 271 37 view .LVU535
 2308 022e 291C     		adds	r1, r5, #0
 2309 0230 4846     		mov	r0, r9
 2310 0232 FFF7FEFF 		bl	__aeabi_fmul
 2311              	.LVL254:
 2312 0236 011C     		adds	r1, r0, #0
 271:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = A.x * B.y - A.y * B.x;
 2313              		.loc 2 271 31 view .LVU536
 2314 0238 5846     		mov	r0, fp
 2315 023a FFF7FEFF 		bl	__aeabi_fsub
 2316              	.LVL255:
 271:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = A.x * B.y - A.y * B.x;
 2317              		.loc 2 271 19 view .LVU537
 2318 023e 1E90     		str	r0, [sp, #120]
 272:Core/Inc/Fusion/FusionMath.h ****     return result;
 2319              		.loc 2 272 5 is_stmt 1 view .LVU538
 272:Core/Inc/Fusion/FusionMath.h ****     return result;
 2320              		.loc 2 272 25 is_stmt 0 view .LVU539
 2321 0240 291C     		adds	r1, r5, #0
 2322 0242 381C     		adds	r0, r7, #0
 2323 0244 FFF7FEFF 		bl	__aeabi_fmul
 2324              	.LVL256:
 2325 0248 051C     		adds	r5, r0, #0
 272:Core/Inc/Fusion/FusionMath.h ****     return result;
 2326              		.loc 2 272 37 view .LVU540
 2327 024a 311C     		adds	r1, r6, #0
 2328 024c 4046     		mov	r0, r8
 2329 024e FFF7FEFF 		bl	__aeabi_fmul
 2330              	.LVL257:
 2331 0252 011C     		adds	r1, r0, #0
ARM GAS  /tmp/ccEJb272.s 			page 58


 272:Core/Inc/Fusion/FusionMath.h ****     return result;
 2332              		.loc 2 272 31 view .LVU541
 2333 0254 281C     		adds	r0, r5, #0
 2334 0256 FFF7FEFF 		bl	__aeabi_fsub
 2335              	.LVL258:
 272:Core/Inc/Fusion/FusionMath.h ****     return result;
 2336              		.loc 2 272 19 view .LVU542
 2337 025a 1F90     		str	r0, [sp, #124]
 273:Core/Inc/Fusion/FusionMath.h **** #undef A
 2338              		.loc 2 273 5 is_stmt 1 view .LVU543
 273:Core/Inc/Fusion/FusionMath.h **** #undef A
 2339              		.loc 2 273 12 is_stmt 0 view .LVU544
 2340 025c 4AAB     		add	r3, sp, #296
 2341 025e 1A00     		movs	r2, r3
 2342 0260 23CC     		ldmia	r4!, {r0, r1, r5}
 2343 0262 23C2     		stmia	r2!, {r0, r1, r5}
 2344              	.LBE194:
 2345              	.LBE193:
 138:Core/Src/Fusion/FusionAhrs.c **** 
 2346              		.loc 1 138 43 view .LVU545
 2347 0264 5246     		mov	r2, r10
 2348 0266 3832     		adds	r2, r2, #56
 2349 0268 13CB     		ldmia	r3!, {r0, r1, r4}
 2350 026a 13C2     		stmia	r2!, {r0, r1, r4}
 141:Core/Src/Fusion/FusionAhrs.c ****             halfAccelerometerFeedback = ahrs->halfAccelerometerFeedback;
 2351              		.loc 1 141 9 is_stmt 1 view .LVU546
 141:Core/Src/Fusion/FusionAhrs.c ****             halfAccelerometerFeedback = ahrs->halfAccelerometerFeedback;
 2352              		.loc 1 141 18 is_stmt 0 view .LVU547
 2353 026c 2C23     		movs	r3, #44
 2354 026e 5246     		mov	r2, r10
 2355 0270 D35C     		ldrb	r3, [r2, r3]
 141:Core/Src/Fusion/FusionAhrs.c ****             halfAccelerometerFeedback = ahrs->halfAccelerometerFeedback;
 2356              		.loc 1 141 12 view .LVU548
 2357 0272 002B     		cmp	r3, #0
 2358 0274 38D1     		bne	.L47
 2359              	.LVL259:
 141:Core/Src/Fusion/FusionAhrs.c ****             halfAccelerometerFeedback = ahrs->halfAccelerometerFeedback;
 2360              		.loc 1 141 12 view .LVU549
 2361 0276 12AB     		add	r3, sp, #72
 2362 0278 3832     		adds	r2, r2, #56
 2363              	.LVL260:
 141:Core/Src/Fusion/FusionAhrs.c ****             halfAccelerometerFeedback = ahrs->halfAccelerometerFeedback;
 2364              		.loc 1 141 12 view .LVU550
 2365 027a 1900     		movs	r1, r3
 2366 027c 31CA     		ldmia	r2!, {r0, r4, r5}
 2367 027e 31C1     		stmia	r1!, {r0, r4, r5}
 2368              	.LBB195:
 2369              	.LBI195:
 283:Core/Inc/Fusion/FusionMath.h ****     return FusionVectorSum(FusionVectorHadamardProduct(vector, vector));
 2370              		.loc 2 283 21 is_stmt 1 discriminator 1 view .LVU551
 2371              	.LBB196:
 284:Core/Inc/Fusion/FusionMath.h **** }
 2372              		.loc 2 284 5 discriminator 1 view .LVU552
 2373 0280 19AE     		add	r6, sp, #100
 2374 0282 3200     		movs	r2, r6
 2375 0284 1900     		movs	r1, r3
 2376 0286 31C9     		ldmia	r1!, {r0, r4, r5}
ARM GAS  /tmp/ccEJb272.s 			page 59


 2377 0288 31C2     		stmia	r2!, {r0, r4, r5}
 2378 028a 0D00     		movs	r5, r1
 2379 028c 0A00     		movs	r2, r1
 2380 028e 13CB     		ldmia	r3!, {r0, r1, r4}
 2381 0290 13C2     		stmia	r2!, {r0, r1, r4}
 2382              	.LBB197:
 2383              	.LBI197:
 252:Core/Inc/Fusion/FusionMath.h ****     FusionVector result;
 2384              		.loc 2 252 28 discriminator 1 view .LVU553
 2385              	.LBB198:
 253:Core/Inc/Fusion/FusionMath.h ****     result.axis.x = vectorA.axis.x * vectorB.axis.x;
 2386              		.loc 2 253 5 discriminator 1 view .LVU554
 254:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = vectorA.axis.y * vectorB.axis.y;
 2387              		.loc 2 254 5 discriminator 1 view .LVU555
 254:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = vectorA.axis.y * vectorB.axis.y;
 2388              		.loc 2 254 36 is_stmt 0 discriminator 1 view .LVU556
 2389 0292 1599     		ldr	r1, [sp, #84]
 2390 0294 1998     		ldr	r0, [sp, #100]
 2391 0296 FFF7FEFF 		bl	__aeabi_fmul
 2392              	.LVL261:
 2393 029a 071C     		adds	r7, r0, #0
 254:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = vectorA.axis.y * vectorB.axis.y;
 2394              		.loc 2 254 19 discriminator 1 view .LVU557
 2395 029c 1DAC     		add	r4, sp, #116
 2396 029e 1D90     		str	r0, [sp, #116]
 255:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = vectorA.axis.z * vectorB.axis.z;
 2397              		.loc 2 255 5 is_stmt 1 discriminator 1 view .LVU558
 255:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = vectorA.axis.z * vectorB.axis.z;
 2398              		.loc 2 255 36 is_stmt 0 discriminator 1 view .LVU559
 2399 02a0 6968     		ldr	r1, [r5, #4]
 2400 02a2 1A98     		ldr	r0, [sp, #104]
 2401 02a4 FFF7FEFF 		bl	__aeabi_fmul
 2402              	.LVL262:
 2403 02a8 8046     		mov	r8, r0
 255:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = vectorA.axis.z * vectorB.axis.z;
 2404              		.loc 2 255 19 discriminator 1 view .LVU560
 2405 02aa 1E90     		str	r0, [sp, #120]
 256:Core/Inc/Fusion/FusionMath.h ****     return result;
 2406              		.loc 2 256 5 is_stmt 1 discriminator 1 view .LVU561
 256:Core/Inc/Fusion/FusionMath.h ****     return result;
 2407              		.loc 2 256 33 is_stmt 0 discriminator 1 view .LVU562
 2408 02ac 1B98     		ldr	r0, [sp, #108]
 256:Core/Inc/Fusion/FusionMath.h ****     return result;
 2409              		.loc 2 256 50 discriminator 1 view .LVU563
 2410 02ae A968     		ldr	r1, [r5, #8]
 256:Core/Inc/Fusion/FusionMath.h ****     return result;
 2411              		.loc 2 256 36 discriminator 1 view .LVU564
 2412 02b0 FFF7FEFF 		bl	__aeabi_fmul
 2413              	.LVL263:
 2414 02b4 051C     		adds	r5, r0, #0
 256:Core/Inc/Fusion/FusionMath.h ****     return result;
 2415              		.loc 2 256 19 discriminator 1 view .LVU565
 2416 02b6 1F90     		str	r0, [sp, #124]
 257:Core/Inc/Fusion/FusionMath.h **** }
 2417              		.loc 2 257 5 is_stmt 1 discriminator 1 view .LVU566
 257:Core/Inc/Fusion/FusionMath.h **** }
 2418              		.loc 2 257 12 is_stmt 0 discriminator 1 view .LVU567
ARM GAS  /tmp/ccEJb272.s 			page 60


 2419 02b8 50AB     		add	r3, sp, #320
 2420 02ba 9C46     		mov	ip, r3
 2421 02bc 1A00     		movs	r2, r3
 2422 02be 2100     		movs	r1, r4
 2423 02c0 49C9     		ldmia	r1!, {r0, r3, r6}
 2424 02c2 49C2     		stmia	r2!, {r0, r3, r6}
 2425 02c4 6346     		mov	r3, ip
 2426 02c6 07CB     		ldmia	r3!, {r0, r1, r2}
 2427 02c8 07C4     		stmia	r4!, {r0, r1, r2}
 2428              	.LBE198:
 2429              	.LBE197:
 2430              	.LBB199:
 2431              	.LBI199:
 228:Core/Inc/Fusion/FusionMath.h ****     return vector.axis.x + vector.axis.y + vector.axis.z;
 2432              		.loc 2 228 21 is_stmt 1 discriminator 1 view .LVU568
 2433              	.LBB200:
 229:Core/Inc/Fusion/FusionMath.h **** }
 2434              		.loc 2 229 5 discriminator 1 view .LVU569
 229:Core/Inc/Fusion/FusionMath.h **** }
 2435              		.loc 2 229 26 is_stmt 0 discriminator 1 view .LVU570
 2436 02ca 4146     		mov	r1, r8
 2437 02cc 381C     		adds	r0, r7, #0
 2438 02ce FFF7FEFF 		bl	__aeabi_fadd
 2439              	.LVL264:
 2440 02d2 011C     		adds	r1, r0, #0
 229:Core/Inc/Fusion/FusionMath.h **** }
 2441              		.loc 2 229 42 discriminator 1 view .LVU571
 2442 02d4 281C     		adds	r0, r5, #0
 2443 02d6 FFF7FEFF 		bl	__aeabi_fadd
 2444              	.LVL265:
 2445 02da 011C     		adds	r1, r0, #0
 2446              	.LBE200:
 2447              	.LBE199:
 2448              	.LBE196:
 2449              	.LBE195:
 141:Core/Src/Fusion/FusionAhrs.c ****             halfAccelerometerFeedback = ahrs->halfAccelerometerFeedback;
 2450              		.loc 1 141 42 discriminator 1 view .LVU572
 2451 02dc 5346     		mov	r3, r10
 2452 02de 5868     		ldr	r0, [r3, #4]
 2453 02e0 FFF7FEFF 		bl	__aeabi_fcmpge
 2454              	.LVL266:
 2455 02e4 0028     		cmp	r0, #0
 2456 02e6 4FD0     		beq	.L76
 2457              	.L47:
 142:Core/Src/Fusion/FusionAhrs.c ****             ahrs->accelerometerIgnored = false;
 2458              		.loc 1 142 13 is_stmt 1 view .LVU573
 142:Core/Src/Fusion/FusionAhrs.c ****             ahrs->accelerometerIgnored = false;
 2459              		.loc 1 142 39 is_stmt 0 view .LVU574
 2460 02e8 2AAA     		add	r2, sp, #168
 2461 02ea 5346     		mov	r3, r10
 2462 02ec 3833     		adds	r3, r3, #56
 2463 02ee 13CB     		ldmia	r3!, {r0, r1, r4}
 2464 02f0 13C2     		stmia	r2!, {r0, r1, r4}
 143:Core/Src/Fusion/FusionAhrs.c ****             ahrs->accelerationRejectionTimer -= ahrs->accelerationRejectionTimer >= 10 ? 10 : 0;
 2465              		.loc 1 143 13 is_stmt 1 view .LVU575
 143:Core/Src/Fusion/FusionAhrs.c ****             ahrs->accelerationRejectionTimer -= ahrs->accelerationRejectionTimer >= 10 ? 10 : 0;
 2466              		.loc 1 143 40 is_stmt 0 view .LVU576
ARM GAS  /tmp/ccEJb272.s 			page 61


 2467 02f2 5023     		movs	r3, #80
 2468 02f4 0022     		movs	r2, #0
 2469 02f6 5146     		mov	r1, r10
 2470 02f8 CA54     		strb	r2, [r1, r3]
 144:Core/Src/Fusion/FusionAhrs.c ****         } else {
 2471              		.loc 1 144 13 is_stmt 1 view .LVU577
 144:Core/Src/Fusion/FusionAhrs.c ****         } else {
 2472              		.loc 1 144 46 is_stmt 0 view .LVU578
 2473 02fa 4B6D     		ldr	r3, [r1, #84]
 144:Core/Src/Fusion/FusionAhrs.c ****         } else {
 2474              		.loc 1 144 93 view .LVU579
 2475 02fc 092B     		cmp	r3, #9
 2476 02fe 41D9     		bls	.L64
 2477              	.LVL267:
 144:Core/Src/Fusion/FusionAhrs.c ****         } else {
 2478              		.loc 1 144 93 view .LVU580
 2479 0300 0A32     		adds	r2, r2, #10
 2480              	.L50:
 144:Core/Src/Fusion/FusionAhrs.c ****         } else {
 2481              		.loc 1 144 46 discriminator 4 view .LVU581
 2482 0302 9B1A     		subs	r3, r3, r2
 2483 0304 5246     		mov	r2, r10
 2484 0306 5365     		str	r3, [r2, #84]
 2485              	.LVL268:
 2486              	.L45:
 151:Core/Src/Fusion/FusionAhrs.c ****     ahrs->magnetometerIgnored = true;
 2487              		.loc 1 151 5 is_stmt 1 view .LVU582
 151:Core/Src/Fusion/FusionAhrs.c ****     ahrs->magnetometerIgnored = true;
 2488              		.loc 1 151 18 is_stmt 0 view .LVU583
 2489 0308 0021     		movs	r1, #0
 2490 030a 2791     		str	r1, [sp, #156]
 2491 030c 2891     		str	r1, [sp, #160]
 2492 030e 2991     		str	r1, [sp, #164]
 152:Core/Src/Fusion/FusionAhrs.c ****     if (FusionVectorIsZero(magnetometer) == false) {
 2493              		.loc 1 152 5 is_stmt 1 view .LVU584
 152:Core/Src/Fusion/FusionAhrs.c ****     if (FusionVectorIsZero(magnetometer) == false) {
 2494              		.loc 1 152 31 is_stmt 0 view .LVU585
 2495 0310 5923     		movs	r3, #89
 2496 0312 0122     		movs	r2, #1
 2497 0314 5046     		mov	r0, r10
 2498 0316 C254     		strb	r2, [r0, r3]
 153:Core/Src/Fusion/FusionAhrs.c **** 
 2499              		.loc 1 153 5 is_stmt 1 view .LVU586
 2500 0318 1DAA     		add	r2, sp, #116
 2501 031a 6DAB     		add	r3, sp, #436
 2502 031c 31CB     		ldmia	r3!, {r0, r4, r5}
 2503 031e 31C2     		stmia	r2!, {r0, r4, r5}
 2504              	.LBB201:
 2505              	.LBI201:
 191:Core/Inc/Fusion/FusionMath.h ****     return (vector.axis.x == 0.0f) && (vector.axis.y == 0.0f) && (vector.axis.z == 0.0f);
 2506              		.loc 2 191 20 view .LVU587
 2507              	.LBB202:
 192:Core/Inc/Fusion/FusionMath.h **** }
 2508              		.loc 2 192 5 view .LVU588
 192:Core/Inc/Fusion/FusionMath.h **** }
 2509              		.loc 2 192 63 is_stmt 0 view .LVU589
 2510 0320 1D98     		ldr	r0, [sp, #116]
ARM GAS  /tmp/ccEJb272.s 			page 62


 2511 0322 FFF7FEFF 		bl	__aeabi_fcmpeq
 2512              	.LVL269:
 2513 0326 0028     		cmp	r0, #0
 2514 0328 3AD0     		beq	.L77
 192:Core/Inc/Fusion/FusionMath.h **** }
 2515              		.loc 2 192 36 view .LVU590
 2516 032a 0021     		movs	r1, #0
 2517 032c 1E98     		ldr	r0, [sp, #120]
 2518 032e FFF7FEFF 		bl	__aeabi_fcmpeq
 2519              	.LVL270:
 2520 0332 0028     		cmp	r0, #0
 2521 0334 00D1     		bne	.LCB1938
 2522 0336 71E3     		b	.L78	@long jump
 2523              	.LCB1938:
 192:Core/Inc/Fusion/FusionMath.h **** }
 2524              		.loc 2 192 63 view .LVU591
 2525 0338 0021     		movs	r1, #0
 2526 033a 1F98     		ldr	r0, [sp, #124]
 2527 033c FFF7FEFF 		bl	__aeabi_fcmpeq
 2528              	.LVL271:
 2529 0340 0028     		cmp	r0, #0
 2530 0342 00D0     		beq	.LCB1945
 2531 0344 6CE3     		b	.L67	@long jump
 2532              	.LCB1945:
 2533 0346 0023     		movs	r3, #0
 2534 0348 2BE0     		b	.L51
 2535              	.L75:
 192:Core/Inc/Fusion/FusionMath.h **** }
 2536              		.loc 2 192 63 view .LVU592
 2537              	.LBE202:
 2538              	.LBE201:
 2539              	.LBB205:
 2540              	.LBB180:
 2541 034a 0023     		movs	r3, #0
 2542 034c DCE6     		b	.L42
 2543              	.L63:
 2544 034e 0123     		movs	r3, #1
 2545 0350 DAE6     		b	.L42
 2546              	.L80:
 192:Core/Inc/Fusion/FusionMath.h **** }
 2547              		.loc 2 192 63 view .LVU593
 2548              	.LBE180:
 2549              	.LBE205:
 2550              	.LBB206:
 130:Core/Src/Fusion/FusionAhrs.c ****             FusionAhrsReset(ahrs);
 2551              		.loc 1 130 13 is_stmt 1 view .LVU594
 130:Core/Src/Fusion/FusionAhrs.c ****             FusionAhrsReset(ahrs);
 2552              		.loc 1 130 36 is_stmt 0 view .LVU595
 2553 0352 1DAC     		add	r4, sp, #116
 2554 0354 5346     		mov	r3, r10
 2555 0356 1033     		adds	r3, r3, #16
 2556 0358 2500     		movs	r5, r4
 2557 035a 07CB     		ldmia	r3!, {r0, r1, r2}
 2558 035c 07C5     		stmia	r5!, {r0, r1, r2}
 2559 035e 1B68     		ldr	r3, [r3]
 2560 0360 2B60     		str	r3, [r5]
 131:Core/Src/Fusion/FusionAhrs.c ****             ahrs->quaternion = quaternion;
ARM GAS  /tmp/ccEJb272.s 			page 63


 2561              		.loc 1 131 13 is_stmt 1 view .LVU596
 2562 0362 5046     		mov	r0, r10
 2563 0364 FFF7FEFF 		bl	FusionAhrsReset
 2564              	.LVL272:
 132:Core/Src/Fusion/FusionAhrs.c ****             ahrs->accelerationRejectionTimer = 0;
 2565              		.loc 1 132 13 view .LVU597
 132:Core/Src/Fusion/FusionAhrs.c ****             ahrs->accelerationRejectionTimer = 0;
 2566              		.loc 1 132 30 is_stmt 0 view .LVU598
 2567 0368 5346     		mov	r3, r10
 2568 036a 1033     		adds	r3, r3, #16
 2569 036c 07CC     		ldmia	r4!, {r0, r1, r2}
 2570 036e 07C3     		stmia	r3!, {r0, r1, r2}
 2571 0370 2A68     		ldr	r2, [r5]
 2572 0372 1A60     		str	r2, [r3]
 133:Core/Src/Fusion/FusionAhrs.c ****             ahrs->accelerationRejectionTimeout = true;
 2573              		.loc 1 133 13 is_stmt 1 view .LVU599
 133:Core/Src/Fusion/FusionAhrs.c ****             ahrs->accelerationRejectionTimeout = true;
 2574              		.loc 1 133 46 is_stmt 0 view .LVU600
 2575 0374 0023     		movs	r3, #0
 2576 0376 5246     		mov	r2, r10
 2577 0378 5365     		str	r3, [r2, #84]
 134:Core/Src/Fusion/FusionAhrs.c ****         }
 2578              		.loc 1 134 13 is_stmt 1 view .LVU601
 134:Core/Src/Fusion/FusionAhrs.c ****         }
 2579              		.loc 1 134 48 is_stmt 0 view .LVU602
 2580 037a 5833     		adds	r3, r3, #88
 2581 037c 0122     		movs	r2, #1
 2582 037e 5146     		mov	r1, r10
 2583 0380 CA54     		strb	r2, [r1, r3]
 2584 0382 CAE6     		b	.L46
 2585              	.LVL273:
 2586              	.L64:
 134:Core/Src/Fusion/FusionAhrs.c ****         }
 2587              		.loc 1 134 48 view .LVU603
 2588              	.LBE206:
 144:Core/Src/Fusion/FusionAhrs.c ****         } else {
 2589              		.loc 1 144 93 view .LVU604
 2590 0384 0022     		movs	r2, #0
 2591 0386 BCE7     		b	.L50
 2592              	.LVL274:
 2593              	.L76:
 146:Core/Src/Fusion/FusionAhrs.c ****         }
 2594              		.loc 1 146 13 is_stmt 1 view .LVU605
 146:Core/Src/Fusion/FusionAhrs.c ****         }
 2595              		.loc 1 146 45 is_stmt 0 view .LVU606
 2596 0388 5346     		mov	r3, r10
 2597 038a 5B6D     		ldr	r3, [r3, #84]
 2598 038c 0133     		adds	r3, r3, #1
 2599 038e 5246     		mov	r2, r10
 2600 0390 5365     		str	r3, [r2, #84]
 2601 0392 B9E7     		b	.L45
 2602              	.L83:
 2603              		.align	2
 2604              	.L82:
 2605 0394 12141F5F 		.word	1595872274
 2606 0398 12D3363F 		.word	1060557586
 2607 039c FF51D83F 		.word	1071141375
ARM GAS  /tmp/ccEJb272.s 			page 64


 2608              	.L77:
 2609              	.LBB207:
 2610              	.LBB203:
 192:Core/Inc/Fusion/FusionMath.h **** }
 2611              		.loc 2 192 63 view .LVU607
 2612 03a0 0023     		movs	r3, #0
 2613              	.L51:
 2614              	.LBE203:
 2615              	.LBE207:
 153:Core/Src/Fusion/FusionAhrs.c **** 
 2616              		.loc 1 153 8 view .LVU608
 2617 03a2 002B     		cmp	r3, #0
 2618 03a4 00D0     		beq	.LCB2043
 2619 03a6 7CE1     		b	.L54	@long jump
 2620              	.LCB2043:
 2621              	.LBB208:
 156:Core/Src/Fusion/FusionAhrs.c ****         if (ahrs->magneticRejectionTimer > ahrs->settings.rejectionTimeout) {
 2622              		.loc 1 156 9 is_stmt 1 view .LVU609
 156:Core/Src/Fusion/FusionAhrs.c ****         if (ahrs->magneticRejectionTimer > ahrs->settings.rejectionTimeout) {
 2623              		.loc 1 156 40 is_stmt 0 view .LVU610
 2624 03a8 6033     		adds	r3, r3, #96
 2625 03aa 0022     		movs	r2, #0
 2626 03ac 5146     		mov	r1, r10
 2627 03ae CA54     		strb	r2, [r1, r3]
 157:Core/Src/Fusion/FusionAhrs.c ****             FusionAhrsSetHeading(ahrs, FusionCompassCalculateHeading(halfGravity, magnetometer));
 2628              		.loc 1 157 9 is_stmt 1 view .LVU611
 157:Core/Src/Fusion/FusionAhrs.c ****             FusionAhrsSetHeading(ahrs, FusionCompassCalculateHeading(halfGravity, magnetometer));
 2629              		.loc 1 157 12 is_stmt 0 view .LVU612
 2630 03b0 CA6D     		ldr	r2, [r1, #92]
 2631 03b2 CB68     		ldr	r3, [r1, #12]
 2632 03b4 9A42     		cmp	r2, r3
 2633 03b6 00D9     		bls	.LCB2056
 2634 03b8 34E3     		b	.L81	@long jump
 2635              	.LCB2056:
 2636              	.LVL275:
 2637              	.L55:
 164:Core/Src/Fusion/FusionAhrs.c ****                 .axis.x = Q.x * Q.y + Q.w * Q.z,
 2638              		.loc 1 164 9 is_stmt 1 view .LVU613
 165:Core/Src/Fusion/FusionAhrs.c ****                 .axis.y = Q.w * Q.w - 0.5f + Q.y * Q.y,
 2639              		.loc 1 165 28 is_stmt 0 view .LVU614
 2640 03ba 5346     		mov	r3, r10
 2641 03bc 5E69     		ldr	r6, [r3, #20]
 165:Core/Src/Fusion/FusionAhrs.c ****                 .axis.y = Q.w * Q.w - 0.5f + Q.y * Q.y,
 2642              		.loc 1 165 34 view .LVU615
 2643 03be 9D69     		ldr	r5, [r3, #24]
 165:Core/Src/Fusion/FusionAhrs.c ****                 .axis.y = Q.w * Q.w - 0.5f + Q.y * Q.y,
 2644              		.loc 1 165 31 view .LVU616
 2645 03c0 291C     		adds	r1, r5, #0
 2646              	.LVL276:
 165:Core/Src/Fusion/FusionAhrs.c ****                 .axis.y = Q.w * Q.w - 0.5f + Q.y * Q.y,
 2647              		.loc 1 165 31 view .LVU617
 2648 03c2 301C     		adds	r0, r6, #0
 2649 03c4 FFF7FEFF 		bl	__aeabi_fmul
 2650              	.LVL277:
 2651 03c8 071C     		adds	r7, r0, #0
 165:Core/Src/Fusion/FusionAhrs.c ****                 .axis.y = Q.w * Q.w - 0.5f + Q.y * Q.y,
 2652              		.loc 1 165 40 view .LVU618
ARM GAS  /tmp/ccEJb272.s 			page 65


 2653 03ca 5346     		mov	r3, r10
 2654 03cc 1C69     		ldr	r4, [r3, #16]
 165:Core/Src/Fusion/FusionAhrs.c ****                 .axis.y = Q.w * Q.w - 0.5f + Q.y * Q.y,
 2655              		.loc 1 165 46 view .LVU619
 2656 03ce DB69     		ldr	r3, [r3, #28]
 2657 03d0 9946     		mov	r9, r3
 165:Core/Src/Fusion/FusionAhrs.c ****                 .axis.y = Q.w * Q.w - 0.5f + Q.y * Q.y,
 2658              		.loc 1 165 43 view .LVU620
 2659 03d2 191C     		adds	r1, r3, #0
 2660 03d4 201C     		adds	r0, r4, #0
 2661 03d6 FFF7FEFF 		bl	__aeabi_fmul
 2662              	.LVL278:
 2663 03da 011C     		adds	r1, r0, #0
 165:Core/Src/Fusion/FusionAhrs.c ****                 .axis.y = Q.w * Q.w - 0.5f + Q.y * Q.y,
 2664              		.loc 1 165 37 view .LVU621
 2665 03dc 381C     		adds	r0, r7, #0
 2666 03de FFF7FEFF 		bl	__aeabi_fadd
 2667              	.LVL279:
 164:Core/Src/Fusion/FusionAhrs.c ****                 .axis.x = Q.x * Q.y + Q.w * Q.z,
 2668              		.loc 1 164 28 view .LVU622
 2669 03e2 0C90     		str	r0, [sp, #48]
 166:Core/Src/Fusion/FusionAhrs.c ****                 .axis.z = Q.y * Q.z - Q.w * Q.x
 2670              		.loc 1 166 31 view .LVU623
 2671 03e4 211C     		adds	r1, r4, #0
 2672 03e6 201C     		adds	r0, r4, #0
 2673 03e8 FFF7FEFF 		bl	__aeabi_fmul
 2674              	.LVL280:
 166:Core/Src/Fusion/FusionAhrs.c ****                 .axis.z = Q.y * Q.z - Q.w * Q.x
 2675              		.loc 1 166 37 view .LVU624
 2676 03ec FC21     		movs	r1, #252
 2677 03ee 8905     		lsls	r1, r1, #22
 2678 03f0 FFF7FEFF 		bl	__aeabi_fsub
 2679              	.LVL281:
 2680 03f4 8046     		mov	r8, r0
 166:Core/Src/Fusion/FusionAhrs.c ****                 .axis.z = Q.y * Q.z - Q.w * Q.x
 2681              		.loc 1 166 50 view .LVU625
 2682 03f6 291C     		adds	r1, r5, #0
 2683 03f8 281C     		adds	r0, r5, #0
 2684 03fa FFF7FEFF 		bl	__aeabi_fmul
 2685              	.LVL282:
 2686 03fe 011C     		adds	r1, r0, #0
 166:Core/Src/Fusion/FusionAhrs.c ****                 .axis.z = Q.y * Q.z - Q.w * Q.x
 2687              		.loc 1 166 44 view .LVU626
 2688 0400 4046     		mov	r0, r8
 2689 0402 FFF7FEFF 		bl	__aeabi_fadd
 2690              	.LVL283:
 164:Core/Src/Fusion/FusionAhrs.c ****                 .axis.x = Q.x * Q.y + Q.w * Q.z,
 2691              		.loc 1 164 28 view .LVU627
 2692 0406 0D90     		str	r0, [sp, #52]
 167:Core/Src/Fusion/FusionAhrs.c ****         }; // second column of transposed rotation matrix scaled by 0.5
 2693              		.loc 1 167 31 view .LVU628
 2694 0408 4946     		mov	r1, r9
 2695 040a 281C     		adds	r0, r5, #0
 2696 040c FFF7FEFF 		bl	__aeabi_fmul
 2697              	.LVL284:
 2698 0410 051C     		adds	r5, r0, #0
 167:Core/Src/Fusion/FusionAhrs.c ****         }; // second column of transposed rotation matrix scaled by 0.5
ARM GAS  /tmp/ccEJb272.s 			page 66


 2699              		.loc 1 167 43 view .LVU629
 2700 0412 211C     		adds	r1, r4, #0
 2701 0414 301C     		adds	r0, r6, #0
 2702 0416 FFF7FEFF 		bl	__aeabi_fmul
 2703              	.LVL285:
 2704 041a 011C     		adds	r1, r0, #0
 167:Core/Src/Fusion/FusionAhrs.c ****         }; // second column of transposed rotation matrix scaled by 0.5
 2705              		.loc 1 167 37 view .LVU630
 2706 041c 281C     		adds	r0, r5, #0
 2707 041e FFF7FEFF 		bl	__aeabi_fsub
 2708              	.LVL286:
 164:Core/Src/Fusion/FusionAhrs.c ****                 .axis.x = Q.x * Q.y + Q.w * Q.z,
 2709              		.loc 1 164 28 view .LVU631
 2710 0422 0E90     		str	r0, [sp, #56]
 171:Core/Src/Fusion/FusionAhrs.c **** 
 2711              		.loc 1 171 9 is_stmt 1 view .LVU632
 2712 0424 15AE     		add	r6, sp, #84
 2713 0426 2DAB     		add	r3, sp, #180
 2714 0428 3200     		movs	r2, r6
 2715 042a 13CB     		ldmia	r3!, {r0, r1, r4}
 2716 042c 13C2     		stmia	r2!, {r0, r1, r4}
 2717 042e 19AD     		add	r5, sp, #100
 2718 0430 6DAB     		add	r3, sp, #436
 2719 0432 2A00     		movs	r2, r5
 2720 0434 13CB     		ldmia	r3!, {r0, r1, r4}
 2721 0436 13C2     		stmia	r2!, {r0, r1, r4}
 2722              	.LBB209:
 2723              	.LBI209:
 266:Core/Inc/Fusion/FusionMath.h **** #define A vectorA.axis
 2724              		.loc 2 266 28 view .LVU633
 2725              	.LBB210:
 269:Core/Inc/Fusion/FusionMath.h ****     result.axis.x = A.y * B.z - A.z * B.y;
 2726              		.loc 2 269 5 view .LVU634
 270:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = A.z * B.x - A.x * B.z;
 2727              		.loc 2 270 5 view .LVU635
 270:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = A.z * B.x - A.x * B.z;
 2728              		.loc 2 270 22 is_stmt 0 view .LVU636
 2729 0438 169B     		ldr	r3, [sp, #88]
 2730 043a 9846     		mov	r8, r3
 270:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = A.z * B.x - A.x * B.z;
 2731              		.loc 2 270 28 view .LVU637
 2732 043c 1B9B     		ldr	r3, [sp, #108]
 2733 043e 9B46     		mov	fp, r3
 270:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = A.z * B.x - A.x * B.z;
 2734              		.loc 2 270 25 view .LVU638
 2735 0440 191C     		adds	r1, r3, #0
 2736 0442 4046     		mov	r0, r8
 2737 0444 FFF7FEFF 		bl	__aeabi_fmul
 2738              	.LVL287:
 2739 0448 041C     		adds	r4, r0, #0
 270:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = A.z * B.x - A.x * B.z;
 2740              		.loc 2 270 34 view .LVU639
 2741 044a 179B     		ldr	r3, [sp, #92]
 2742 044c 1F1C     		adds	r7, r3, #0
 270:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = A.z * B.x - A.x * B.z;
 2743              		.loc 2 270 40 view .LVU640
 2744 044e 1A9A     		ldr	r2, [sp, #104]
ARM GAS  /tmp/ccEJb272.s 			page 67


 270:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = A.z * B.x - A.x * B.z;
 2745              		.loc 2 270 37 view .LVU641
 2746 0450 0392     		str	r2, [sp, #12]
 2747 0452 111C     		adds	r1, r2, #0
 2748 0454 181C     		adds	r0, r3, #0
 2749 0456 FFF7FEFF 		bl	__aeabi_fmul
 2750              	.LVL288:
 2751 045a 011C     		adds	r1, r0, #0
 270:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = A.z * B.x - A.x * B.z;
 2752              		.loc 2 270 31 view .LVU642
 2753 045c 201C     		adds	r0, r4, #0
 2754 045e FFF7FEFF 		bl	__aeabi_fsub
 2755              	.LVL289:
 270:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = A.z * B.x - A.x * B.z;
 2756              		.loc 2 270 19 view .LVU643
 2757 0462 1DAC     		add	r4, sp, #116
 2758 0464 1D90     		str	r0, [sp, #116]
 271:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = A.x * B.y - A.y * B.x;
 2759              		.loc 2 271 5 is_stmt 1 view .LVU644
 271:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = A.x * B.y - A.y * B.x;
 2760              		.loc 2 271 28 is_stmt 0 view .LVU645
 2761 0466 199A     		ldr	r2, [sp, #100]
 2762 0468 9146     		mov	r9, r2
 271:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = A.x * B.y - A.y * B.x;
 2763              		.loc 2 271 25 view .LVU646
 2764 046a 111C     		adds	r1, r2, #0
 2765 046c 381C     		adds	r0, r7, #0
 2766 046e FFF7FEFF 		bl	__aeabi_fmul
 2767              	.LVL290:
 2768 0472 0490     		str	r0, [sp, #16]
 271:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = A.x * B.y - A.y * B.x;
 2769              		.loc 2 271 34 view .LVU647
 2770 0474 159B     		ldr	r3, [sp, #84]
 2771 0476 1F1C     		adds	r7, r3, #0
 271:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = A.x * B.y - A.y * B.x;
 2772              		.loc 2 271 37 view .LVU648
 2773 0478 191C     		adds	r1, r3, #0
 2774 047a 5846     		mov	r0, fp
 2775 047c FFF7FEFF 		bl	__aeabi_fmul
 2776              	.LVL291:
 2777 0480 011C     		adds	r1, r0, #0
 271:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = A.x * B.y - A.y * B.x;
 2778              		.loc 2 271 31 view .LVU649
 2779 0482 0498     		ldr	r0, [sp, #16]
 2780 0484 FFF7FEFF 		bl	__aeabi_fsub
 2781              	.LVL292:
 271:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = A.x * B.y - A.y * B.x;
 2782              		.loc 2 271 19 view .LVU650
 2783 0488 1E90     		str	r0, [sp, #120]
 272:Core/Inc/Fusion/FusionMath.h ****     return result;
 2784              		.loc 2 272 5 is_stmt 1 view .LVU651
 272:Core/Inc/Fusion/FusionMath.h ****     return result;
 2785              		.loc 2 272 25 is_stmt 0 view .LVU652
 2786 048a 391C     		adds	r1, r7, #0
 2787 048c 0398     		ldr	r0, [sp, #12]
 2788 048e FFF7FEFF 		bl	__aeabi_fmul
 2789              	.LVL293:
ARM GAS  /tmp/ccEJb272.s 			page 68


 2790 0492 8346     		mov	fp, r0
 272:Core/Inc/Fusion/FusionMath.h ****     return result;
 2791              		.loc 2 272 37 view .LVU653
 2792 0494 4946     		mov	r1, r9
 2793 0496 4046     		mov	r0, r8
 2794 0498 FFF7FEFF 		bl	__aeabi_fmul
 2795              	.LVL294:
 2796 049c 011C     		adds	r1, r0, #0
 272:Core/Inc/Fusion/FusionMath.h ****     return result;
 2797              		.loc 2 272 31 view .LVU654
 2798 049e 5846     		mov	r0, fp
 2799 04a0 FFF7FEFF 		bl	__aeabi_fsub
 2800              	.LVL295:
 272:Core/Inc/Fusion/FusionMath.h ****     return result;
 2801              		.loc 2 272 19 view .LVU655
 2802 04a4 1F90     		str	r0, [sp, #124]
 273:Core/Inc/Fusion/FusionMath.h **** #undef A
 2803              		.loc 2 273 5 is_stmt 1 view .LVU656
 273:Core/Inc/Fusion/FusionMath.h **** #undef A
 2804              		.loc 2 273 12 is_stmt 0 view .LVU657
 2805 04a6 33AB     		add	r3, sp, #204
 2806 04a8 9C46     		mov	ip, r3
 2807 04aa 1A00     		movs	r2, r3
 2808 04ac 2100     		movs	r1, r4
 2809 04ae 89C9     		ldmia	r1!, {r0, r3, r7}
 2810 04b0 89C2     		stmia	r2!, {r0, r3, r7}
 2811 04b2 0FAA     		add	r2, sp, #60
 2812 04b4 9046     		mov	r8, r2
 2813 04b6 6346     		mov	r3, ip
 2814 04b8 83CB     		ldmia	r3!, {r0, r1, r7}
 2815 04ba 83C2     		stmia	r2!, {r0, r1, r7}
 2816              	.LBE210:
 2817              	.LBE209:
 2818              	.LBB211:
 2819              	.LBI211:
 301:Core/Inc/Fusion/FusionMath.h **** #ifdef FUSION_USE_NORMAL_SQRT
 2820              		.loc 2 301 28 is_stmt 1 view .LVU658
 2821              	.LBB212:
 305:Core/Inc/Fusion/FusionMath.h **** #endif
 2822              		.loc 2 305 5 view .LVU659
 2823 04bc 9446     		mov	ip, r2
 2824 04be 4146     		mov	r1, r8
 2825 04c0 89C9     		ldmia	r1!, {r0, r3, r7}
 2826 04c2 89C2     		stmia	r2!, {r0, r3, r7}
 2827              	.LBB213:
 2828              	.LBI213:
 283:Core/Inc/Fusion/FusionMath.h ****     return FusionVectorSum(FusionVectorHadamardProduct(vector, vector));
 2829              		.loc 2 283 21 view .LVU660
 2830              	.LBB214:
 284:Core/Inc/Fusion/FusionMath.h **** }
 2831              		.loc 2 284 5 view .LVU661
 2832 04c4 2A00     		movs	r2, r5
 2833 04c6 89C9     		ldmia	r1!, {r0, r3, r7}
 2834 04c8 89C2     		stmia	r2!, {r0, r3, r7}
 2835 04ca 3200     		movs	r2, r6
 2836 04cc 6346     		mov	r3, ip
 2837 04ce 83CB     		ldmia	r3!, {r0, r1, r7}
ARM GAS  /tmp/ccEJb272.s 			page 69


 2838 04d0 83C2     		stmia	r2!, {r0, r1, r7}
 2839              	.LBB215:
 2840              	.LBI215:
 252:Core/Inc/Fusion/FusionMath.h ****     FusionVector result;
 2841              		.loc 2 252 28 view .LVU662
 2842              	.LBB216:
 253:Core/Inc/Fusion/FusionMath.h ****     result.axis.x = vectorA.axis.x * vectorB.axis.x;
 2843              		.loc 2 253 5 view .LVU663
 254:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = vectorA.axis.y * vectorB.axis.y;
 2844              		.loc 2 254 5 view .LVU664
 254:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = vectorA.axis.y * vectorB.axis.y;
 2845              		.loc 2 254 36 is_stmt 0 view .LVU665
 2846 04d2 1599     		ldr	r1, [sp, #84]
 2847 04d4 1998     		ldr	r0, [sp, #100]
 2848 04d6 FFF7FEFF 		bl	__aeabi_fmul
 2849              	.LVL296:
 254:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = vectorA.axis.y * vectorB.axis.y;
 2850              		.loc 2 254 19 view .LVU666
 2851 04da 0390     		str	r0, [sp, #12]
 2852 04dc 1D90     		str	r0, [sp, #116]
 255:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = vectorA.axis.z * vectorB.axis.z;
 2853              		.loc 2 255 5 is_stmt 1 view .LVU667
 255:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = vectorA.axis.z * vectorB.axis.z;
 2854              		.loc 2 255 36 is_stmt 0 view .LVU668
 2855 04de 1699     		ldr	r1, [sp, #88]
 2856 04e0 1A98     		ldr	r0, [sp, #104]
 2857 04e2 FFF7FEFF 		bl	__aeabi_fmul
 2858              	.LVL297:
 2859 04e6 8346     		mov	fp, r0
 255:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = vectorA.axis.z * vectorB.axis.z;
 2860              		.loc 2 255 19 view .LVU669
 2861 04e8 1E90     		str	r0, [sp, #120]
 256:Core/Inc/Fusion/FusionMath.h ****     return result;
 2862              		.loc 2 256 5 is_stmt 1 view .LVU670
 256:Core/Inc/Fusion/FusionMath.h ****     return result;
 2863              		.loc 2 256 36 is_stmt 0 view .LVU671
 2864 04ea 1799     		ldr	r1, [sp, #92]
 2865 04ec 1B98     		ldr	r0, [sp, #108]
 2866 04ee FFF7FEFF 		bl	__aeabi_fmul
 2867              	.LVL298:
 2868 04f2 8146     		mov	r9, r0
 256:Core/Inc/Fusion/FusionMath.h ****     return result;
 2869              		.loc 2 256 19 view .LVU672
 2870 04f4 1F90     		str	r0, [sp, #124]
 257:Core/Inc/Fusion/FusionMath.h **** }
 2871              		.loc 2 257 5 is_stmt 1 view .LVU673
 257:Core/Inc/Fusion/FusionMath.h **** }
 2872              		.loc 2 257 12 is_stmt 0 view .LVU674
 2873 04f6 56AB     		add	r3, sp, #344
 2874 04f8 9C46     		mov	ip, r3
 2875 04fa 1A00     		movs	r2, r3
 2876 04fc 2100     		movs	r1, r4
 2877 04fe 89C9     		ldmia	r1!, {r0, r3, r7}
 2878 0500 89C2     		stmia	r2!, {r0, r3, r7}
 2879 0502 2200     		movs	r2, r4
 2880 0504 6346     		mov	r3, ip
 2881 0506 83CB     		ldmia	r3!, {r0, r1, r7}
ARM GAS  /tmp/ccEJb272.s 			page 70


 2882 0508 83C2     		stmia	r2!, {r0, r1, r7}
 2883              	.LBE216:
 2884              	.LBE215:
 2885              	.LBB217:
 2886              	.LBI217:
 228:Core/Inc/Fusion/FusionMath.h ****     return vector.axis.x + vector.axis.y + vector.axis.z;
 2887              		.loc 2 228 21 is_stmt 1 view .LVU675
 2888              	.LBB218:
 229:Core/Inc/Fusion/FusionMath.h **** }
 2889              		.loc 2 229 5 view .LVU676
 229:Core/Inc/Fusion/FusionMath.h **** }
 2890              		.loc 2 229 26 is_stmt 0 view .LVU677
 2891 050a 5946     		mov	r1, fp
 2892 050c 0398     		ldr	r0, [sp, #12]
 2893 050e FFF7FEFF 		bl	__aeabi_fadd
 2894              	.LVL299:
 2895 0512 011C     		adds	r1, r0, #0
 229:Core/Inc/Fusion/FusionMath.h **** }
 2896              		.loc 2 229 42 view .LVU678
 2897 0514 4846     		mov	r0, r9
 2898 0516 FFF7FEFF 		bl	__aeabi_fadd
 2899              	.LVL300:
 229:Core/Inc/Fusion/FusionMath.h **** }
 2900              		.loc 2 229 42 view .LVU679
 2901              	.LBE218:
 2902              	.LBE217:
 2903              	.LBE214:
 2904              	.LBE213:
 2905              	.LBB219:
 2906              	.LBI219:
 169:Core/Inc/Fusion/FusionMath.h **** 
 2907              		.loc 2 169 21 is_stmt 1 view .LVU680
 2908              	.LBB220:
 171:Core/Inc/Fusion/FusionMath.h ****         float f;
 2909              		.loc 2 171 5 view .LVU681
 176:Core/Inc/Fusion/FusionMath.h ****     union32.i = 0x5F1F1412 - (union32.i >> 1);
 2910              		.loc 2 176 5 view .LVU682
 177:Core/Inc/Fusion/FusionMath.h ****     return union32.f * (1.69000231f - 0.714158168f * x * union32.f * union32.f);
 2911              		.loc 2 177 5 view .LVU683
 177:Core/Inc/Fusion/FusionMath.h ****     return union32.f * (1.69000231f - 0.714158168f * x * union32.f * union32.f);
 2912              		.loc 2 177 41 is_stmt 0 view .LVU684
 2913 051a 4310     		asrs	r3, r0, #1
 178:Core/Inc/Fusion/FusionMath.h **** }
 2914              		.loc 2 178 5 is_stmt 1 view .LVU685
 2915 051c FC4A     		ldr	r2, .L84
 2916 051e D31A     		subs	r3, r2, r3
 2917 0520 9946     		mov	r9, r3
 178:Core/Inc/Fusion/FusionMath.h **** }
 2918              		.loc 2 178 52 is_stmt 0 view .LVU686
 2919 0522 FC49     		ldr	r1, .L84+4
 2920 0524 FFF7FEFF 		bl	__aeabi_fmul
 2921              	.LVL301:
 178:Core/Inc/Fusion/FusionMath.h **** }
 2922              		.loc 2 178 52 view .LVU687
 2923 0528 011C     		adds	r1, r0, #0
 178:Core/Inc/Fusion/FusionMath.h **** }
 2924              		.loc 2 178 56 view .LVU688
ARM GAS  /tmp/ccEJb272.s 			page 71


 2925 052a 4846     		mov	r0, r9
 2926 052c FFF7FEFF 		bl	__aeabi_fmul
 2927              	.LVL302:
 2928 0530 011C     		adds	r1, r0, #0
 178:Core/Inc/Fusion/FusionMath.h **** }
 2929              		.loc 2 178 68 view .LVU689
 2930 0532 4846     		mov	r0, r9
 2931 0534 FFF7FEFF 		bl	__aeabi_fmul
 2932              	.LVL303:
 2933 0538 011C     		adds	r1, r0, #0
 178:Core/Inc/Fusion/FusionMath.h **** }
 2934              		.loc 2 178 37 view .LVU690
 2935 053a F748     		ldr	r0, .L84+8
 2936 053c FFF7FEFF 		bl	__aeabi_fsub
 2937              	.LVL304:
 2938 0540 011C     		adds	r1, r0, #0
 178:Core/Inc/Fusion/FusionMath.h **** }
 2939              		.loc 2 178 22 view .LVU691
 2940 0542 4846     		mov	r0, r9
 2941 0544 FFF7FEFF 		bl	__aeabi_fmul
 2942              	.LVL305:
 2943 0548 8146     		mov	r9, r0
 2944              	.LVL306:
 178:Core/Inc/Fusion/FusionMath.h **** }
 2945              		.loc 2 178 22 view .LVU692
 2946              	.LBE220:
 2947              	.LBE219:
 307:Core/Inc/Fusion/FusionMath.h **** }
 2948              		.loc 2 307 5 is_stmt 1 view .LVU693
 2949 054a 2B00     		movs	r3, r5
 2950 054c 4246     		mov	r2, r8
 2951 054e 83CA     		ldmia	r2!, {r0, r1, r7}
 2952 0550 83C3     		stmia	r3!, {r0, r1, r7}
 2953              	.LVL307:
 2954              	.LBB221:
 2955              	.LBI221:
 238:Core/Inc/Fusion/FusionMath.h ****     FusionVector result;
 2956              		.loc 2 238 28 view .LVU694
 2957              	.LBB222:
 239:Core/Inc/Fusion/FusionMath.h ****     result.axis.x = vector.axis.x * scalar;
 2958              		.loc 2 239 5 view .LVU695
 240:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = vector.axis.y * scalar;
 2959              		.loc 2 240 5 view .LVU696
 240:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = vector.axis.y * scalar;
 2960              		.loc 2 240 35 is_stmt 0 view .LVU697
 2961 0552 1999     		ldr	r1, [sp, #100]
 2962 0554 4846     		mov	r0, r9
 2963 0556 FFF7FEFF 		bl	__aeabi_fmul
 2964              	.LVL308:
 240:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = vector.axis.y * scalar;
 2965              		.loc 2 240 19 view .LVU698
 2966 055a 1D90     		str	r0, [sp, #116]
 241:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = vector.axis.z * scalar;
 2967              		.loc 2 241 5 is_stmt 1 view .LVU699
 241:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = vector.axis.z * scalar;
 2968              		.loc 2 241 35 is_stmt 0 view .LVU700
 2969 055c 1A99     		ldr	r1, [sp, #104]
ARM GAS  /tmp/ccEJb272.s 			page 72


 2970 055e 4846     		mov	r0, r9
 2971 0560 FFF7FEFF 		bl	__aeabi_fmul
 2972              	.LVL309:
 241:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = vector.axis.z * scalar;
 2973              		.loc 2 241 19 view .LVU701
 2974 0564 1E90     		str	r0, [sp, #120]
 242:Core/Inc/Fusion/FusionMath.h ****     return result;
 2975              		.loc 2 242 5 is_stmt 1 view .LVU702
 242:Core/Inc/Fusion/FusionMath.h ****     return result;
 2976              		.loc 2 242 35 is_stmt 0 view .LVU703
 2977 0566 1B99     		ldr	r1, [sp, #108]
 2978 0568 4846     		mov	r0, r9
 2979 056a FFF7FEFF 		bl	__aeabi_fmul
 2980              	.LVL310:
 242:Core/Inc/Fusion/FusionMath.h ****     return result;
 2981              		.loc 2 242 19 view .LVU704
 2982 056e 1F90     		str	r0, [sp, #124]
 243:Core/Inc/Fusion/FusionMath.h **** }
 2983              		.loc 2 243 5 is_stmt 1 view .LVU705
 243:Core/Inc/Fusion/FusionMath.h **** }
 2984              		.loc 2 243 12 is_stmt 0 view .LVU706
 2985 0570 36AB     		add	r3, sp, #216
 2986 0572 9C46     		mov	ip, r3
 2987 0574 1A00     		movs	r2, r3
 2988 0576 2100     		movs	r1, r4
 2989 0578 89C9     		ldmia	r1!, {r0, r3, r7}
 2990 057a 89C2     		stmia	r2!, {r0, r3, r7}
 2991              	.LVL311:
 243:Core/Inc/Fusion/FusionMath.h **** }
 2992              		.loc 2 243 12 view .LVU707
 2993 057c 3200     		movs	r2, r6
 2994 057e 6346     		mov	r3, ip
 2995 0580 83CB     		ldmia	r3!, {r0, r1, r7}
 2996 0582 83C2     		stmia	r2!, {r0, r1, r7}
 2997 0584 2B00     		movs	r3, r5
 2998 0586 0CAF     		add	r7, sp, #48
 2999 0588 07CF     		ldmia	r7!, {r0, r1, r2}
 3000 058a 07C3     		stmia	r3!, {r0, r1, r2}
 3001              	.LBE222:
 3002              	.LBE221:
 3003              	.LBE212:
 3004              	.LBE211:
 3005              	.LBB223:
 3006              	.LBI223:
 266:Core/Inc/Fusion/FusionMath.h **** #define A vectorA.axis
 3007              		.loc 2 266 28 is_stmt 1 view .LVU708
 3008              	.LBB224:
 269:Core/Inc/Fusion/FusionMath.h ****     result.axis.x = A.y * B.z - A.z * B.y;
 3009              		.loc 2 269 5 view .LVU709
 270:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = A.z * B.x - A.x * B.z;
 3010              		.loc 2 270 5 view .LVU710
 270:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = A.z * B.x - A.x * B.z;
 3011              		.loc 2 270 22 is_stmt 0 view .LVU711
 3012 058c 169B     		ldr	r3, [sp, #88]
 3013 058e 9846     		mov	r8, r3
 270:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = A.z * B.x - A.x * B.z;
 3014              		.loc 2 270 28 view .LVU712
ARM GAS  /tmp/ccEJb272.s 			page 73


 3015 0590 1B9B     		ldr	r3, [sp, #108]
 3016 0592 9946     		mov	r9, r3
 3017              	.LVL312:
 270:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = A.z * B.x - A.x * B.z;
 3018              		.loc 2 270 25 view .LVU713
 3019 0594 191C     		adds	r1, r3, #0
 3020 0596 4046     		mov	r0, r8
 3021 0598 FFF7FEFF 		bl	__aeabi_fmul
 3022              	.LVL313:
 3023 059c 071C     		adds	r7, r0, #0
 270:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = A.z * B.x - A.x * B.z;
 3024              		.loc 2 270 34 view .LVU714
 3025 059e 179B     		ldr	r3, [sp, #92]
 3026 05a0 9B46     		mov	fp, r3
 270:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = A.z * B.x - A.x * B.z;
 3027              		.loc 2 270 40 view .LVU715
 3028 05a2 1A9E     		ldr	r6, [sp, #104]
 270:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = A.z * B.x - A.x * B.z;
 3029              		.loc 2 270 37 view .LVU716
 3030 05a4 311C     		adds	r1, r6, #0
 3031 05a6 181C     		adds	r0, r3, #0
 3032 05a8 FFF7FEFF 		bl	__aeabi_fmul
 3033              	.LVL314:
 3034 05ac 011C     		adds	r1, r0, #0
 270:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = A.z * B.x - A.x * B.z;
 3035              		.loc 2 270 31 view .LVU717
 3036 05ae 381C     		adds	r0, r7, #0
 3037 05b0 FFF7FEFF 		bl	__aeabi_fsub
 3038              	.LVL315:
 270:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = A.z * B.x - A.x * B.z;
 3039              		.loc 2 270 19 view .LVU718
 3040 05b4 1D90     		str	r0, [sp, #116]
 271:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = A.x * B.y - A.y * B.x;
 3041              		.loc 2 271 5 is_stmt 1 view .LVU719
 271:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = A.x * B.y - A.y * B.x;
 3042              		.loc 2 271 28 is_stmt 0 view .LVU720
 3043 05b6 199F     		ldr	r7, [sp, #100]
 271:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = A.x * B.y - A.y * B.x;
 3044              		.loc 2 271 25 view .LVU721
 3045 05b8 391C     		adds	r1, r7, #0
 3046 05ba 5846     		mov	r0, fp
 3047 05bc FFF7FEFF 		bl	__aeabi_fmul
 3048              	.LVL316:
 3049 05c0 8346     		mov	fp, r0
 271:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = A.x * B.y - A.y * B.x;
 3050              		.loc 2 271 34 view .LVU722
 3051 05c2 159D     		ldr	r5, [sp, #84]
 271:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = A.x * B.y - A.y * B.x;
 3052              		.loc 2 271 37 view .LVU723
 3053 05c4 291C     		adds	r1, r5, #0
 3054 05c6 4846     		mov	r0, r9
 3055 05c8 FFF7FEFF 		bl	__aeabi_fmul
 3056              	.LVL317:
 3057 05cc 011C     		adds	r1, r0, #0
 271:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = A.x * B.y - A.y * B.x;
 3058              		.loc 2 271 31 view .LVU724
 3059 05ce 5846     		mov	r0, fp
ARM GAS  /tmp/ccEJb272.s 			page 74


 3060 05d0 FFF7FEFF 		bl	__aeabi_fsub
 3061              	.LVL318:
 271:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = A.x * B.y - A.y * B.x;
 3062              		.loc 2 271 19 view .LVU725
 3063 05d4 1E90     		str	r0, [sp, #120]
 272:Core/Inc/Fusion/FusionMath.h ****     return result;
 3064              		.loc 2 272 5 is_stmt 1 view .LVU726
 272:Core/Inc/Fusion/FusionMath.h ****     return result;
 3065              		.loc 2 272 25 is_stmt 0 view .LVU727
 3066 05d6 291C     		adds	r1, r5, #0
 3067 05d8 301C     		adds	r0, r6, #0
 3068 05da FFF7FEFF 		bl	__aeabi_fmul
 3069              	.LVL319:
 3070 05de 051C     		adds	r5, r0, #0
 272:Core/Inc/Fusion/FusionMath.h ****     return result;
 3071              		.loc 2 272 37 view .LVU728
 3072 05e0 391C     		adds	r1, r7, #0
 3073 05e2 4046     		mov	r0, r8
 3074 05e4 FFF7FEFF 		bl	__aeabi_fmul
 3075              	.LVL320:
 3076 05e8 011C     		adds	r1, r0, #0
 272:Core/Inc/Fusion/FusionMath.h ****     return result;
 3077              		.loc 2 272 31 view .LVU729
 3078 05ea 281C     		adds	r0, r5, #0
 3079 05ec FFF7FEFF 		bl	__aeabi_fsub
 3080              	.LVL321:
 272:Core/Inc/Fusion/FusionMath.h ****     return result;
 3081              		.loc 2 272 19 view .LVU730
 3082 05f0 1F90     		str	r0, [sp, #124]
 273:Core/Inc/Fusion/FusionMath.h **** #undef A
 3083              		.loc 2 273 5 is_stmt 1 view .LVU731
 273:Core/Inc/Fusion/FusionMath.h **** #undef A
 3084              		.loc 2 273 12 is_stmt 0 view .LVU732
 3085 05f2 53AB     		add	r3, sp, #332
 3086 05f4 1A00     		movs	r2, r3
 3087 05f6 23CC     		ldmia	r4!, {r0, r1, r5}
 3088 05f8 23C2     		stmia	r2!, {r0, r1, r5}
 3089              	.LBE224:
 3090              	.LBE223:
 171:Core/Src/Fusion/FusionAhrs.c **** 
 3091              		.loc 1 171 42 view .LVU733
 3092 05fa 5246     		mov	r2, r10
 3093 05fc 4432     		adds	r2, r2, #68
 3094 05fe 13CB     		ldmia	r3!, {r0, r1, r4}
 3095 0600 13C2     		stmia	r2!, {r0, r1, r4}
 174:Core/Src/Fusion/FusionAhrs.c ****             halfMagnetometerFeedback = ahrs->halfMagnetometerFeedback;
 3096              		.loc 1 174 9 is_stmt 1 view .LVU734
 174:Core/Src/Fusion/FusionAhrs.c ****             halfMagnetometerFeedback = ahrs->halfMagnetometerFeedback;
 3097              		.loc 1 174 18 is_stmt 0 view .LVU735
 3098 0602 2C23     		movs	r3, #44
 3099 0604 5246     		mov	r2, r10
 3100 0606 D35C     		ldrb	r3, [r2, r3]
 174:Core/Src/Fusion/FusionAhrs.c ****             halfMagnetometerFeedback = ahrs->halfMagnetometerFeedback;
 3101              		.loc 1 174 12 view .LVU736
 3102 0608 002B     		cmp	r3, #0
 3103 060a 39D1     		bne	.L56
 3104              	.LVL322:
ARM GAS  /tmp/ccEJb272.s 			page 75


 174:Core/Src/Fusion/FusionAhrs.c ****             halfMagnetometerFeedback = ahrs->halfMagnetometerFeedback;
 3105              		.loc 1 174 12 view .LVU737
 3106 060c 12AB     		add	r3, sp, #72
 3107 060e 4432     		adds	r2, r2, #68
 3108              	.LVL323:
 174:Core/Src/Fusion/FusionAhrs.c ****             halfMagnetometerFeedback = ahrs->halfMagnetometerFeedback;
 3109              		.loc 1 174 12 view .LVU738
 3110 0610 1900     		movs	r1, r3
 3111 0612 31CA     		ldmia	r2!, {r0, r4, r5}
 3112 0614 31C1     		stmia	r1!, {r0, r4, r5}
 3113              	.LBB225:
 3114              	.LBI225:
 283:Core/Inc/Fusion/FusionMath.h ****     return FusionVectorSum(FusionVectorHadamardProduct(vector, vector));
 3115              		.loc 2 283 21 is_stmt 1 discriminator 1 view .LVU739
 3116              	.LBB226:
 284:Core/Inc/Fusion/FusionMath.h **** }
 3117              		.loc 2 284 5 discriminator 1 view .LVU740
 3118 0616 19AE     		add	r6, sp, #100
 3119 0618 3200     		movs	r2, r6
 3120 061a 1900     		movs	r1, r3
 3121 061c 31C9     		ldmia	r1!, {r0, r4, r5}
 3122 061e 31C2     		stmia	r2!, {r0, r4, r5}
 3123 0620 0D00     		movs	r5, r1
 3124 0622 0A00     		movs	r2, r1
 3125 0624 13CB     		ldmia	r3!, {r0, r1, r4}
 3126 0626 13C2     		stmia	r2!, {r0, r1, r4}
 3127              	.LBB227:
 3128              	.LBI227:
 252:Core/Inc/Fusion/FusionMath.h ****     FusionVector result;
 3129              		.loc 2 252 28 discriminator 1 view .LVU741
 3130              	.LBB228:
 253:Core/Inc/Fusion/FusionMath.h ****     result.axis.x = vectorA.axis.x * vectorB.axis.x;
 3131              		.loc 2 253 5 discriminator 1 view .LVU742
 254:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = vectorA.axis.y * vectorB.axis.y;
 3132              		.loc 2 254 5 discriminator 1 view .LVU743
 254:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = vectorA.axis.y * vectorB.axis.y;
 3133              		.loc 2 254 36 is_stmt 0 discriminator 1 view .LVU744
 3134 0628 1599     		ldr	r1, [sp, #84]
 3135 062a 1998     		ldr	r0, [sp, #100]
 3136 062c FFF7FEFF 		bl	__aeabi_fmul
 3137              	.LVL324:
 3138 0630 071C     		adds	r7, r0, #0
 254:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = vectorA.axis.y * vectorB.axis.y;
 3139              		.loc 2 254 19 discriminator 1 view .LVU745
 3140 0632 1DAC     		add	r4, sp, #116
 3141 0634 1D90     		str	r0, [sp, #116]
 255:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = vectorA.axis.z * vectorB.axis.z;
 3142              		.loc 2 255 5 is_stmt 1 discriminator 1 view .LVU746
 255:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = vectorA.axis.z * vectorB.axis.z;
 3143              		.loc 2 255 36 is_stmt 0 discriminator 1 view .LVU747
 3144 0636 6968     		ldr	r1, [r5, #4]
 3145 0638 1A98     		ldr	r0, [sp, #104]
 3146 063a FFF7FEFF 		bl	__aeabi_fmul
 3147              	.LVL325:
 3148 063e 8046     		mov	r8, r0
 255:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = vectorA.axis.z * vectorB.axis.z;
 3149              		.loc 2 255 19 discriminator 1 view .LVU748
ARM GAS  /tmp/ccEJb272.s 			page 76


 3150 0640 1E90     		str	r0, [sp, #120]
 256:Core/Inc/Fusion/FusionMath.h ****     return result;
 3151              		.loc 2 256 5 is_stmt 1 discriminator 1 view .LVU749
 256:Core/Inc/Fusion/FusionMath.h ****     return result;
 3152              		.loc 2 256 33 is_stmt 0 discriminator 1 view .LVU750
 3153 0642 1B98     		ldr	r0, [sp, #108]
 256:Core/Inc/Fusion/FusionMath.h ****     return result;
 3154              		.loc 2 256 50 discriminator 1 view .LVU751
 3155 0644 A968     		ldr	r1, [r5, #8]
 256:Core/Inc/Fusion/FusionMath.h ****     return result;
 3156              		.loc 2 256 36 discriminator 1 view .LVU752
 3157 0646 FFF7FEFF 		bl	__aeabi_fmul
 3158              	.LVL326:
 3159 064a 051C     		adds	r5, r0, #0
 256:Core/Inc/Fusion/FusionMath.h ****     return result;
 3160              		.loc 2 256 19 discriminator 1 view .LVU753
 3161 064c 1F90     		str	r0, [sp, #124]
 257:Core/Inc/Fusion/FusionMath.h **** }
 3162              		.loc 2 257 5 is_stmt 1 discriminator 1 view .LVU754
 257:Core/Inc/Fusion/FusionMath.h **** }
 3163              		.loc 2 257 12 is_stmt 0 discriminator 1 view .LVU755
 3164 064e 59AB     		add	r3, sp, #356
 3165 0650 9C46     		mov	ip, r3
 3166 0652 1A00     		movs	r2, r3
 3167 0654 2100     		movs	r1, r4
 3168 0656 49C9     		ldmia	r1!, {r0, r3, r6}
 3169 0658 49C2     		stmia	r2!, {r0, r3, r6}
 3170 065a 6346     		mov	r3, ip
 3171 065c 07CB     		ldmia	r3!, {r0, r1, r2}
 3172 065e 07C4     		stmia	r4!, {r0, r1, r2}
 3173              	.LBE228:
 3174              	.LBE227:
 3175              	.LBB229:
 3176              	.LBI229:
 228:Core/Inc/Fusion/FusionMath.h ****     return vector.axis.x + vector.axis.y + vector.axis.z;
 3177              		.loc 2 228 21 is_stmt 1 discriminator 1 view .LVU756
 3178              	.LBB230:
 229:Core/Inc/Fusion/FusionMath.h **** }
 3179              		.loc 2 229 5 discriminator 1 view .LVU757
 229:Core/Inc/Fusion/FusionMath.h **** }
 3180              		.loc 2 229 26 is_stmt 0 discriminator 1 view .LVU758
 3181 0660 4146     		mov	r1, r8
 3182 0662 381C     		adds	r0, r7, #0
 3183 0664 FFF7FEFF 		bl	__aeabi_fadd
 3184              	.LVL327:
 3185 0668 011C     		adds	r1, r0, #0
 229:Core/Inc/Fusion/FusionMath.h **** }
 3186              		.loc 2 229 42 discriminator 1 view .LVU759
 3187 066a 281C     		adds	r0, r5, #0
 3188 066c FFF7FEFF 		bl	__aeabi_fadd
 3189              	.LVL328:
 3190 0670 011C     		adds	r1, r0, #0
 3191              	.LBE230:
 3192              	.LBE229:
 3193              	.LBE226:
 3194              	.LBE225:
 174:Core/Src/Fusion/FusionAhrs.c ****             halfMagnetometerFeedback = ahrs->halfMagnetometerFeedback;
ARM GAS  /tmp/ccEJb272.s 			page 77


 3195              		.loc 1 174 42 discriminator 1 view .LVU760
 3196 0672 5346     		mov	r3, r10
 3197 0674 9868     		ldr	r0, [r3, #8]
 3198 0676 FFF7FEFF 		bl	__aeabi_fcmpge
 3199              	.LVL329:
 3200 067a 0028     		cmp	r0, #0
 3201 067c 00D1     		bne	.LCB2481
 3202 067e E9E1     		b	.L79	@long jump
 3203              	.LCB2481:
 3204              	.L56:
 175:Core/Src/Fusion/FusionAhrs.c ****             ahrs->magnetometerIgnored = false;
 3205              		.loc 1 175 13 is_stmt 1 view .LVU761
 175:Core/Src/Fusion/FusionAhrs.c ****             ahrs->magnetometerIgnored = false;
 3206              		.loc 1 175 38 is_stmt 0 view .LVU762
 3207 0680 27AA     		add	r2, sp, #156
 3208 0682 5346     		mov	r3, r10
 3209 0684 4433     		adds	r3, r3, #68
 3210 0686 13CB     		ldmia	r3!, {r0, r1, r4}
 3211 0688 13C2     		stmia	r2!, {r0, r1, r4}
 176:Core/Src/Fusion/FusionAhrs.c ****             ahrs->magneticRejectionTimer -= ahrs->magneticRejectionTimer >= 10 ? 10 : 0;
 3212              		.loc 1 176 13 is_stmt 1 view .LVU763
 176:Core/Src/Fusion/FusionAhrs.c ****             ahrs->magneticRejectionTimer -= ahrs->magneticRejectionTimer >= 10 ? 10 : 0;
 3213              		.loc 1 176 39 is_stmt 0 view .LVU764
 3214 068a 5923     		movs	r3, #89
 3215 068c 0022     		movs	r2, #0
 3216 068e 5146     		mov	r1, r10
 3217 0690 CA54     		strb	r2, [r1, r3]
 177:Core/Src/Fusion/FusionAhrs.c ****         } else {
 3218              		.loc 1 177 13 is_stmt 1 view .LVU765
 177:Core/Src/Fusion/FusionAhrs.c ****         } else {
 3219              		.loc 1 177 42 is_stmt 0 view .LVU766
 3220 0692 CB6D     		ldr	r3, [r1, #92]
 177:Core/Src/Fusion/FusionAhrs.c ****         } else {
 3221              		.loc 1 177 85 view .LVU767
 3222 0694 092B     		cmp	r3, #9
 3223 0696 00D8     		bhi	.LCB2496
 3224 0698 DAE1     		b	.L68	@long jump
 3225              	.LCB2496:
 3226              	.LVL330:
 177:Core/Src/Fusion/FusionAhrs.c ****         } else {
 3227              		.loc 1 177 85 view .LVU768
 3228 069a 0A32     		adds	r2, r2, #10
 3229              	.L59:
 177:Core/Src/Fusion/FusionAhrs.c ****         } else {
 3230              		.loc 1 177 42 discriminator 4 view .LVU769
 3231 069c 9B1A     		subs	r3, r3, r2
 3232 069e 5246     		mov	r2, r10
 3233 06a0 D365     		str	r3, [r2, #92]
 3234              	.LVL331:
 3235              	.L54:
 177:Core/Src/Fusion/FusionAhrs.c ****         } else {
 3236              		.loc 1 177 42 discriminator 4 view .LVU770
 3237              	.LBE208:
 184:Core/Src/Fusion/FusionAhrs.c **** 
 3238              		.loc 1 184 5 is_stmt 1 view .LVU771
 128:Core/Inc/Fusion/FusionMath.h **** }
 3239              		.loc 2 128 5 view .LVU772
ARM GAS  /tmp/ccEJb272.s 			page 78


 128:Core/Inc/Fusion/FusionMath.h **** }
 3240              		.loc 2 128 5 is_stmt 0 view .LVU773
 3241 06a2 19AD     		add	r5, sp, #100
 3242 06a4 09AB     		add	r3, sp, #36
 3243 06a6 2A00     		movs	r2, r5
 3244 06a8 13CB     		ldmia	r3!, {r0, r1, r4}
 3245 06aa 13C2     		stmia	r2!, {r0, r1, r4}
 3246 06ac 9146     		mov	r9, r2
 3247              	.LVL332:
 3248              	.LBB231:
 3249              	.LBI231:
 238:Core/Inc/Fusion/FusionMath.h ****     FusionVector result;
 3250              		.loc 2 238 28 is_stmt 1 view .LVU774
 3251              	.LBB232:
 239:Core/Inc/Fusion/FusionMath.h ****     result.axis.x = vector.axis.x * scalar;
 3252              		.loc 2 239 5 view .LVU775
 240:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = vector.axis.y * scalar;
 3253              		.loc 2 240 5 view .LVU776
 240:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = vector.axis.y * scalar;
 3254              		.loc 2 240 35 is_stmt 0 view .LVU777
 3255 06ae 9B49     		ldr	r1, .L84+12
 3256 06b0 1998     		ldr	r0, [sp, #100]
 3257 06b2 FFF7FEFF 		bl	__aeabi_fmul
 3258              	.LVL333:
 240:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = vector.axis.y * scalar;
 3259              		.loc 2 240 19 view .LVU778
 3260 06b6 1DAC     		add	r4, sp, #116
 3261 06b8 0390     		str	r0, [sp, #12]
 3262 06ba 1D90     		str	r0, [sp, #116]
 241:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = vector.axis.z * scalar;
 3263              		.loc 2 241 5 is_stmt 1 view .LVU779
 241:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = vector.axis.z * scalar;
 3264              		.loc 2 241 35 is_stmt 0 view .LVU780
 3265 06bc 9749     		ldr	r1, .L84+12
 3266 06be 6868     		ldr	r0, [r5, #4]
 3267 06c0 FFF7FEFF 		bl	__aeabi_fmul
 3268              	.LVL334:
 241:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = vector.axis.z * scalar;
 3269              		.loc 2 241 19 view .LVU781
 3270 06c4 0490     		str	r0, [sp, #16]
 3271 06c6 6060     		str	r0, [r4, #4]
 242:Core/Inc/Fusion/FusionMath.h ****     return result;
 3272              		.loc 2 242 5 is_stmt 1 view .LVU782
 242:Core/Inc/Fusion/FusionMath.h ****     return result;
 3273              		.loc 2 242 35 is_stmt 0 view .LVU783
 3274 06c8 9449     		ldr	r1, .L84+12
 3275 06ca A868     		ldr	r0, [r5, #8]
 3276 06cc FFF7FEFF 		bl	__aeabi_fmul
 3277              	.LVL335:
 242:Core/Inc/Fusion/FusionMath.h ****     return result;
 3278              		.loc 2 242 19 view .LVU784
 3279 06d0 0590     		str	r0, [sp, #20]
 3280 06d2 A060     		str	r0, [r4, #8]
 243:Core/Inc/Fusion/FusionMath.h **** }
 3281              		.loc 2 243 5 is_stmt 1 view .LVU785
 243:Core/Inc/Fusion/FusionMath.h **** }
 3282              		.loc 2 243 12 is_stmt 0 view .LVU786
ARM GAS  /tmp/ccEJb272.s 			page 79


 3283 06d4 24AF     		add	r7, sp, #144
 3284 06d6 2600     		movs	r6, r4
 3285 06d8 0DCE     		ldmia	r6!, {r0, r2, r3}
 3286 06da 0DC7     		stmia	r7!, {r0, r2, r3}
 3287 06dc B346     		mov	fp, r6
 3288              	.LVL336:
 243:Core/Inc/Fusion/FusionMath.h **** }
 3289              		.loc 2 243 12 view .LVU787
 3290              	.LBE232:
 3291              	.LBE231:
 187:Core/Src/Fusion/FusionAhrs.c **** 
 3292              		.loc 1 187 5 is_stmt 1 view .LVU788
 3293 06de 2AAB     		add	r3, sp, #168
 3294 06e0 15AA     		add	r2, sp, #84
 3295 06e2 1700     		movs	r7, r2
 3296 06e4 07CB     		ldmia	r3!, {r0, r1, r2}
 3297 06e6 07C7     		stmia	r7!, {r0, r1, r2}
 3298 06e8 0797     		str	r7, [sp, #28]
 3299 06ea 27AB     		add	r3, sp, #156
 3300 06ec 2A00     		movs	r2, r5
 3301 06ee 83CB     		ldmia	r3!, {r0, r1, r7}
 3302 06f0 83C2     		stmia	r2!, {r0, r1, r7}
 3303              	.LBB233:
 3304              	.LBI233:
 201:Core/Inc/Fusion/FusionMath.h ****     FusionVector result;
 3305              		.loc 2 201 28 view .LVU789
 3306              	.LBB234:
 202:Core/Inc/Fusion/FusionMath.h ****     result.axis.x = vectorA.axis.x + vectorB.axis.x;
 3307              		.loc 2 202 5 view .LVU790
 203:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = vectorA.axis.y + vectorB.axis.y;
 3308              		.loc 2 203 5 view .LVU791
 203:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = vectorA.axis.y + vectorB.axis.y;
 3309              		.loc 2 203 36 is_stmt 0 view .LVU792
 3310 06f2 1999     		ldr	r1, [sp, #100]
 3311 06f4 1598     		ldr	r0, [sp, #84]
 3312 06f6 FFF7FEFF 		bl	__aeabi_fadd
 3313              	.LVL337:
 203:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = vectorA.axis.y + vectorB.axis.y;
 3314              		.loc 2 203 19 view .LVU793
 3315 06fa 0690     		str	r0, [sp, #24]
 3316 06fc 1D90     		str	r0, [sp, #116]
 204:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = vectorA.axis.z + vectorB.axis.z;
 3317              		.loc 2 204 5 is_stmt 1 view .LVU794
 204:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = vectorA.axis.z + vectorB.axis.z;
 3318              		.loc 2 204 36 is_stmt 0 view .LVU795
 3319 06fe 6968     		ldr	r1, [r5, #4]
 3320 0700 1698     		ldr	r0, [sp, #88]
 3321 0702 FFF7FEFF 		bl	__aeabi_fadd
 3322              	.LVL338:
 3323 0706 071C     		adds	r7, r0, #0
 204:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = vectorA.axis.z + vectorB.axis.z;
 3324              		.loc 2 204 19 view .LVU796
 3325 0708 6060     		str	r0, [r4, #4]
 205:Core/Inc/Fusion/FusionMath.h ****     return result;
 3326              		.loc 2 205 5 is_stmt 1 view .LVU797
 205:Core/Inc/Fusion/FusionMath.h ****     return result;
 3327              		.loc 2 205 36 is_stmt 0 view .LVU798
ARM GAS  /tmp/ccEJb272.s 			page 80


 3328 070a A968     		ldr	r1, [r5, #8]
 3329 070c 1798     		ldr	r0, [sp, #92]
 3330 070e FFF7FEFF 		bl	__aeabi_fadd
 3331              	.LVL339:
 205:Core/Inc/Fusion/FusionMath.h ****     return result;
 3332              		.loc 2 205 19 view .LVU799
 3333 0712 0890     		str	r0, [sp, #32]
 3334 0714 A060     		str	r0, [r4, #8]
 206:Core/Inc/Fusion/FusionMath.h **** }
 3335              		.loc 2 206 5 is_stmt 1 view .LVU800
 206:Core/Inc/Fusion/FusionMath.h **** }
 3336              		.loc 2 206 12 is_stmt 0 view .LVU801
 3337 0716 39AB     		add	r3, sp, #228
 3338 0718 9C46     		mov	ip, r3
 3339 071a 1800     		movs	r0, r3
 3340 071c 2200     		movs	r2, r4
 3341 071e 4ACA     		ldmia	r2!, {r1, r3, r6}
 3342 0720 4AC0     		stmia	r0!, {r1, r3, r6}
 3343              	.LBE234:
 3344              	.LBE233:
 187:Core/Src/Fusion/FusionAhrs.c **** 
 3345              		.loc 1 187 48 view .LVU802
 3346 0722 5046     		mov	r0, r10
 3347 0724 006B     		ldr	r0, [r0, #48]
 3348 0726 8046     		mov	r8, r0
 3349 0728 2800     		movs	r0, r5
 3350 072a 6346     		mov	r3, ip
 3351 072c 46CB     		ldmia	r3!, {r1, r2, r6}
 3352 072e 46C0     		stmia	r0!, {r1, r2, r6}
 3353              	.LVL340:
 3354              	.LBB235:
 3355              	.LBI235:
 238:Core/Inc/Fusion/FusionMath.h ****     FusionVector result;
 3356              		.loc 2 238 28 is_stmt 1 view .LVU803
 3357              	.LBB236:
 239:Core/Inc/Fusion/FusionMath.h ****     result.axis.x = vector.axis.x * scalar;
 3358              		.loc 2 239 5 view .LVU804
 240:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = vector.axis.y * scalar;
 3359              		.loc 2 240 5 view .LVU805
 240:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = vector.axis.y * scalar;
 3360              		.loc 2 240 35 is_stmt 0 view .LVU806
 3361 0730 0699     		ldr	r1, [sp, #24]
 3362 0732 4046     		mov	r0, r8
 3363 0734 FFF7FEFF 		bl	__aeabi_fmul
 3364              	.LVL341:
 240:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = vector.axis.y * scalar;
 3365              		.loc 2 240 19 view .LVU807
 3366 0738 0690     		str	r0, [sp, #24]
 3367 073a 1D90     		str	r0, [sp, #116]
 241:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = vector.axis.z * scalar;
 3368              		.loc 2 241 5 is_stmt 1 view .LVU808
 241:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = vector.axis.z * scalar;
 3369              		.loc 2 241 35 is_stmt 0 view .LVU809
 3370 073c 391C     		adds	r1, r7, #0
 3371 073e 4046     		mov	r0, r8
 3372 0740 FFF7FEFF 		bl	__aeabi_fmul
 3373              	.LVL342:
ARM GAS  /tmp/ccEJb272.s 			page 81


 3374 0744 071C     		adds	r7, r0, #0
 241:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = vector.axis.z * scalar;
 3375              		.loc 2 241 19 view .LVU810
 3376 0746 6060     		str	r0, [r4, #4]
 242:Core/Inc/Fusion/FusionMath.h ****     return result;
 3377              		.loc 2 242 5 is_stmt 1 view .LVU811
 242:Core/Inc/Fusion/FusionMath.h ****     return result;
 3378              		.loc 2 242 35 is_stmt 0 view .LVU812
 3379 0748 0899     		ldr	r1, [sp, #32]
 3380 074a 4046     		mov	r0, r8
 3381 074c FFF7FEFF 		bl	__aeabi_fmul
 3382              	.LVL343:
 242:Core/Inc/Fusion/FusionMath.h ****     return result;
 3383              		.loc 2 242 19 view .LVU813
 3384 0750 0890     		str	r0, [sp, #32]
 3385 0752 A060     		str	r0, [r4, #8]
 243:Core/Inc/Fusion/FusionMath.h **** }
 3386              		.loc 2 243 5 is_stmt 1 view .LVU814
 243:Core/Inc/Fusion/FusionMath.h **** }
 3387              		.loc 2 243 12 is_stmt 0 view .LVU815
 3388 0754 3CAB     		add	r3, sp, #240
 3389 0756 9C46     		mov	ip, r3
 3390 0758 1A00     		movs	r2, r3
 3391 075a 2100     		movs	r1, r4
 3392 075c 49C9     		ldmia	r1!, {r0, r3, r6}
 3393 075e 49C2     		stmia	r2!, {r0, r3, r6}
 3394              	.LVL344:
 243:Core/Inc/Fusion/FusionMath.h **** }
 3395              		.loc 2 243 12 view .LVU816
 3396 0760 15AB     		add	r3, sp, #84
 3397 0762 1A00     		movs	r2, r3
 3398 0764 24A9     		add	r1, sp, #144
 3399 0766 49C9     		ldmia	r1!, {r0, r3, r6}
 3400 0768 49C2     		stmia	r2!, {r0, r3, r6}
 3401 076a 2A00     		movs	r2, r5
 3402 076c 6346     		mov	r3, ip
 3403 076e 43CB     		ldmia	r3!, {r0, r1, r6}
 3404 0770 43C2     		stmia	r2!, {r0, r1, r6}
 3405              	.LBE236:
 3406              	.LBE235:
 3407              	.LBB237:
 3408              	.LBI237:
 201:Core/Inc/Fusion/FusionMath.h ****     FusionVector result;
 3409              		.loc 2 201 28 is_stmt 1 view .LVU817
 3410              	.LBB238:
 202:Core/Inc/Fusion/FusionMath.h ****     result.axis.x = vectorA.axis.x + vectorB.axis.x;
 3411              		.loc 2 202 5 view .LVU818
 203:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = vectorA.axis.y + vectorB.axis.y;
 3412              		.loc 2 203 5 view .LVU819
 203:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = vectorA.axis.y + vectorB.axis.y;
 3413              		.loc 2 203 36 is_stmt 0 view .LVU820
 3414 0772 0399     		ldr	r1, [sp, #12]
 3415 0774 0698     		ldr	r0, [sp, #24]
 3416 0776 FFF7FEFF 		bl	__aeabi_fadd
 3417              	.LVL345:
 3418 077a 8046     		mov	r8, r0
 203:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = vectorA.axis.y + vectorB.axis.y;
ARM GAS  /tmp/ccEJb272.s 			page 82


 3419              		.loc 2 203 19 view .LVU821
 3420 077c 1D90     		str	r0, [sp, #116]
 204:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = vectorA.axis.z + vectorB.axis.z;
 3421              		.loc 2 204 5 is_stmt 1 view .LVU822
 204:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = vectorA.axis.z + vectorB.axis.z;
 3422              		.loc 2 204 36 is_stmt 0 view .LVU823
 3423 077e 0499     		ldr	r1, [sp, #16]
 3424 0780 381C     		adds	r0, r7, #0
 3425 0782 FFF7FEFF 		bl	__aeabi_fadd
 3426              	.LVL346:
 3427 0786 071C     		adds	r7, r0, #0
 204:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = vectorA.axis.z + vectorB.axis.z;
 3428              		.loc 2 204 19 view .LVU824
 3429 0788 6060     		str	r0, [r4, #4]
 205:Core/Inc/Fusion/FusionMath.h ****     return result;
 3430              		.loc 2 205 5 is_stmt 1 view .LVU825
 205:Core/Inc/Fusion/FusionMath.h ****     return result;
 3431              		.loc 2 205 36 is_stmt 0 view .LVU826
 3432 078a 0599     		ldr	r1, [sp, #20]
 3433 078c 0898     		ldr	r0, [sp, #32]
 3434 078e FFF7FEFF 		bl	__aeabi_fadd
 3435              	.LVL347:
 205:Core/Inc/Fusion/FusionMath.h ****     return result;
 3436              		.loc 2 205 19 view .LVU827
 3437 0792 0390     		str	r0, [sp, #12]
 3438 0794 A060     		str	r0, [r4, #8]
 206:Core/Inc/Fusion/FusionMath.h **** }
 3439              		.loc 2 206 5 is_stmt 1 view .LVU828
 206:Core/Inc/Fusion/FusionMath.h **** }
 3440              		.loc 2 206 12 is_stmt 0 view .LVU829
 3441 0796 21AB     		add	r3, sp, #132
 3442 0798 9C46     		mov	ip, r3
 3443 079a 1A00     		movs	r2, r3
 3444 079c 2000     		movs	r0, r4
 3445 079e 4AC8     		ldmia	r0!, {r1, r3, r6}
 3446 07a0 4AC2     		stmia	r2!, {r1, r3, r6}
 3447              	.LBE238:
 3448              	.LBE237:
 190:Core/Src/Fusion/FusionAhrs.c **** 
 3449              		.loc 1 190 5 is_stmt 1 view .LVU830
 3450 07a2 2A00     		movs	r2, r5
 3451 07a4 6346     		mov	r3, ip
 3452 07a6 43CB     		ldmia	r3!, {r0, r1, r6}
 3453 07a8 43C2     		stmia	r2!, {r0, r1, r6}
 3454              	.LVL348:
 3455              	.LBB239:
 3456              	.LBI239:
 238:Core/Inc/Fusion/FusionMath.h ****     FusionVector result;
 3457              		.loc 2 238 28 view .LVU831
 3458              	.LBB240:
 239:Core/Inc/Fusion/FusionMath.h ****     result.axis.x = vector.axis.x * scalar;
 3459              		.loc 2 239 5 view .LVU832
 240:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = vector.axis.y * scalar;
 3460              		.loc 2 240 5 view .LVU833
 240:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = vector.axis.y * scalar;
 3461              		.loc 2 240 35 is_stmt 0 view .LVU834
 3462 07aa 4146     		mov	r1, r8
ARM GAS  /tmp/ccEJb272.s 			page 83


 3463 07ac 7098     		ldr	r0, [sp, #448]
 3464 07ae FFF7FEFF 		bl	__aeabi_fmul
 3465              	.LVL349:
 240:Core/Inc/Fusion/FusionMath.h ****     result.axis.y = vector.axis.y * scalar;
 3466              		.loc 2 240 19 view .LVU835
 3467 07b2 1D90     		str	r0, [sp, #116]
 241:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = vector.axis.z * scalar;
 3468              		.loc 2 241 5 is_stmt 1 view .LVU836
 241:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = vector.axis.z * scalar;
 3469              		.loc 2 241 35 is_stmt 0 view .LVU837
 3470 07b4 391C     		adds	r1, r7, #0
 3471 07b6 7098     		ldr	r0, [sp, #448]
 3472 07b8 FFF7FEFF 		bl	__aeabi_fmul
 3473              	.LVL350:
 241:Core/Inc/Fusion/FusionMath.h ****     result.axis.z = vector.axis.z * scalar;
 3474              		.loc 2 241 19 view .LVU838
 3475 07bc 6060     		str	r0, [r4, #4]
 242:Core/Inc/Fusion/FusionMath.h ****     return result;
 3476              		.loc 2 242 5 is_stmt 1 view .LVU839
 242:Core/Inc/Fusion/FusionMath.h ****     return result;
 3477              		.loc 2 242 35 is_stmt 0 view .LVU840
 3478 07be 0399     		ldr	r1, [sp, #12]
 3479 07c0 7098     		ldr	r0, [sp, #448]
 3480 07c2 FFF7FEFF 		bl	__aeabi_fmul
 3481              	.LVL351:
 242:Core/Inc/Fusion/FusionMath.h ****     return result;
 3482              		.loc 2 242 19 view .LVU841
 3483 07c6 A060     		str	r0, [r4, #8]
 243:Core/Inc/Fusion/FusionMath.h **** }
 3484              		.loc 2 243 5 is_stmt 1 view .LVU842
 243:Core/Inc/Fusion/FusionMath.h **** }
 3485              		.loc 2 243 12 is_stmt 0 view .LVU843
 3486 07c8 3FAB     		add	r3, sp, #252
 3487 07ca 1A00     		movs	r2, r3
 3488 07cc 2100     		movs	r1, r4
 3489 07ce C1C9     		ldmia	r1!, {r0, r6, r7}
 3490 07d0 C1C2     		stmia	r2!, {r0, r6, r7}
 3491              	.LVL352:
 243:Core/Inc/Fusion/FusionMath.h **** }
 3492              		.loc 2 243 12 view .LVU844
 3493 07d2 5246     		mov	r2, r10
 3494 07d4 1032     		adds	r2, r2, #16
 3495 07d6 2900     		movs	r1, r5
 3496 07d8 C1CA     		ldmia	r2!, {r0, r6, r7}
 3497 07da C1C1     		stmia	r1!, {r0, r6, r7}
 3498 07dc 1268     		ldr	r2, [r2]
 3499 07de 0A60     		str	r2, [r1]
 3500 07e0 15AA     		add	r2, sp, #84
 3501 07e2 43CB     		ldmia	r3!, {r0, r1, r6}
 3502 07e4 43C2     		stmia	r2!, {r0, r1, r6}
 3503              	.LBE240:
 3504              	.LBE239:
 3505              	.LBB241:
 3506              	.LBI241:
 343:Core/Inc/Fusion/FusionMath.h **** #undef A
 344:Core/Inc/Fusion/FusionMath.h **** #undef B
 345:Core/Inc/Fusion/FusionMath.h **** }
ARM GAS  /tmp/ccEJb272.s 			page 84


 346:Core/Inc/Fusion/FusionMath.h **** 
 347:Core/Inc/Fusion/FusionMath.h **** /**
 348:Core/Inc/Fusion/FusionMath.h ****  * @brief Returns the multiplication of a quaternion with a vector.  This is a
 349:Core/Inc/Fusion/FusionMath.h ****  * normal quaternion multiplication where the vector is treated a
 350:Core/Inc/Fusion/FusionMath.h ****  * quaternion with a W element value of zero.  The quaternion is post-
 351:Core/Inc/Fusion/FusionMath.h ****  * multiplied by the vector.
 352:Core/Inc/Fusion/FusionMath.h ****  * @param quaternion Quaternion.
 353:Core/Inc/Fusion/FusionMath.h ****  * @param vector Vector.
 354:Core/Inc/Fusion/FusionMath.h ****  * @return Multiplication of a quaternion with a vector.
 355:Core/Inc/Fusion/FusionMath.h ****  */
 356:Core/Inc/Fusion/FusionMath.h **** static inline FusionQuaternion FusionQuaternionMultiplyVector(const FusionQuaternion quaternion, co
 3507              		.loc 2 356 32 is_stmt 1 view .LVU845
 3508              	.LBB242:
 357:Core/Inc/Fusion/FusionMath.h **** #define Q quaternion.element
 358:Core/Inc/Fusion/FusionMath.h **** #define V vector.axis
 359:Core/Inc/Fusion/FusionMath.h ****     FusionQuaternion result;
 3509              		.loc 2 359 5 view .LVU846
 360:Core/Inc/Fusion/FusionMath.h ****     result.element.w = -Q.x * V.x - Q.y * V.y - Q.z * V.z;
 3510              		.loc 2 360 5 view .LVU847
 3511              		.loc 2 360 26 is_stmt 0 view .LVU848
 3512 07e6 6B68     		ldr	r3, [r5, #4]
 3513 07e8 1A1C     		adds	r2, r3, #0
 3514              		.loc 2 360 24 view .LVU849
 3515 07ea 8023     		movs	r3, #128
 3516 07ec 1B06     		lsls	r3, r3, #24
 3517 07ee 0392     		str	r2, [sp, #12]
 3518 07f0 9446     		mov	ip, r2
 3519 07f2 6344     		add	r3, r3, ip
 3520 07f4 1800     		movs	r0, r3
 3521              		.loc 2 360 32 view .LVU850
 3522 07f6 159F     		ldr	r7, [sp, #84]
 3523              		.loc 2 360 29 view .LVU851
 3524 07f8 391C     		adds	r1, r7, #0
 3525 07fa FFF7FEFF 		bl	__aeabi_fmul
 3526              	.LVL353:
 3527 07fe 061C     		adds	r6, r0, #0
 3528              		.loc 2 360 38 view .LVU852
 3529 0800 AB68     		ldr	r3, [r5, #8]
 3530              		.loc 2 360 44 view .LVU853
 3531 0802 1699     		ldr	r1, [sp, #88]
 3532 0804 8846     		mov	r8, r1
 3533              		.loc 2 360 41 view .LVU854
 3534 0806 0493     		str	r3, [sp, #16]
 3535 0808 181C     		adds	r0, r3, #0
 3536 080a FFF7FEFF 		bl	__aeabi_fmul
 3537              	.LVL354:
 3538 080e 011C     		adds	r1, r0, #0
 3539              		.loc 2 360 35 view .LVU855
 3540 0810 301C     		adds	r0, r6, #0
 3541 0812 FFF7FEFF 		bl	__aeabi_fsub
 3542              	.LVL355:
 3543 0816 0690     		str	r0, [sp, #24]
 3544              		.loc 2 360 50 view .LVU856
 3545 0818 EA68     		ldr	r2, [r5, #12]
 3546              		.loc 2 360 56 view .LVU857
 3547 081a 1799     		ldr	r1, [sp, #92]
 3548 081c 0E1C     		adds	r6, r1, #0
ARM GAS  /tmp/ccEJb272.s 			page 85


 3549              		.loc 2 360 53 view .LVU858
 3550 081e 0592     		str	r2, [sp, #20]
 3551 0820 101C     		adds	r0, r2, #0
 3552 0822 FFF7FEFF 		bl	__aeabi_fmul
 3553              	.LVL356:
 3554 0826 011C     		adds	r1, r0, #0
 3555              		.loc 2 360 47 view .LVU859
 3556 0828 0698     		ldr	r0, [sp, #24]
 3557 082a FFF7FEFF 		bl	__aeabi_fsub
 3558              	.LVL357:
 3559              		.loc 2 360 22 view .LVU860
 3560 082e 1D90     		str	r0, [sp, #116]
 361:Core/Inc/Fusion/FusionMath.h ****     result.element.x = Q.w * V.x + Q.y * V.z - Q.z * V.y;
 3561              		.loc 2 361 5 is_stmt 1 view .LVU861
 3562              		.loc 2 361 25 is_stmt 0 view .LVU862
 3563 0830 199B     		ldr	r3, [sp, #100]
 3564              		.loc 2 361 28 view .LVU863
 3565 0832 0693     		str	r3, [sp, #24]
 3566 0834 191C     		adds	r1, r3, #0
 3567 0836 381C     		adds	r0, r7, #0
 3568 0838 FFF7FEFF 		bl	__aeabi_fmul
 3569              	.LVL358:
 3570 083c 0890     		str	r0, [sp, #32]
 3571              		.loc 2 361 40 view .LVU864
 3572 083e 311C     		adds	r1, r6, #0
 3573 0840 0498     		ldr	r0, [sp, #16]
 3574 0842 FFF7FEFF 		bl	__aeabi_fmul
 3575              	.LVL359:
 3576 0846 011C     		adds	r1, r0, #0
 3577              		.loc 2 361 34 view .LVU865
 3578 0848 0898     		ldr	r0, [sp, #32]
 3579 084a FFF7FEFF 		bl	__aeabi_fadd
 3580              	.LVL360:
 3581 084e 0890     		str	r0, [sp, #32]
 3582              		.loc 2 361 52 view .LVU866
 3583 0850 0599     		ldr	r1, [sp, #20]
 3584 0852 4046     		mov	r0, r8
 3585 0854 FFF7FEFF 		bl	__aeabi_fmul
 3586              	.LVL361:
 3587 0858 011C     		adds	r1, r0, #0
 3588              		.loc 2 361 46 view .LVU867
 3589 085a 0898     		ldr	r0, [sp, #32]
 3590 085c FFF7FEFF 		bl	__aeabi_fsub
 3591              	.LVL362:
 3592              		.loc 2 361 22 view .LVU868
 3593 0860 6060     		str	r0, [r4, #4]
 362:Core/Inc/Fusion/FusionMath.h ****     result.element.y = Q.w * V.y - Q.x * V.z + Q.z * V.x;
 3594              		.loc 2 362 5 is_stmt 1 view .LVU869
 3595              		.loc 2 362 28 is_stmt 0 view .LVU870
 3596 0862 0699     		ldr	r1, [sp, #24]
 3597 0864 4046     		mov	r0, r8
 3598 0866 FFF7FEFF 		bl	__aeabi_fmul
 3599              	.LVL363:
 3600 086a 0890     		str	r0, [sp, #32]
 3601              		.loc 2 362 40 view .LVU871
 3602 086c 311C     		adds	r1, r6, #0
 3603 086e 0398     		ldr	r0, [sp, #12]
ARM GAS  /tmp/ccEJb272.s 			page 86


 3604 0870 FFF7FEFF 		bl	__aeabi_fmul
 3605              	.LVL364:
 3606 0874 011C     		adds	r1, r0, #0
 3607              		.loc 2 362 34 view .LVU872
 3608 0876 0898     		ldr	r0, [sp, #32]
 3609 0878 FFF7FEFF 		bl	__aeabi_fsub
 3610              	.LVL365:
 3611 087c 0890     		str	r0, [sp, #32]
 3612              		.loc 2 362 52 view .LVU873
 3613 087e 0599     		ldr	r1, [sp, #20]
 3614 0880 381C     		adds	r0, r7, #0
 3615 0882 FFF7FEFF 		bl	__aeabi_fmul
 3616              	.LVL366:
 3617 0886 011C     		adds	r1, r0, #0
 3618              		.loc 2 362 46 view .LVU874
 3619 0888 0898     		ldr	r0, [sp, #32]
 3620 088a FFF7FEFF 		bl	__aeabi_fadd
 3621              	.LVL367:
 3622              		.loc 2 362 22 view .LVU875
 3623 088e A060     		str	r0, [r4, #8]
 363:Core/Inc/Fusion/FusionMath.h ****     result.element.z = Q.w * V.z + Q.x * V.y - Q.y * V.x;
 3624              		.loc 2 363 5 is_stmt 1 view .LVU876
 3625              		.loc 2 363 28 is_stmt 0 view .LVU877
 3626 0890 0699     		ldr	r1, [sp, #24]
 3627 0892 301C     		adds	r0, r6, #0
 3628 0894 FFF7FEFF 		bl	__aeabi_fmul
 3629              	.LVL368:
 3630 0898 061C     		adds	r6, r0, #0
 3631              		.loc 2 363 40 view .LVU878
 3632 089a 4146     		mov	r1, r8
 3633 089c 0398     		ldr	r0, [sp, #12]
 3634 089e FFF7FEFF 		bl	__aeabi_fmul
 3635              	.LVL369:
 3636 08a2 011C     		adds	r1, r0, #0
 3637              		.loc 2 363 34 view .LVU879
 3638 08a4 301C     		adds	r0, r6, #0
 3639 08a6 FFF7FEFF 		bl	__aeabi_fadd
 3640              	.LVL370:
 3641 08aa 8046     		mov	r8, r0
 3642              		.loc 2 363 52 view .LVU880
 3643 08ac 0499     		ldr	r1, [sp, #16]
 3644 08ae 381C     		adds	r0, r7, #0
 3645 08b0 FFF7FEFF 		bl	__aeabi_fmul
 3646              	.LVL371:
 3647 08b4 011C     		adds	r1, r0, #0
 3648              		.loc 2 363 46 view .LVU881
 3649 08b6 4046     		mov	r0, r8
 3650 08b8 FFF7FEFF 		bl	__aeabi_fsub
 3651              	.LVL372:
 3652              		.loc 2 363 22 view .LVU882
 3653 08bc E060     		str	r0, [r4, #12]
 364:Core/Inc/Fusion/FusionMath.h ****     return result;
 3654              		.loc 2 364 5 is_stmt 1 view .LVU883
 3655              		.loc 2 364 12 is_stmt 0 view .LVU884
 3656 08be 42AB     		add	r3, sp, #264
 3657 08c0 9C46     		mov	ip, r3
 3658 08c2 1900     		movs	r1, r3
ARM GAS  /tmp/ccEJb272.s 			page 87


 3659 08c4 2200     		movs	r2, r4
 3660 08c6 C1CA     		ldmia	r2!, {r0, r6, r7}
 3661 08c8 C1C1     		stmia	r1!, {r0, r6, r7}
 3662 08ca 1268     		ldr	r2, [r2]
 3663 08cc 0A60     		str	r2, [r1]
 3664 08ce 5246     		mov	r2, r10
 3665 08d0 1032     		adds	r2, r2, #16
 3666 08d2 15AB     		add	r3, sp, #84
 3667 08d4 1800     		movs	r0, r3
 3668 08d6 C8CA     		ldmia	r2!, {r3, r6, r7}
 3669 08d8 C8C0     		stmia	r0!, {r3, r6, r7}
 3670 08da 1268     		ldr	r2, [r2]
 3671 08dc 0392     		str	r2, [sp, #12]
 3672 08de 079F     		ldr	r7, [sp, #28]
 3673 08e0 3A60     		str	r2, [r7]
 3674 08e2 2A00     		movs	r2, r5
 3675 08e4 6346     		mov	r3, ip
 3676 08e6 C1CB     		ldmia	r3!, {r0, r6, r7}
 3677 08e8 C1C2     		stmia	r2!, {r0, r6, r7}
 3678 08ea 4B46     		mov	r3, r9
 3679 08ec 0A68     		ldr	r2, [r1]
 3680 08ee 1A60     		str	r2, [r3]
 3681              	.LBE242:
 3682              	.LBE241:
 3683              	.LBB243:
 3684              	.LBI243:
 319:Core/Inc/Fusion/FusionMath.h ****     FusionQuaternion result;
 3685              		.loc 2 319 32 is_stmt 1 view .LVU885
 3686              	.LBB244:
 320:Core/Inc/Fusion/FusionMath.h ****     result.element.w = quaternionA.element.w + quaternionB.element.w;
 3687              		.loc 2 320 5 view .LVU886
 321:Core/Inc/Fusion/FusionMath.h ****     result.element.x = quaternionA.element.x + quaternionB.element.x;
 3688              		.loc 2 321 5 view .LVU887
 321:Core/Inc/Fusion/FusionMath.h ****     result.element.x = quaternionA.element.x + quaternionB.element.x;
 3689              		.loc 2 321 46 is_stmt 0 view .LVU888
 3690 08f0 1999     		ldr	r1, [sp, #100]
 3691 08f2 1598     		ldr	r0, [sp, #84]
 3692 08f4 FFF7FEFF 		bl	__aeabi_fadd
 3693              	.LVL373:
 321:Core/Inc/Fusion/FusionMath.h ****     result.element.x = quaternionA.element.x + quaternionB.element.x;
 3694              		.loc 2 321 22 view .LVU889
 3695 08f8 1D90     		str	r0, [sp, #116]
 322:Core/Inc/Fusion/FusionMath.h ****     result.element.y = quaternionA.element.y + quaternionB.element.y;
 3696              		.loc 2 322 5 is_stmt 1 view .LVU890
 322:Core/Inc/Fusion/FusionMath.h ****     result.element.y = quaternionA.element.y + quaternionB.element.y;
 3697              		.loc 2 322 46 is_stmt 0 view .LVU891
 3698 08fa 6968     		ldr	r1, [r5, #4]
 3699 08fc 1698     		ldr	r0, [sp, #88]
 3700 08fe FFF7FEFF 		bl	__aeabi_fadd
 3701              	.LVL374:
 322:Core/Inc/Fusion/FusionMath.h ****     result.element.y = quaternionA.element.y + quaternionB.element.y;
 3702              		.loc 2 322 22 view .LVU892
 3703 0902 6060     		str	r0, [r4, #4]
 323:Core/Inc/Fusion/FusionMath.h ****     result.element.z = quaternionA.element.z + quaternionB.element.z;
 3704              		.loc 2 323 5 is_stmt 1 view .LVU893
 323:Core/Inc/Fusion/FusionMath.h ****     result.element.z = quaternionA.element.z + quaternionB.element.z;
 3705              		.loc 2 323 46 is_stmt 0 view .LVU894
ARM GAS  /tmp/ccEJb272.s 			page 88


 3706 0904 A968     		ldr	r1, [r5, #8]
 3707 0906 1798     		ldr	r0, [sp, #92]
 3708 0908 FFF7FEFF 		bl	__aeabi_fadd
 3709              	.LVL375:
 3710 090c 08E0     		b	.L85
 3711              	.L86:
 3712 090e C046     		.align	2
 3713              	.L84:
 3714 0910 12141F5F 		.word	1595872274
 3715 0914 12D3363F 		.word	1060557586
 3716 0918 FF51D83F 		.word	1071141375
 3717 091c 35FA0E3C 		.word	1007614517
 3718              	.L85:
 323:Core/Inc/Fusion/FusionMath.h ****     result.element.z = quaternionA.element.z + quaternionB.element.z;
 3719              		.loc 2 323 22 view .LVU895
 3720 0920 A060     		str	r0, [r4, #8]
 324:Core/Inc/Fusion/FusionMath.h ****     return result;
 3721              		.loc 2 324 5 is_stmt 1 view .LVU896
 324:Core/Inc/Fusion/FusionMath.h ****     return result;
 3722              		.loc 2 324 43 is_stmt 0 view .LVU897
 3723 0922 1898     		ldr	r0, [sp, #96]
 324:Core/Inc/Fusion/FusionMath.h ****     return result;
 3724              		.loc 2 324 46 view .LVU898
 3725 0924 E968     		ldr	r1, [r5, #12]
 3726 0926 FFF7FEFF 		bl	__aeabi_fadd
 3727              	.LVL376:
 324:Core/Inc/Fusion/FusionMath.h ****     return result;
 3728              		.loc 2 324 22 view .LVU899
 3729 092a E060     		str	r0, [r4, #12]
 325:Core/Inc/Fusion/FusionMath.h **** }
 3730              		.loc 2 325 5 is_stmt 1 view .LVU900
 325:Core/Inc/Fusion/FusionMath.h **** }
 3731              		.loc 2 325 12 is_stmt 0 view .LVU901
 3732 092c 46AB     		add	r3, sp, #280
 3733 092e 1900     		movs	r1, r3
 3734 0930 2200     		movs	r2, r4
 3735 0932 C1CA     		ldmia	r2!, {r0, r6, r7}
 3736 0934 C1C1     		stmia	r1!, {r0, r6, r7}
 3737 0936 1268     		ldr	r2, [r2]
 3738 0938 0A60     		str	r2, [r1]
 3739              	.LBE244:
 3740              	.LBE243:
 190:Core/Src/Fusion/FusionAhrs.c **** 
 3741              		.loc 1 190 24 view .LVU902
 3742 093a 5246     		mov	r2, r10
 3743 093c 1032     		adds	r2, r2, #16
 3744 093e C1CB     		ldmia	r3!, {r0, r6, r7}
 3745 0940 C1C2     		stmia	r2!, {r0, r6, r7}
 3746 0942 0B68     		ldr	r3, [r1]
 3747 0944 1360     		str	r3, [r2]
 193:Core/Src/Fusion/FusionAhrs.c **** #undef Q
 3748              		.loc 1 193 5 is_stmt 1 view .LVU903
 3749 0946 5346     		mov	r3, r10
 3750 0948 1033     		adds	r3, r3, #16
 3751 094a 2A00     		movs	r2, r5
 3752 094c 43CB     		ldmia	r3!, {r0, r1, r6}
 3753 094e 43C2     		stmia	r2!, {r0, r1, r6}
ARM GAS  /tmp/ccEJb272.s 			page 89


 3754 0950 1B68     		ldr	r3, [r3]
 3755 0952 1360     		str	r3, [r2]
 3756              	.LBB245:
 3757              	.LBI245:
 365:Core/Inc/Fusion/FusionMath.h **** #undef Q
 366:Core/Inc/Fusion/FusionMath.h **** #undef V
 367:Core/Inc/Fusion/FusionMath.h **** }
 368:Core/Inc/Fusion/FusionMath.h **** 
 369:Core/Inc/Fusion/FusionMath.h **** /**
 370:Core/Inc/Fusion/FusionMath.h ****  * @brief Returns the normalised quaternion.
 371:Core/Inc/Fusion/FusionMath.h ****  * @param quaternion Quaternion.
 372:Core/Inc/Fusion/FusionMath.h ****  * @return Normalised quaternion.
 373:Core/Inc/Fusion/FusionMath.h ****  */
 374:Core/Inc/Fusion/FusionMath.h **** static inline FusionQuaternion FusionQuaternionNormalise(const FusionQuaternion quaternion) {
 3758              		.loc 2 374 32 view .LVU904
 3759              	.LBB246:
 375:Core/Inc/Fusion/FusionMath.h **** #define Q quaternion.element
 376:Core/Inc/Fusion/FusionMath.h **** #ifdef FUSION_USE_NORMAL_SQRT
 377:Core/Inc/Fusion/FusionMath.h ****     const float magnitudeReciprocal = 1.0f / sqrtf(Q.w * Q.w + Q.x * Q.x + Q.y * Q.y + Q.z * Q.z);
 378:Core/Inc/Fusion/FusionMath.h **** #else
 379:Core/Inc/Fusion/FusionMath.h ****     const float magnitudeReciprocal = FusionFastInverseSqrt(Q.w * Q.w + Q.x * Q.x + Q.y * Q.y + Q.z
 3760              		.loc 2 379 5 view .LVU905
 3761              		.loc 2 379 62 is_stmt 0 view .LVU906
 3762 0954 199B     		ldr	r3, [sp, #100]
 3763 0956 9846     		mov	r8, r3
 3764              		.loc 2 379 65 view .LVU907
 3765 0958 191C     		adds	r1, r3, #0
 3766 095a 181C     		adds	r0, r3, #0
 3767 095c FFF7FEFF 		bl	__aeabi_fmul
 3768              	.LVL377:
 3769 0960 061C     		adds	r6, r0, #0
 3770              		.loc 2 379 74 view .LVU908
 3771 0962 6F68     		ldr	r7, [r5, #4]
 3772              		.loc 2 379 77 view .LVU909
 3773 0964 391C     		adds	r1, r7, #0
 3774 0966 381C     		adds	r0, r7, #0
 3775 0968 FFF7FEFF 		bl	__aeabi_fmul
 3776              	.LVL378:
 3777 096c 011C     		adds	r1, r0, #0
 3778              		.loc 2 379 71 view .LVU910
 3779 096e 301C     		adds	r0, r6, #0
 3780 0970 FFF7FEFF 		bl	__aeabi_fadd
 3781              	.LVL379:
 3782 0974 8146     		mov	r9, r0
 3783              		.loc 2 379 86 view .LVU911
 3784 0976 AE68     		ldr	r6, [r5, #8]
 3785              		.loc 2 379 89 view .LVU912
 3786 0978 311C     		adds	r1, r6, #0
 3787 097a 301C     		adds	r0, r6, #0
 3788 097c FFF7FEFF 		bl	__aeabi_fmul
 3789              	.LVL380:
 3790 0980 011C     		adds	r1, r0, #0
 3791              		.loc 2 379 83 view .LVU913
 3792 0982 4846     		mov	r0, r9
 3793 0984 FFF7FEFF 		bl	__aeabi_fadd
 3794              	.LVL381:
 3795 0988 8146     		mov	r9, r0
ARM GAS  /tmp/ccEJb272.s 			page 90


 3796              		.loc 2 379 98 view .LVU914
 3797 098a ED68     		ldr	r5, [r5, #12]
 3798              		.loc 2 379 101 view .LVU915
 3799 098c 291C     		adds	r1, r5, #0
 3800 098e 281C     		adds	r0, r5, #0
 3801 0990 FFF7FEFF 		bl	__aeabi_fmul
 3802              	.LVL382:
 3803 0994 011C     		adds	r1, r0, #0
 3804              		.loc 2 379 39 view .LVU916
 3805 0996 4846     		mov	r0, r9
 3806 0998 FFF7FEFF 		bl	__aeabi_fadd
 3807              	.LVL383:
 3808              	.LBB247:
 3809              	.LBI247:
 169:Core/Inc/Fusion/FusionMath.h **** 
 3810              		.loc 2 169 21 is_stmt 1 view .LVU917
 3811              	.LBB248:
 171:Core/Inc/Fusion/FusionMath.h ****         float f;
 3812              		.loc 2 171 5 view .LVU918
 176:Core/Inc/Fusion/FusionMath.h ****     union32.i = 0x5F1F1412 - (union32.i >> 1);
 3813              		.loc 2 176 5 view .LVU919
 177:Core/Inc/Fusion/FusionMath.h ****     return union32.f * (1.69000231f - 0.714158168f * x * union32.f * union32.f);
 3814              		.loc 2 177 5 view .LVU920
 177:Core/Inc/Fusion/FusionMath.h ****     return union32.f * (1.69000231f - 0.714158168f * x * union32.f * union32.f);
 3815              		.loc 2 177 41 is_stmt 0 view .LVU921
 3816 099c 4310     		asrs	r3, r0, #1
 178:Core/Inc/Fusion/FusionMath.h **** }
 3817              		.loc 2 178 5 is_stmt 1 view .LVU922
 3818 099e 304A     		ldr	r2, .L87
 3819 09a0 D31A     		subs	r3, r2, r3
 3820 09a2 9946     		mov	r9, r3
 178:Core/Inc/Fusion/FusionMath.h **** }
 3821              		.loc 2 178 52 is_stmt 0 view .LVU923
 3822 09a4 2F49     		ldr	r1, .L87+4
 3823 09a6 FFF7FEFF 		bl	__aeabi_fmul
 3824              	.LVL384:
 178:Core/Inc/Fusion/FusionMath.h **** }
 3825              		.loc 2 178 52 view .LVU924
 3826 09aa 011C     		adds	r1, r0, #0
 178:Core/Inc/Fusion/FusionMath.h **** }
 3827              		.loc 2 178 56 view .LVU925
 3828 09ac 4846     		mov	r0, r9
 3829 09ae FFF7FEFF 		bl	__aeabi_fmul
 3830              	.LVL385:
 3831 09b2 011C     		adds	r1, r0, #0
 178:Core/Inc/Fusion/FusionMath.h **** }
 3832              		.loc 2 178 68 view .LVU926
 3833 09b4 4846     		mov	r0, r9
 3834 09b6 FFF7FEFF 		bl	__aeabi_fmul
 3835              	.LVL386:
 3836 09ba 011C     		adds	r1, r0, #0
 178:Core/Inc/Fusion/FusionMath.h **** }
 3837              		.loc 2 178 37 view .LVU927
 3838 09bc 2A48     		ldr	r0, .L87+8
 3839 09be FFF7FEFF 		bl	__aeabi_fsub
 3840              	.LVL387:
 3841 09c2 011C     		adds	r1, r0, #0
ARM GAS  /tmp/ccEJb272.s 			page 91


 178:Core/Inc/Fusion/FusionMath.h **** }
 3842              		.loc 2 178 22 view .LVU928
 3843 09c4 4846     		mov	r0, r9
 3844 09c6 FFF7FEFF 		bl	__aeabi_fmul
 3845              	.LVL388:
 3846 09ca 8146     		mov	r9, r0
 3847              	.LVL389:
 178:Core/Inc/Fusion/FusionMath.h **** }
 3848              		.loc 2 178 22 view .LVU929
 3849              	.LBE248:
 3850              	.LBE247:
 380:Core/Inc/Fusion/FusionMath.h **** #endif
 381:Core/Inc/Fusion/FusionMath.h ****     FusionQuaternion normalisedQuaternion;
 3851              		.loc 2 381 5 is_stmt 1 view .LVU930
 382:Core/Inc/Fusion/FusionMath.h ****     normalisedQuaternion.element.w = Q.w * magnitudeReciprocal;
 3852              		.loc 2 382 5 view .LVU931
 3853              		.loc 2 382 42 is_stmt 0 view .LVU932
 3854 09cc 011C     		adds	r1, r0, #0
 3855 09ce 4046     		mov	r0, r8
 3856              	.LVL390:
 3857              		.loc 2 382 42 view .LVU933
 3858 09d0 FFF7FEFF 		bl	__aeabi_fmul
 3859              	.LVL391:
 3860              		.loc 2 382 36 view .LVU934
 3861 09d4 1D90     		str	r0, [sp, #116]
 383:Core/Inc/Fusion/FusionMath.h ****     normalisedQuaternion.element.x = Q.x * magnitudeReciprocal;
 3862              		.loc 2 383 5 is_stmt 1 view .LVU935
 3863              		.loc 2 383 42 is_stmt 0 view .LVU936
 3864 09d6 4946     		mov	r1, r9
 3865 09d8 381C     		adds	r0, r7, #0
 3866 09da FFF7FEFF 		bl	__aeabi_fmul
 3867              	.LVL392:
 3868              		.loc 2 383 36 view .LVU937
 3869 09de 6060     		str	r0, [r4, #4]
 384:Core/Inc/Fusion/FusionMath.h ****     normalisedQuaternion.element.y = Q.y * magnitudeReciprocal;
 3870              		.loc 2 384 5 is_stmt 1 view .LVU938
 3871              		.loc 2 384 42 is_stmt 0 view .LVU939
 3872 09e0 4946     		mov	r1, r9
 3873 09e2 301C     		adds	r0, r6, #0
 3874 09e4 FFF7FEFF 		bl	__aeabi_fmul
 3875              	.LVL393:
 3876              		.loc 2 384 36 view .LVU940
 3877 09e8 A060     		str	r0, [r4, #8]
 385:Core/Inc/Fusion/FusionMath.h ****     normalisedQuaternion.element.z = Q.z * magnitudeReciprocal;
 3878              		.loc 2 385 5 is_stmt 1 view .LVU941
 3879              		.loc 2 385 42 is_stmt 0 view .LVU942
 3880 09ea 4946     		mov	r1, r9
 3881 09ec 281C     		adds	r0, r5, #0
 3882 09ee FFF7FEFF 		bl	__aeabi_fmul
 3883              	.LVL394:
 3884              		.loc 2 385 36 view .LVU943
 3885 09f2 E060     		str	r0, [r4, #12]
 386:Core/Inc/Fusion/FusionMath.h ****     return normalisedQuaternion;
 3886              		.loc 2 386 5 is_stmt 1 view .LVU944
 3887              		.loc 2 386 12 is_stmt 0 view .LVU945
 3888 09f4 5CAB     		add	r3, sp, #368
 3889 09f6 1A00     		movs	r2, r3
ARM GAS  /tmp/ccEJb272.s 			page 92


 3890 09f8 23CC     		ldmia	r4!, {r0, r1, r5}
 3891 09fa 23C2     		stmia	r2!, {r0, r1, r5}
 3892 09fc 5946     		mov	r1, fp
 3893 09fe 0968     		ldr	r1, [r1]
 3894 0a00 1160     		str	r1, [r2]
 3895              	.LBE246:
 3896              	.LBE245:
 193:Core/Src/Fusion/FusionAhrs.c **** #undef Q
 3897              		.loc 1 193 24 view .LVU946
 3898 0a02 5046     		mov	r0, r10
 3899 0a04 1030     		adds	r0, r0, #16
 3900 0a06 32CB     		ldmia	r3!, {r1, r4, r5}
 3901 0a08 32C0     		stmia	r0!, {r1, r4, r5}
 3902 0a0a 1368     		ldr	r3, [r2]
 3903 0a0c 0360     		str	r3, [r0]
 195:Core/Src/Fusion/FusionAhrs.c **** 
 3904              		.loc 1 195 1 view .LVU947
 3905 0a0e 61B0     		add	sp, sp, #388
 3906              		@ sp needed
 3907              	.LVL395:
 3908              	.LVL396:
 195:Core/Src/Fusion/FusionAhrs.c **** 
 3909              		.loc 1 195 1 view .LVU948
 3910 0a10 F0BC     		pop	{r4, r5, r6, r7}
 3911 0a12 BB46     		mov	fp, r7
 3912 0a14 B246     		mov	r10, r6
 3913 0a16 A946     		mov	r9, r5
 3914 0a18 A046     		mov	r8, r4
 3915 0a1a F0BD     		pop	{r4, r5, r6, r7, pc}
 3916              	.LVL397:
 3917              	.L78:
 3918              	.LBB249:
 3919              	.LBB204:
 192:Core/Inc/Fusion/FusionMath.h **** }
 3920              		.loc 2 192 63 view .LVU949
 3921 0a1c 0023     		movs	r3, #0
 3922 0a1e C0E4     		b	.L51
 3923              	.L67:
 3924 0a20 0123     		movs	r3, #1
 3925 0a22 BEE4     		b	.L51
 3926              	.LVL398:
 3927              	.L81:
 192:Core/Inc/Fusion/FusionMath.h **** }
 3928              		.loc 2 192 63 view .LVU950
 3929              	.LBE204:
 3930              	.LBE249:
 3931              	.LBB250:
 158:Core/Src/Fusion/FusionAhrs.c ****             ahrs->magneticRejectionTimer = 0;
 3932              		.loc 1 158 13 is_stmt 1 view .LVU951
 3933 0a24 6EAB     		add	r3, sp, #440
 3934 0a26 6A46     		mov	r2, sp
 3935 0a28 03CB     		ldmia	r3!, {r0, r1}
 3936 0a2a 03C2     		stmia	r2!, {r0, r1}
 3937              	.LVL399:
 158:Core/Src/Fusion/FusionAhrs.c ****             ahrs->magneticRejectionTimer = 0;
 3938              		.loc 1 158 13 is_stmt 0 view .LVU952
 3939 0a2c 6D9B     		ldr	r3, [sp, #436]
ARM GAS  /tmp/ccEJb272.s 			page 93


 3940 0a2e 2D98     		ldr	r0, [sp, #180]
 3941 0a30 2E99     		ldr	r1, [sp, #184]
 3942 0a32 2F9A     		ldr	r2, [sp, #188]
 3943 0a34 FFF7FEFF 		bl	FusionCompassCalculateHeading
 3944              	.LVL400:
 3945 0a38 011C     		adds	r1, r0, #0
 3946 0a3a 5046     		mov	r0, r10
 3947 0a3c FFF7FEFF 		bl	FusionAhrsSetHeading
 3948              	.LVL401:
 159:Core/Src/Fusion/FusionAhrs.c ****             ahrs->magneticRejectionTimeout = true;
 3949              		.loc 1 159 13 is_stmt 1 view .LVU953
 159:Core/Src/Fusion/FusionAhrs.c ****             ahrs->magneticRejectionTimeout = true;
 3950              		.loc 1 159 42 is_stmt 0 view .LVU954
 3951 0a40 0023     		movs	r3, #0
 3952 0a42 5246     		mov	r2, r10
 3953 0a44 D365     		str	r3, [r2, #92]
 160:Core/Src/Fusion/FusionAhrs.c ****         }
 3954              		.loc 1 160 13 is_stmt 1 view .LVU955
 160:Core/Src/Fusion/FusionAhrs.c ****         }
 3955              		.loc 1 160 44 is_stmt 0 view .LVU956
 3956 0a46 6033     		adds	r3, r3, #96
 3957 0a48 0122     		movs	r2, #1
 3958 0a4a 5146     		mov	r1, r10
 3959 0a4c CA54     		strb	r2, [r1, r3]
 3960 0a4e B4E4     		b	.L55
 3961              	.LVL402:
 3962              	.L68:
 177:Core/Src/Fusion/FusionAhrs.c ****         } else {
 3963              		.loc 1 177 85 view .LVU957
 3964 0a50 0022     		movs	r2, #0
 3965 0a52 23E6     		b	.L59
 3966              	.LVL403:
 3967              	.L79:
 179:Core/Src/Fusion/FusionAhrs.c ****         }
 3968              		.loc 1 179 13 is_stmt 1 view .LVU958
 179:Core/Src/Fusion/FusionAhrs.c ****         }
 3969              		.loc 1 179 41 is_stmt 0 view .LVU959
 3970 0a54 5346     		mov	r3, r10
 3971 0a56 DB6D     		ldr	r3, [r3, #92]
 3972 0a58 0133     		adds	r3, r3, #1
 3973 0a5a 5246     		mov	r2, r10
 3974 0a5c D365     		str	r3, [r2, #92]
 3975 0a5e 20E6     		b	.L54
 3976              	.L88:
 3977              		.align	2
 3978              	.L87:
 3979 0a60 12141F5F 		.word	1595872274
 3980 0a64 12D3363F 		.word	1060557586
 3981 0a68 FF51D83F 		.word	1071141375
 3982              	.LBE250:
 3983              		.cfi_endproc
 3984              	.LFE24:
 3986              		.section	.text.FusionAhrsUpdateExternalHeading,"ax",%progbits
 3987              		.align	1
 3988              		.global	FusionAhrsUpdateExternalHeading
 3989              		.syntax unified
 3990              		.code	16
ARM GAS  /tmp/ccEJb272.s 			page 94


 3991              		.thumb_func
 3992              		.fpu softvfp
 3994              	FusionAhrsUpdateExternalHeading:
 3995              	.LVL404:
 3996              	.LFB26:
 225:Core/Src/Fusion/FusionAhrs.c **** #define Q ahrs->quaternion.element
 3997              		.loc 1 225 170 is_stmt 1 view -0
 3998              		.cfi_startproc
 3999              		@ args = 20, pretend = 0, frame = 32
 4000              		@ frame_needed = 0, uses_anonymous_args = 0
 225:Core/Src/Fusion/FusionAhrs.c **** #define Q ahrs->quaternion.element
 4001              		.loc 1 225 170 is_stmt 0 view .LVU961
 4002 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4003              	.LCFI19:
 4004              		.cfi_def_cfa_offset 20
 4005              		.cfi_offset 4, -20
 4006              		.cfi_offset 5, -16
 4007              		.cfi_offset 6, -12
 4008              		.cfi_offset 7, -8
 4009              		.cfi_offset 14, -4
 4010 0002 C646     		mov	lr, r8
 4011 0004 00B5     		push	{lr}
 4012              	.LCFI20:
 4013              		.cfi_def_cfa_offset 24
 4014              		.cfi_offset 8, -24
 4015 0006 90B0     		sub	sp, sp, #64
 4016              	.LCFI21:
 4017              		.cfi_def_cfa_offset 88
 4018 0008 0400     		movs	r4, r0
 4019 000a 0991     		str	r1, [sp, #36]
 4020 000c 0A92     		str	r2, [sp, #40]
 4021 000e 0B93     		str	r3, [sp, #44]
 229:Core/Src/Fusion/FusionAhrs.c **** 
 4022              		.loc 1 229 5 is_stmt 1 view .LVU962
 229:Core/Src/Fusion/FusionAhrs.c **** 
 4023              		.loc 1 229 38 is_stmt 0 view .LVU963
 4024 0010 4669     		ldr	r6, [r0, #20]
 229:Core/Src/Fusion/FusionAhrs.c **** 
 4025              		.loc 1 229 35 view .LVU964
 4026 0012 311C     		adds	r1, r6, #0
 4027 0014 0069     		ldr	r0, [r0, #16]
 4028              	.LVL405:
 229:Core/Src/Fusion/FusionAhrs.c **** 
 4029              		.loc 1 229 35 view .LVU965
 4030 0016 FFF7FEFF 		bl	__aeabi_fmul
 4031              	.LVL406:
 4032 001a 8046     		mov	r8, r0
 229:Core/Src/Fusion/FusionAhrs.c **** 
 4033              		.loc 1 229 44 view .LVU966
 4034 001c A569     		ldr	r5, [r4, #24]
 229:Core/Src/Fusion/FusionAhrs.c **** 
 4035              		.loc 1 229 47 view .LVU967
 4036 001e E169     		ldr	r1, [r4, #28]
 4037 0020 281C     		adds	r0, r5, #0
 4038 0022 FFF7FEFF 		bl	__aeabi_fmul
 4039              	.LVL407:
 4040 0026 071C     		adds	r7, r0, #0
ARM GAS  /tmp/ccEJb272.s 			page 95


 229:Core/Src/Fusion/FusionAhrs.c **** 
 4041              		.loc 1 229 65 view .LVU968
 4042 0028 291C     		adds	r1, r5, #0
 4043 002a 281C     		adds	r0, r5, #0
 4044 002c FFF7FEFF 		bl	__aeabi_fmul
 4045              	.LVL408:
 4046 0030 011C     		adds	r1, r0, #0
 229:Core/Src/Fusion/FusionAhrs.c **** 
 4047              		.loc 1 229 59 view .LVU969
 4048 0032 FC20     		movs	r0, #252
 4049 0034 8005     		lsls	r0, r0, #22
 4050 0036 FFF7FEFF 		bl	__aeabi_fsub
 4051              	.LVL409:
 4052 003a 051C     		adds	r5, r0, #0
 229:Core/Src/Fusion/FusionAhrs.c **** 
 4053              		.loc 1 229 77 view .LVU970
 4054 003c 311C     		adds	r1, r6, #0
 4055 003e 301C     		adds	r0, r6, #0
 4056 0040 FFF7FEFF 		bl	__aeabi_fmul
 4057              	.LVL410:
 4058 0044 011C     		adds	r1, r0, #0
 229:Core/Src/Fusion/FusionAhrs.c **** 
 4059              		.loc 1 229 24 view .LVU971
 4060 0046 281C     		adds	r0, r5, #0
 4061 0048 FFF7FEFF 		bl	__aeabi_fsub
 4062              	.LVL411:
 4063 004c 051C     		adds	r5, r0, #0
 4064 004e 391C     		adds	r1, r7, #0
 4065 0050 4046     		mov	r0, r8
 4066 0052 FFF7FEFF 		bl	__aeabi_fadd
 4067              	.LVL412:
 4068 0056 291C     		adds	r1, r5, #0
 4069 0058 FFF7FEFF 		bl	atan2f
 4070              	.LVL413:
 4071 005c 071C     		adds	r7, r0, #0
 4072              	.LVL414:
 232:Core/Src/Fusion/FusionAhrs.c ****     const float sinHeadingRadians = sinf(headingRadians);
 4073              		.loc 1 232 5 is_stmt 1 view .LVU972
 4074              	.LBB251:
 4075              	.LBI251:
 127:Core/Inc/Fusion/FusionMath.h ****     return degrees * ((float) M_PI / 180.0f);
 4076              		.loc 2 127 21 view .LVU973
 4077              	.LBB252:
 128:Core/Inc/Fusion/FusionMath.h **** }
 4078              		.loc 2 128 5 view .LVU974
 128:Core/Inc/Fusion/FusionMath.h **** }
 4079              		.loc 2 128 20 is_stmt 0 view .LVU975
 4080 005e 1949     		ldr	r1, .L90
 4081 0060 1998     		ldr	r0, [sp, #100]
 4082              	.LVL415:
 128:Core/Inc/Fusion/FusionMath.h **** }
 4083              		.loc 2 128 20 view .LVU976
 4084 0062 FFF7FEFF 		bl	__aeabi_fmul
 4085              	.LVL416:
 4086 0066 051C     		adds	r5, r0, #0
 4087              	.LVL417:
 128:Core/Inc/Fusion/FusionMath.h **** }
ARM GAS  /tmp/ccEJb272.s 			page 96


 4088              		.loc 2 128 20 view .LVU977
 4089              	.LBE252:
 4090              	.LBE251:
 233:Core/Src/Fusion/FusionAhrs.c ****     const FusionVector magnetometer = {
 4091              		.loc 1 233 5 is_stmt 1 view .LVU978
 233:Core/Src/Fusion/FusionAhrs.c ****     const FusionVector magnetometer = {
 4092              		.loc 1 233 37 is_stmt 0 view .LVU979
 4093 0068 FFF7FEFF 		bl	sinf
 4094              	.LVL418:
 233:Core/Src/Fusion/FusionAhrs.c ****     const FusionVector magnetometer = {
 4095              		.loc 1 233 37 view .LVU980
 4096 006c 061C     		adds	r6, r0, #0
 4097              	.LVL419:
 234:Core/Src/Fusion/FusionAhrs.c ****             .axis.x = cosf(headingRadians),
 4098              		.loc 1 234 5 is_stmt 1 view .LVU981
 235:Core/Src/Fusion/FusionAhrs.c ****             .axis.y = -1.0f * cosf(roll) * sinHeadingRadians,
 4099              		.loc 1 235 23 is_stmt 0 view .LVU982
 4100 006e 281C     		adds	r0, r5, #0
 4101              	.LVL420:
 235:Core/Src/Fusion/FusionAhrs.c ****             .axis.y = -1.0f * cosf(roll) * sinHeadingRadians,
 4102              		.loc 1 235 23 view .LVU983
 4103 0070 FFF7FEFF 		bl	cosf
 4104              	.LVL421:
 234:Core/Src/Fusion/FusionAhrs.c ****             .axis.x = cosf(headingRadians),
 4105              		.loc 1 234 24 view .LVU984
 4106 0074 0DAD     		add	r5, sp, #52
 4107              	.LVL422:
 234:Core/Src/Fusion/FusionAhrs.c ****             .axis.x = cosf(headingRadians),
 4108              		.loc 1 234 24 view .LVU985
 4109 0076 0D90     		str	r0, [sp, #52]
 236:Core/Src/Fusion/FusionAhrs.c ****             .axis.z = sinHeadingRadians * sinf(roll),
 4110              		.loc 1 236 31 view .LVU986
 4111 0078 381C     		adds	r0, r7, #0
 4112 007a FFF7FEFF 		bl	cosf
 4113              	.LVL423:
 236:Core/Src/Fusion/FusionAhrs.c ****             .axis.z = sinHeadingRadians * sinf(roll),
 4114              		.loc 1 236 29 view .LVU987
 4115 007e 8023     		movs	r3, #128
 4116 0080 1B06     		lsls	r3, r3, #24
 4117 0082 9C46     		mov	ip, r3
 4118 0084 6044     		add	r0, r0, ip
 236:Core/Src/Fusion/FusionAhrs.c ****             .axis.z = sinHeadingRadians * sinf(roll),
 4119              		.loc 1 236 42 view .LVU988
 4120 0086 311C     		adds	r1, r6, #0
 4121 0088 FFF7FEFF 		bl	__aeabi_fmul
 4122              	.LVL424:
 234:Core/Src/Fusion/FusionAhrs.c ****             .axis.x = cosf(headingRadians),
 4123              		.loc 1 234 24 view .LVU989
 4124 008c 0E90     		str	r0, [sp, #56]
 237:Core/Src/Fusion/FusionAhrs.c ****     };
 4125              		.loc 1 237 43 view .LVU990
 4126 008e 381C     		adds	r0, r7, #0
 4127 0090 FFF7FEFF 		bl	sinf
 4128              	.LVL425:
 237:Core/Src/Fusion/FusionAhrs.c ****     };
 4129              		.loc 1 237 41 view .LVU991
 4130 0094 311C     		adds	r1, r6, #0
ARM GAS  /tmp/ccEJb272.s 			page 97


 4131 0096 FFF7FEFF 		bl	__aeabi_fmul
 4132              	.LVL426:
 234:Core/Src/Fusion/FusionAhrs.c ****             .axis.x = cosf(headingRadians),
 4133              		.loc 1 234 24 view .LVU992
 4134 009a 0F90     		str	r0, [sp, #60]
 241:Core/Src/Fusion/FusionAhrs.c **** #undef Q
 4135              		.loc 1 241 5 is_stmt 1 view .LVU993
 4136 009c 1A9B     		ldr	r3, [sp, #104]
 4137 009e 0693     		str	r3, [sp, #24]
 4138 00a0 03AB     		add	r3, sp, #12
 4139 00a2 07CD     		ldmia	r5!, {r0, r1, r2}
 4140 00a4 07C3     		stmia	r3!, {r0, r1, r2}
 4141 00a6 6B46     		mov	r3, sp
 4142 00a8 16AA     		add	r2, sp, #88
 4143              	.LVL427:
 241:Core/Src/Fusion/FusionAhrs.c **** #undef Q
 4144              		.loc 1 241 5 is_stmt 0 view .LVU994
 4145 00aa 23CA     		ldmia	r2!, {r0, r1, r5}
 4146 00ac 23C3     		stmia	r3!, {r0, r1, r5}
 4147              	.LVL428:
 241:Core/Src/Fusion/FusionAhrs.c **** #undef Q
 4148              		.loc 1 241 5 view .LVU995
 4149 00ae 0999     		ldr	r1, [sp, #36]
 4150 00b0 0A9A     		ldr	r2, [sp, #40]
 4151              	.LVL429:
 241:Core/Src/Fusion/FusionAhrs.c **** #undef Q
 4152              		.loc 1 241 5 view .LVU996
 4153 00b2 0B9B     		ldr	r3, [sp, #44]
 4154 00b4 2000     		movs	r0, r4
 4155 00b6 FFF7FEFF 		bl	FusionAhrsUpdate
 4156              	.LVL430:
 243:Core/Src/Fusion/FusionAhrs.c **** 
 4157              		.loc 1 243 1 view .LVU997
 4158 00ba 10B0     		add	sp, sp, #64
 4159              		@ sp needed
 4160              	.LVL431:
 4161              	.LVL432:
 4162              	.LVL433:
 243:Core/Src/Fusion/FusionAhrs.c **** 
 4163              		.loc 1 243 1 view .LVU998
 4164 00bc 80BC     		pop	{r7}
 4165 00be B846     		mov	r8, r7
 4166 00c0 F0BD     		pop	{r4, r5, r6, r7, pc}
 4167              	.L91:
 4168 00c2 C046     		.align	2
 4169              	.L90:
 4170 00c4 35FA8E3C 		.word	1016003125
 4171              		.cfi_endproc
 4172              	.LFE26:
 4174              		.section	.text.FusionAhrsUpdateNoMagnetometer,"ax",%progbits
 4175              		.align	1
 4176              		.global	FusionAhrsUpdateNoMagnetometer
 4177              		.syntax unified
 4178              		.code	16
 4179              		.thumb_func
 4180              		.fpu softvfp
 4182              	FusionAhrsUpdateNoMagnetometer:
ARM GAS  /tmp/ccEJb272.s 			page 98


 4183              	.LVL434:
 4184              	.LFB25:
 205:Core/Src/Fusion/FusionAhrs.c **** 
 4185              		.loc 1 205 148 is_stmt 1 view -0
 4186              		.cfi_startproc
 4187              		@ args = 16, pretend = 0, frame = 32
 4188              		@ frame_needed = 0, uses_anonymous_args = 0
 205:Core/Src/Fusion/FusionAhrs.c **** 
 4189              		.loc 1 205 148 is_stmt 0 view .LVU1000
 4190 0000 30B5     		push	{r4, r5, lr}
 4191              	.LCFI22:
 4192              		.cfi_def_cfa_offset 12
 4193              		.cfi_offset 4, -12
 4194              		.cfi_offset 5, -8
 4195              		.cfi_offset 14, -4
 4196 0002 91B0     		sub	sp, sp, #68
 4197              	.LCFI23:
 4198              		.cfi_def_cfa_offset 80
 4199 0004 0400     		movs	r4, r0
 4200 0006 0991     		str	r1, [sp, #36]
 4201 0008 0A92     		str	r2, [sp, #40]
 4202 000a 0B93     		str	r3, [sp, #44]
 208:Core/Src/Fusion/FusionAhrs.c **** 
 4203              		.loc 1 208 5 is_stmt 1 view .LVU1001
 208:Core/Src/Fusion/FusionAhrs.c **** 
 4204              		.loc 1 208 54 is_stmt 0 view .LVU1002
 4205 000c 0DAB     		add	r3, sp, #52
 4206 000e 0022     		movs	r2, #0
 4207 0010 0D92     		str	r2, [sp, #52]
 4208 0012 0E92     		str	r2, [sp, #56]
 4209 0014 0F92     		str	r2, [sp, #60]
 208:Core/Src/Fusion/FusionAhrs.c **** 
 4210              		.loc 1 208 5 view .LVU1003
 4211 0016 179A     		ldr	r2, [sp, #92]
 4212 0018 0692     		str	r2, [sp, #24]
 4213 001a 03AA     		add	r2, sp, #12
 4214 001c 23CB     		ldmia	r3!, {r0, r1, r5}
 4215 001e 23C2     		stmia	r2!, {r0, r1, r5}
 4216              	.LVL435:
 208:Core/Src/Fusion/FusionAhrs.c **** 
 4217              		.loc 1 208 5 view .LVU1004
 4218 0020 6B46     		mov	r3, sp
 4219 0022 14AA     		add	r2, sp, #80
 4220              	.LVL436:
 208:Core/Src/Fusion/FusionAhrs.c **** 
 4221              		.loc 1 208 5 view .LVU1005
 4222 0024 23CA     		ldmia	r2!, {r0, r1, r5}
 4223 0026 23C3     		stmia	r3!, {r0, r1, r5}
 4224              	.LVL437:
 208:Core/Src/Fusion/FusionAhrs.c **** 
 4225              		.loc 1 208 5 view .LVU1006
 4226 0028 0999     		ldr	r1, [sp, #36]
 4227 002a 0A9A     		ldr	r2, [sp, #40]
 4228              	.LVL438:
 208:Core/Src/Fusion/FusionAhrs.c **** 
 4229              		.loc 1 208 5 view .LVU1007
 4230 002c 0B9B     		ldr	r3, [sp, #44]
ARM GAS  /tmp/ccEJb272.s 			page 99


 4231 002e 2000     		movs	r0, r4
 4232 0030 FFF7FEFF 		bl	FusionAhrsUpdate
 4233              	.LVL439:
 211:Core/Src/Fusion/FusionAhrs.c ****         FusionAhrsSetHeading(ahrs, 0.0f);
 4234              		.loc 1 211 5 is_stmt 1 view .LVU1008
 211:Core/Src/Fusion/FusionAhrs.c ****         FusionAhrsSetHeading(ahrs, 0.0f);
 4235              		.loc 1 211 14 is_stmt 0 view .LVU1009
 4236 0034 2C23     		movs	r3, #44
 4237 0036 E35C     		ldrb	r3, [r4, r3]
 211:Core/Src/Fusion/FusionAhrs.c ****         FusionAhrsSetHeading(ahrs, 0.0f);
 4238              		.loc 1 211 8 view .LVU1010
 4239 0038 002B     		cmp	r3, #0
 4240 003a 03D0     		beq	.L92
 211:Core/Src/Fusion/FusionAhrs.c ****         FusionAhrsSetHeading(ahrs, 0.0f);
 4241              		.loc 1 211 46 discriminator 1 view .LVU1011
 4242 003c 5823     		movs	r3, #88
 4243 003e E35C     		ldrb	r3, [r4, r3]
 211:Core/Src/Fusion/FusionAhrs.c ****         FusionAhrsSetHeading(ahrs, 0.0f);
 4244              		.loc 1 211 38 discriminator 1 view .LVU1012
 4245 0040 002B     		cmp	r3, #0
 4246 0042 01D0     		beq	.L94
 4247              	.L92:
 214:Core/Src/Fusion/FusionAhrs.c **** 
 4248              		.loc 1 214 1 view .LVU1013
 4249 0044 11B0     		add	sp, sp, #68
 4250              		@ sp needed
 4251              	.LVL440:
 214:Core/Src/Fusion/FusionAhrs.c **** 
 4252              		.loc 1 214 1 view .LVU1014
 4253 0046 30BD     		pop	{r4, r5, pc}
 4254              	.LVL441:
 4255              	.L94:
 212:Core/Src/Fusion/FusionAhrs.c ****     }
 4256              		.loc 1 212 9 is_stmt 1 view .LVU1015
 4257 0048 0021     		movs	r1, #0
 4258 004a 2000     		movs	r0, r4
 4259 004c FFF7FEFF 		bl	FusionAhrsSetHeading
 4260              	.LVL442:
 214:Core/Src/Fusion/FusionAhrs.c **** 
 4261              		.loc 1 214 1 is_stmt 0 view .LVU1016
 4262 0050 F8E7     		b	.L92
 4263              		.cfi_endproc
 4264              	.LFE25:
 4266              		.section	.rodata
 4267              		.align	2
 4268              		.set	.LANCHOR0,. + 0
 4269              	.LC0:
 4270 0000 0000003F 		.word	1056964608
 4271 0004 0000B442 		.word	1119092736
 4272 0008 0000B442 		.word	1119092736
 4273 000c 00000000 		.word	0
 4274              		.text
 4275              	.Letext0:
 4276              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 4277              		.file 4 "Core/Inc/Fusion/FusionAhrs.h"
 4278              		.file 5 "/usr/include/newlib/math.h"
 4279              		.file 6 "Core/Inc/Fusion/FusionCompass.h"
ARM GAS  /tmp/ccEJb272.s 			page 100


 4280              		.file 7 "<built-in>"
ARM GAS  /tmp/ccEJb272.s 			page 101


DEFINED SYMBOLS
                            *ABS*:0000000000000000 FusionAhrs.c
     /tmp/ccEJb272.s:16     .text.FusionAhrsReset:0000000000000000 $t
     /tmp/ccEJb272.s:24     .text.FusionAhrsReset:0000000000000000 FusionAhrsReset
     /tmp/ccEJb272.s:95     .text.FusionAhrsReset:0000000000000044 $d
     /tmp/ccEJb272.s:104    .text.FusionAhrsSetSettings:0000000000000000 $t
     /tmp/ccEJb272.s:111    .text.FusionAhrsSetSettings:0000000000000000 FusionAhrsSetSettings
     /tmp/ccEJb272.s:276    .text.FusionAhrsSetSettings:000000000000009c $d
     /tmp/ccEJb272.s:284    .text.FusionAhrsInitialise:0000000000000000 $t
     /tmp/ccEJb272.s:291    .text.FusionAhrsInitialise:0000000000000000 FusionAhrsInitialise
     /tmp/ccEJb272.s:338    .text.FusionAhrsInitialise:0000000000000024 $d
     /tmp/ccEJb272.s:343    .text.FusionAhrsGetQuaternion:0000000000000000 $t
     /tmp/ccEJb272.s:350    .text.FusionAhrsGetQuaternion:0000000000000000 FusionAhrsGetQuaternion
     /tmp/ccEJb272.s:384    .text.FusionAhrsGetLinearAcceleration:0000000000000000 $t
     /tmp/ccEJb272.s:391    .text.FusionAhrsGetLinearAcceleration:0000000000000000 FusionAhrsGetLinearAcceleration
     /tmp/ccEJb272.s:583    .text.FusionAhrsGetEarthAcceleration:0000000000000000 $t
     /tmp/ccEJb272.s:590    .text.FusionAhrsGetEarthAcceleration:0000000000000000 FusionAhrsGetEarthAcceleration
     /tmp/ccEJb272.s:909    .text.FusionAhrsGetInternalStates:0000000000000000 $t
     /tmp/ccEJb272.s:916    .text.FusionAhrsGetInternalStates:0000000000000000 FusionAhrsGetInternalStates
     /tmp/ccEJb272.s:1375   .text.FusionAhrsGetInternalStates:00000000000001cc $d
     /tmp/ccEJb272.s:1383   .text.FusionAhrsGetFlags:0000000000000000 $t
     /tmp/ccEJb272.s:1390   .text.FusionAhrsGetFlags:0000000000000000 FusionAhrsGetFlags
     /tmp/ccEJb272.s:1443   .text.FusionAhrsSetHeading:0000000000000000 $t
     /tmp/ccEJb272.s:1450   .text.FusionAhrsSetHeading:0000000000000000 FusionAhrsSetHeading
     /tmp/ccEJb272.s:1825   .text.FusionAhrsSetHeading:00000000000001f0 $d
     /tmp/ccEJb272.s:1831   .text.FusionAhrsUpdate:0000000000000000 $t
     /tmp/ccEJb272.s:1838   .text.FusionAhrsUpdate:0000000000000000 FusionAhrsUpdate
     /tmp/ccEJb272.s:2605   .text.FusionAhrsUpdate:0000000000000394 $d
     /tmp/ccEJb272.s:2612   .text.FusionAhrsUpdate:00000000000003a0 $t
     /tmp/ccEJb272.s:3714   .text.FusionAhrsUpdate:0000000000000910 $d
     /tmp/ccEJb272.s:3720   .text.FusionAhrsUpdate:0000000000000920 $t
     /tmp/ccEJb272.s:3979   .text.FusionAhrsUpdate:0000000000000a60 $d
     /tmp/ccEJb272.s:3987   .text.FusionAhrsUpdateExternalHeading:0000000000000000 $t
     /tmp/ccEJb272.s:3994   .text.FusionAhrsUpdateExternalHeading:0000000000000000 FusionAhrsUpdateExternalHeading
     /tmp/ccEJb272.s:4170   .text.FusionAhrsUpdateExternalHeading:00000000000000c4 $d
     /tmp/ccEJb272.s:4175   .text.FusionAhrsUpdateNoMagnetometer:0000000000000000 $t
     /tmp/ccEJb272.s:4182   .text.FusionAhrsUpdateNoMagnetometer:0000000000000000 FusionAhrsUpdateNoMagnetometer
     /tmp/ccEJb272.s:4267   .rodata:0000000000000000 $d

UNDEFINED SYMBOLS
__aeabi_fcmpeq
__aeabi_fmul
__aeabi_fsub
__aeabi_fdiv
sinf
powf
__aeabi_fadd
__aeabi_fcmple
__aeabi_fcmpge
__aeabi_ui2f
memcpy
sqrtf
asinf
atan2f
cosf
__aeabi_fcmplt
FusionCompassCalculateHeading
ARM GAS  /tmp/ccEJb272.s 			page 102


