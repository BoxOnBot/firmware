ARM GAS  /tmp/ccmBhxg1.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"syscalls.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.initialise_monitor_handles,"ax",%progbits
  16              		.align	1
  17              		.global	initialise_monitor_handles
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	initialise_monitor_handles:
  25              	.LFB25:
  26              		.file 1 "Core/Src/syscalls.c"
   1:Core/Src/syscalls.c **** /**
   2:Core/Src/syscalls.c **** *****************************************************************************
   3:Core/Src/syscalls.c **** **
   4:Core/Src/syscalls.c **** **  File        : syscalls.c
   5:Core/Src/syscalls.c **** **
   6:Core/Src/syscalls.c **** **  Author        : Auto-generated by System workbench for STM32
   7:Core/Src/syscalls.c **** **
   8:Core/Src/syscalls.c **** **  Abstract    : System Workbench Minimal System calls file
   9:Core/Src/syscalls.c **** **
  10:Core/Src/syscalls.c **** **                   For more information about which c-functions
  11:Core/Src/syscalls.c **** **                need which of these lowlevel functions
  12:Core/Src/syscalls.c **** **                please consult the Newlib libc-manual
  13:Core/Src/syscalls.c **** **
  14:Core/Src/syscalls.c **** **  Target      : STMicroelectronics STM32
  15:Core/Src/syscalls.c **** **
  16:Core/Src/syscalls.c **** **  Distribution: The file is distributed “as is,” without any warranty
  17:Core/Src/syscalls.c **** **                of any kind.
  18:Core/Src/syscalls.c **** **
  19:Core/Src/syscalls.c **** *****************************************************************************
  20:Core/Src/syscalls.c **** ** @attention
  21:Core/Src/syscalls.c **** **
  22:Core/Src/syscalls.c **** ** <h2><center>&copy; COPYRIGHT(c) 2019 STMicroelectronics</center></h2>
  23:Core/Src/syscalls.c **** **
  24:Core/Src/syscalls.c **** ** Redistribution and use in source and binary forms, with or without modification,
  25:Core/Src/syscalls.c **** ** are permitted provided that the following conditions are met:
  26:Core/Src/syscalls.c **** **   1. Redistributions of source code must retain the above copyright notice,
  27:Core/Src/syscalls.c **** **      this list of conditions and the following disclaimer.
  28:Core/Src/syscalls.c **** **   2. Redistributions in binary form must reproduce the above copyright notice,
  29:Core/Src/syscalls.c **** **      this list of conditions and the following disclaimer in the documentation
  30:Core/Src/syscalls.c **** **      and/or other materials provided with the distribution.
  31:Core/Src/syscalls.c **** **   3. Neither the name of STMicroelectronics nor the names of its contributors
  32:Core/Src/syscalls.c **** **      may be used to endorse or promote products derived from this software
ARM GAS  /tmp/ccmBhxg1.s 			page 2


  33:Core/Src/syscalls.c **** **      without specific prior written permission.
  34:Core/Src/syscalls.c **** **
  35:Core/Src/syscalls.c **** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  36:Core/Src/syscalls.c **** ** AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  37:Core/Src/syscalls.c **** ** IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  38:Core/Src/syscalls.c **** ** DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  39:Core/Src/syscalls.c **** ** FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  40:Core/Src/syscalls.c **** ** DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  41:Core/Src/syscalls.c **** ** SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  42:Core/Src/syscalls.c **** ** CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  43:Core/Src/syscalls.c **** ** OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  44:Core/Src/syscalls.c **** ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:Core/Src/syscalls.c **** **
  46:Core/Src/syscalls.c **** *****************************************************************************
  47:Core/Src/syscalls.c **** */
  48:Core/Src/syscalls.c **** 
  49:Core/Src/syscalls.c **** // the code was modified by Fynn Boyer
  50:Core/Src/syscalls.c **** 
  51:Core/Src/syscalls.c **** /* Includes */
  52:Core/Src/syscalls.c **** #include <sys/stat.h>
  53:Core/Src/syscalls.c **** #include <stdlib.h>
  54:Core/Src/syscalls.c **** #include <errno.h>
  55:Core/Src/syscalls.c **** #include <stdio.h>
  56:Core/Src/syscalls.c **** #include <signal.h>
  57:Core/Src/syscalls.c **** #include <time.h>
  58:Core/Src/syscalls.c **** #include <sys/time.h>
  59:Core/Src/syscalls.c **** #include <sys/times.h>
  60:Core/Src/syscalls.c **** 
  61:Core/Src/syscalls.c **** 
  62:Core/Src/syscalls.c **** /* Variables */
  63:Core/Src/syscalls.c **** //#undef errno
  64:Core/Src/syscalls.c **** extern int errno;
  65:Core/Src/syscalls.c **** extern int __io_putchar(int ch) __attribute__((weak));
  66:Core/Src/syscalls.c **** extern int __io_getchar(void) __attribute__((weak));
  67:Core/Src/syscalls.c **** 
  68:Core/Src/syscalls.c **** register char * stack_ptr asm("sp");
  69:Core/Src/syscalls.c **** 
  70:Core/Src/syscalls.c **** char *__env[1] = { 0 };
  71:Core/Src/syscalls.c **** char **environ = __env;
  72:Core/Src/syscalls.c **** 
  73:Core/Src/syscalls.c **** extern char _estack;  // see ld file
  74:Core/Src/syscalls.c **** extern char _Min_Stack_Size;  // see ld file
  75:Core/Src/syscalls.c **** 
  76:Core/Src/syscalls.c **** /* Functions */
  77:Core/Src/syscalls.c **** void initialise_monitor_handles()
  78:Core/Src/syscalls.c **** {
  27              		.loc 1 78 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  79:Core/Src/syscalls.c **** }
  32              		.loc 1 79 1 view .LVU1
  33              		@ sp needed
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE25:
ARM GAS  /tmp/ccmBhxg1.s 			page 3


  38              		.section	.text._getpid,"ax",%progbits
  39              		.align	1
  40              		.global	_getpid
  41              		.syntax unified
  42              		.code	16
  43              		.thumb_func
  44              		.fpu softvfp
  46              	_getpid:
  47              	.LFB26:
  80:Core/Src/syscalls.c **** 
  81:Core/Src/syscalls.c **** int _getpid(void)
  82:Core/Src/syscalls.c **** {
  48              		.loc 1 82 1 view -0
  49              		.cfi_startproc
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  83:Core/Src/syscalls.c ****     return 1;
  53              		.loc 1 83 5 view .LVU3
  84:Core/Src/syscalls.c **** }
  54              		.loc 1 84 1 is_stmt 0 view .LVU4
  55 0000 0120     		movs	r0, #1
  56              		@ sp needed
  57 0002 7047     		bx	lr
  58              		.cfi_endproc
  59              	.LFE26:
  61              		.section	.text._kill,"ax",%progbits
  62              		.align	1
  63              		.global	_kill
  64              		.syntax unified
  65              		.code	16
  66              		.thumb_func
  67              		.fpu softvfp
  69              	_kill:
  70              	.LVL0:
  71              	.LFB27:
  85:Core/Src/syscalls.c **** 
  86:Core/Src/syscalls.c **** int _kill(int pid, int sig)
  87:Core/Src/syscalls.c **** {
  72              		.loc 1 87 1 is_stmt 1 view -0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		.loc 1 87 1 is_stmt 0 view .LVU6
  77 0000 10B5     		push	{r4, lr}
  78              	.LCFI0:
  79              		.cfi_def_cfa_offset 8
  80              		.cfi_offset 4, -8
  81              		.cfi_offset 14, -4
  88:Core/Src/syscalls.c ****     errno = EINVAL;
  82              		.loc 1 88 5 is_stmt 1 view .LVU7
  83 0002 FFF7FEFF 		bl	__errno
  84              	.LVL1:
  85              		.loc 1 88 11 is_stmt 0 view .LVU8
  86 0006 1623     		movs	r3, #22
  87 0008 0360     		str	r3, [r0]
  89:Core/Src/syscalls.c ****     return -1;
ARM GAS  /tmp/ccmBhxg1.s 			page 4


  88              		.loc 1 89 5 is_stmt 1 view .LVU9
  89              		.loc 1 89 12 is_stmt 0 view .LVU10
  90 000a 0120     		movs	r0, #1
  90:Core/Src/syscalls.c **** }
  91              		.loc 1 90 1 view .LVU11
  92 000c 4042     		rsbs	r0, r0, #0
  93              		@ sp needed
  94 000e 10BD     		pop	{r4, pc}
  95              		.cfi_endproc
  96              	.LFE27:
  98              		.section	.text._exit,"ax",%progbits
  99              		.align	1
 100              		.global	_exit
 101              		.syntax unified
 102              		.code	16
 103              		.thumb_func
 104              		.fpu softvfp
 106              	_exit:
 107              	.LVL2:
 108              	.LFB28:
  91:Core/Src/syscalls.c **** 
  92:Core/Src/syscalls.c **** void _exit (int status)
  93:Core/Src/syscalls.c **** {
 109              		.loc 1 93 1 is_stmt 1 view -0
 110              		.cfi_startproc
 111              		@ Volatile: function does not return.
 112              		@ args = 0, pretend = 0, frame = 0
 113              		@ frame_needed = 0, uses_anonymous_args = 0
 114              		.loc 1 93 1 is_stmt 0 view .LVU13
 115 0000 10B5     		push	{r4, lr}
 116              	.LCFI1:
 117              		.cfi_def_cfa_offset 8
 118              		.cfi_offset 4, -8
 119              		.cfi_offset 14, -4
  94:Core/Src/syscalls.c ****     _kill(status, -1);
 120              		.loc 1 94 5 is_stmt 1 view .LVU14
 121 0002 0121     		movs	r1, #1
 122 0004 4942     		rsbs	r1, r1, #0
 123 0006 FFF7FEFF 		bl	_kill
 124              	.LVL3:
 125              	.L5:
  95:Core/Src/syscalls.c ****     while (1) {}        /* Make sure we hang here */
 126              		.loc 1 95 5 discriminator 1 view .LVU15
 127              		.loc 1 95 16 discriminator 1 view .LVU16
 128              		.loc 1 95 11 discriminator 1 view .LVU17
 129 000a FEE7     		b	.L5
 130              		.cfi_endproc
 131              	.LFE28:
 133              		.section	.text._read,"ax",%progbits
 134              		.align	1
 135              		.weak	_read
 136              		.syntax unified
 137              		.code	16
 138              		.thumb_func
 139              		.fpu softvfp
 141              	_read:
 142              	.LVL4:
ARM GAS  /tmp/ccmBhxg1.s 			page 5


 143              	.LFB29:
  96:Core/Src/syscalls.c **** }
  97:Core/Src/syscalls.c **** 
  98:Core/Src/syscalls.c **** __attribute__((weak)) int _read(int file, char *ptr, int len)
  99:Core/Src/syscalls.c **** {
 144              		.loc 1 99 1 view -0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148              		.loc 1 99 1 is_stmt 0 view .LVU19
 149 0000 70B5     		push	{r4, r5, r6, lr}
 150              	.LCFI2:
 151              		.cfi_def_cfa_offset 16
 152              		.cfi_offset 4, -16
 153              		.cfi_offset 5, -12
 154              		.cfi_offset 6, -8
 155              		.cfi_offset 14, -4
 156 0002 0C00     		movs	r4, r1
 157 0004 1600     		movs	r6, r2
 100:Core/Src/syscalls.c ****     int DataIdx;
 158              		.loc 1 100 5 is_stmt 1 view .LVU20
 101:Core/Src/syscalls.c **** 
 102:Core/Src/syscalls.c ****     for (DataIdx = 0; DataIdx < len; DataIdx++)
 159              		.loc 1 102 5 view .LVU21
 160              	.LVL5:
 161              		.loc 1 102 18 is_stmt 0 view .LVU22
 162 0006 0025     		movs	r5, #0
 163              		.loc 1 102 5 view .LVU23
 164 0008 04E0     		b	.L7
 165              	.LVL6:
 166              	.L8:
 103:Core/Src/syscalls.c ****     {
 104:Core/Src/syscalls.c ****         *ptr++ = __io_getchar();
 167              		.loc 1 104 9 is_stmt 1 discriminator 3 view .LVU24
 168              		.loc 1 104 18 is_stmt 0 discriminator 3 view .LVU25
 169 000a FFF7FEFF 		bl	__io_getchar
 170              	.LVL7:
 171              		.loc 1 104 16 discriminator 3 view .LVU26
 172 000e 2070     		strb	r0, [r4]
 102:Core/Src/syscalls.c ****     {
 173              		.loc 1 102 38 is_stmt 1 discriminator 3 view .LVU27
 102:Core/Src/syscalls.c ****     {
 174              		.loc 1 102 45 is_stmt 0 discriminator 3 view .LVU28
 175 0010 0135     		adds	r5, r5, #1
 176              	.LVL8:
 177              		.loc 1 104 13 discriminator 3 view .LVU29
 178 0012 0134     		adds	r4, r4, #1
 179              	.LVL9:
 180              	.L7:
 102:Core/Src/syscalls.c ****     {
 181              		.loc 1 102 23 is_stmt 1 discriminator 1 view .LVU30
 102:Core/Src/syscalls.c ****     {
 182              		.loc 1 102 5 is_stmt 0 discriminator 1 view .LVU31
 183 0014 B542     		cmp	r5, r6
 184 0016 F8DB     		blt	.L8
 105:Core/Src/syscalls.c ****     }
 106:Core/Src/syscalls.c **** 
ARM GAS  /tmp/ccmBhxg1.s 			page 6


 107:Core/Src/syscalls.c **** return len;
 185              		.loc 1 107 1 is_stmt 1 view .LVU32
 108:Core/Src/syscalls.c **** }
 186              		.loc 1 108 1 is_stmt 0 view .LVU33
 187 0018 3000     		movs	r0, r6
 188              		@ sp needed
 189              	.LVL10:
 190              	.LVL11:
 191              	.LVL12:
 192              		.loc 1 108 1 view .LVU34
 193 001a 70BD     		pop	{r4, r5, r6, pc}
 194              		.cfi_endproc
 195              	.LFE29:
 197              		.section	.text._write,"ax",%progbits
 198              		.align	1
 199              		.weak	_write
 200              		.syntax unified
 201              		.code	16
 202              		.thumb_func
 203              		.fpu softvfp
 205              	_write:
 206              	.LVL13:
 207              	.LFB30:
 109:Core/Src/syscalls.c **** 
 110:Core/Src/syscalls.c **** __attribute__((weak)) int _write(int file, char *ptr, int len)
 111:Core/Src/syscalls.c **** {
 208              		.loc 1 111 1 is_stmt 1 view -0
 209              		.cfi_startproc
 210              		@ args = 0, pretend = 0, frame = 0
 211              		@ frame_needed = 0, uses_anonymous_args = 0
 212              		.loc 1 111 1 is_stmt 0 view .LVU36
 213 0000 70B5     		push	{r4, r5, r6, lr}
 214              	.LCFI3:
 215              		.cfi_def_cfa_offset 16
 216              		.cfi_offset 4, -16
 217              		.cfi_offset 5, -12
 218              		.cfi_offset 6, -8
 219              		.cfi_offset 14, -4
 220 0002 1600     		movs	r6, r2
 112:Core/Src/syscalls.c ****     int DataIdx;
 221              		.loc 1 112 5 is_stmt 1 view .LVU37
 113:Core/Src/syscalls.c **** 
 114:Core/Src/syscalls.c ****     for (DataIdx = 0; DataIdx < len; DataIdx++)
 222              		.loc 1 114 5 view .LVU38
 223              	.LVL14:
 224              		.loc 1 114 18 is_stmt 0 view .LVU39
 225 0004 0024     		movs	r4, #0
 226              		.loc 1 114 5 view .LVU40
 227 0006 05E0     		b	.L10
 228              	.LVL15:
 229              	.L11:
 115:Core/Src/syscalls.c ****     {
 116:Core/Src/syscalls.c ****         __io_putchar(*ptr++);
 230              		.loc 1 116 9 is_stmt 1 discriminator 3 view .LVU41
 231              		.loc 1 116 26 is_stmt 0 discriminator 3 view .LVU42
 232 0008 4D1C     		adds	r5, r1, #1
 233              	.LVL16:
ARM GAS  /tmp/ccmBhxg1.s 			page 7


 234              		.loc 1 116 22 discriminator 3 view .LVU43
 235 000a 0878     		ldrb	r0, [r1]
 236              		.loc 1 116 9 discriminator 3 view .LVU44
 237 000c FFF7FEFF 		bl	__io_putchar
 238              	.LVL17:
 114:Core/Src/syscalls.c ****     {
 239              		.loc 1 114 38 is_stmt 1 discriminator 3 view .LVU45
 114:Core/Src/syscalls.c ****     {
 240              		.loc 1 114 45 is_stmt 0 discriminator 3 view .LVU46
 241 0010 0134     		adds	r4, r4, #1
 242              	.LVL18:
 243              		.loc 1 116 26 discriminator 3 view .LVU47
 244 0012 2900     		movs	r1, r5
 245              	.LVL19:
 246              	.L10:
 114:Core/Src/syscalls.c ****     {
 247              		.loc 1 114 23 is_stmt 1 discriminator 1 view .LVU48
 114:Core/Src/syscalls.c ****     {
 248              		.loc 1 114 5 is_stmt 0 discriminator 1 view .LVU49
 249 0014 B442     		cmp	r4, r6
 250 0016 F7DB     		blt	.L11
 117:Core/Src/syscalls.c ****     }
 118:Core/Src/syscalls.c ****     return len;
 251              		.loc 1 118 5 is_stmt 1 view .LVU50
 119:Core/Src/syscalls.c **** }
 252              		.loc 1 119 1 is_stmt 0 view .LVU51
 253 0018 3000     		movs	r0, r6
 254              		@ sp needed
 255              	.LVL20:
 256              	.LVL21:
 257              		.loc 1 119 1 view .LVU52
 258 001a 70BD     		pop	{r4, r5, r6, pc}
 259              		.cfi_endproc
 260              	.LFE30:
 262              		.section	.text._sbrk,"ax",%progbits
 263              		.align	1
 264              		.global	_sbrk
 265              		.syntax unified
 266              		.code	16
 267              		.thumb_func
 268              		.fpu softvfp
 270              	_sbrk:
 271              	.LVL22:
 272              	.LFB31:
 120:Core/Src/syscalls.c **** 
 121:Core/Src/syscalls.c **** caddr_t _sbrk(int incr) {
 273              		.loc 1 121 25 is_stmt 1 view -0
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 0
 276              		@ frame_needed = 0, uses_anonymous_args = 0
 277              		.loc 1 121 25 is_stmt 0 view .LVU54
 278 0000 10B5     		push	{r4, lr}
 279              	.LCFI4:
 280              		.cfi_def_cfa_offset 8
 281              		.cfi_offset 4, -8
 282              		.cfi_offset 14, -4
 283 0002 0300     		movs	r3, r0
ARM GAS  /tmp/ccmBhxg1.s 			page 8


 122:Core/Src/syscalls.c ****     extern char __heap_start__ asm("end");  // Defined by the linker.
 284              		.loc 1 122 5 is_stmt 1 view .LVU55
 123:Core/Src/syscalls.c ****     static char *heap_end;
 285              		.loc 1 123 5 view .LVU56
 124:Core/Src/syscalls.c ****     char *prev_heap_end;
 286              		.loc 1 124 5 view .LVU57
 125:Core/Src/syscalls.c **** 
 126:Core/Src/syscalls.c ****     if (heap_end == NULL) heap_end = &__heap_start__;
 287              		.loc 1 126 5 view .LVU58
 288              		.loc 1 126 18 is_stmt 0 view .LVU59
 289 0004 0D4A     		ldr	r2, .L18
 290 0006 1268     		ldr	r2, [r2]
 291              		.loc 1 126 8 view .LVU60
 292 0008 002A     		cmp	r2, #0
 293 000a 0BD0     		beq	.L16
 294              	.L13:
 127:Core/Src/syscalls.c **** 
 128:Core/Src/syscalls.c ****     prev_heap_end = heap_end;
 295              		.loc 1 128 5 is_stmt 1 view .LVU61
 296              		.loc 1 128 19 is_stmt 0 view .LVU62
 297 000c 0B4A     		ldr	r2, .L18
 298 000e 1068     		ldr	r0, [r2]
 299              	.LVL23:
 129:Core/Src/syscalls.c **** 
 130:Core/Src/syscalls.c ****     if (heap_end + incr > &_estack - _Min_Stack_Size) {
 300              		.loc 1 130 5 is_stmt 1 view .LVU63
 301              		.loc 1 130 18 is_stmt 0 view .LVU64
 302 0010 C318     		adds	r3, r0, r3
 303              	.LVL24:
 304              		.loc 1 130 36 view .LVU65
 305 0012 0B4A     		ldr	r2, .L18+4
 306 0014 1178     		ldrb	r1, [r2]
 307 0016 0B4A     		ldr	r2, .L18+8
 308 0018 521A     		subs	r2, r2, r1
 309              		.loc 1 130 8 view .LVU66
 310 001a 9342     		cmp	r3, r2
 311 001c 06D8     		bhi	.L17
 131:Core/Src/syscalls.c ****             __asm("BKPT #0\n");
 132:Core/Src/syscalls.c ****         errno = ENOMEM;
 133:Core/Src/syscalls.c ****         return (caddr_t)-1;
 134:Core/Src/syscalls.c **** 
 135:Core/Src/syscalls.c ****     }
 136:Core/Src/syscalls.c **** 
 137:Core/Src/syscalls.c ****     heap_end += incr;
 312              		.loc 1 137 5 is_stmt 1 view .LVU67
 313              		.loc 1 137 14 is_stmt 0 view .LVU68
 314 001e 074A     		ldr	r2, .L18
 315 0020 1360     		str	r3, [r2]
 138:Core/Src/syscalls.c ****     return (caddr_t)prev_heap_end;
 316              		.loc 1 138 5 is_stmt 1 view .LVU69
 317              	.LVL25:
 318              	.L12:
 139:Core/Src/syscalls.c **** 
 140:Core/Src/syscalls.c **** }
 319              		.loc 1 140 1 is_stmt 0 view .LVU70
 320              		@ sp needed
 321 0022 10BD     		pop	{r4, pc}
ARM GAS  /tmp/ccmBhxg1.s 			page 9


 322              	.LVL26:
 323              	.L16:
 126:Core/Src/syscalls.c **** 
 324              		.loc 1 126 27 is_stmt 1 discriminator 1 view .LVU71
 126:Core/Src/syscalls.c **** 
 325              		.loc 1 126 36 is_stmt 0 discriminator 1 view .LVU72
 326 0024 054A     		ldr	r2, .L18
 327 0026 0849     		ldr	r1, .L18+12
 328 0028 1160     		str	r1, [r2]
 329 002a EFE7     		b	.L13
 330              	.LVL27:
 331              	.L17:
 131:Core/Src/syscalls.c ****         errno = ENOMEM;
 332              		.loc 1 131 13 is_stmt 1 view .LVU73
 333              		.syntax divided
 334              	@ 131 "Core/Src/syscalls.c" 1
 335 002c 00BE     		BKPT #0
 336              	
 337              	@ 0 "" 2
 132:Core/Src/syscalls.c ****         return (caddr_t)-1;
 338              		.loc 1 132 9 view .LVU74
 339              		.thumb
 340              		.syntax unified
 341 002e FFF7FEFF 		bl	__errno
 342              	.LVL28:
 132:Core/Src/syscalls.c ****         return (caddr_t)-1;
 343              		.loc 1 132 15 is_stmt 0 view .LVU75
 344 0032 0C23     		movs	r3, #12
 345 0034 0360     		str	r3, [r0]
 133:Core/Src/syscalls.c **** 
 346              		.loc 1 133 9 is_stmt 1 view .LVU76
 133:Core/Src/syscalls.c **** 
 347              		.loc 1 133 16 is_stmt 0 view .LVU77
 348 0036 0120     		movs	r0, #1
 349 0038 4042     		rsbs	r0, r0, #0
 350 003a F2E7     		b	.L12
 351              	.L19:
 352              		.align	2
 353              	.L18:
 354 003c 00000000 		.word	.LANCHOR0
 355 0040 00000000 		.word	_Min_Stack_Size
 356 0044 00000000 		.word	_estack
 357 0048 00000000 		.word	end
 358              		.cfi_endproc
 359              	.LFE31:
 361              		.section	.text._close,"ax",%progbits
 362              		.align	1
 363              		.global	_close
 364              		.syntax unified
 365              		.code	16
 366              		.thumb_func
 367              		.fpu softvfp
 369              	_close:
 370              	.LVL29:
 371              	.LFB32:
 141:Core/Src/syscalls.c **** 
 142:Core/Src/syscalls.c **** int _close(int file)
ARM GAS  /tmp/ccmBhxg1.s 			page 10


 143:Core/Src/syscalls.c **** {
 372              		.loc 1 143 1 is_stmt 1 view -0
 373              		.cfi_startproc
 374              		@ args = 0, pretend = 0, frame = 0
 375              		@ frame_needed = 0, uses_anonymous_args = 0
 376              		@ link register save eliminated.
 144:Core/Src/syscalls.c ****     return -1;
 377              		.loc 1 144 5 view .LVU79
 378              		.loc 1 144 12 is_stmt 0 view .LVU80
 379 0000 0120     		movs	r0, #1
 380              	.LVL30:
 145:Core/Src/syscalls.c **** }
 381              		.loc 1 145 1 view .LVU81
 382 0002 4042     		rsbs	r0, r0, #0
 383              		@ sp needed
 384 0004 7047     		bx	lr
 385              		.cfi_endproc
 386              	.LFE32:
 388              		.section	.text._fstat,"ax",%progbits
 389              		.align	1
 390              		.global	_fstat
 391              		.syntax unified
 392              		.code	16
 393              		.thumb_func
 394              		.fpu softvfp
 396              	_fstat:
 397              	.LVL31:
 398              	.LFB33:
 146:Core/Src/syscalls.c **** 
 147:Core/Src/syscalls.c **** 
 148:Core/Src/syscalls.c **** int _fstat(int file, struct stat *st)
 149:Core/Src/syscalls.c **** {
 399              		.loc 1 149 1 is_stmt 1 view -0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403              		@ link register save eliminated.
 150:Core/Src/syscalls.c ****     st->st_mode = S_IFCHR;
 404              		.loc 1 150 5 view .LVU83
 405              		.loc 1 150 17 is_stmt 0 view .LVU84
 406 0000 8023     		movs	r3, #128
 407 0002 9B01     		lsls	r3, r3, #6
 408 0004 4B60     		str	r3, [r1, #4]
 151:Core/Src/syscalls.c ****     return 0;
 409              		.loc 1 151 5 is_stmt 1 view .LVU85
 152:Core/Src/syscalls.c **** }
 410              		.loc 1 152 1 is_stmt 0 view .LVU86
 411 0006 0020     		movs	r0, #0
 412              	.LVL32:
 413              		.loc 1 152 1 view .LVU87
 414              		@ sp needed
 415 0008 7047     		bx	lr
 416              		.cfi_endproc
 417              	.LFE33:
 419              		.section	.text._isatty,"ax",%progbits
 420              		.align	1
 421              		.global	_isatty
ARM GAS  /tmp/ccmBhxg1.s 			page 11


 422              		.syntax unified
 423              		.code	16
 424              		.thumb_func
 425              		.fpu softvfp
 427              	_isatty:
 428              	.LVL33:
 429              	.LFB34:
 153:Core/Src/syscalls.c **** 
 154:Core/Src/syscalls.c **** int _isatty(int file)
 155:Core/Src/syscalls.c **** {
 430              		.loc 1 155 1 is_stmt 1 view -0
 431              		.cfi_startproc
 432              		@ args = 0, pretend = 0, frame = 0
 433              		@ frame_needed = 0, uses_anonymous_args = 0
 434              		@ link register save eliminated.
 156:Core/Src/syscalls.c ****     return 1;
 435              		.loc 1 156 5 view .LVU89
 157:Core/Src/syscalls.c **** }
 436              		.loc 1 157 1 is_stmt 0 view .LVU90
 437 0000 0120     		movs	r0, #1
 438              	.LVL34:
 439              		.loc 1 157 1 view .LVU91
 440              		@ sp needed
 441 0002 7047     		bx	lr
 442              		.cfi_endproc
 443              	.LFE34:
 445              		.section	.text._lseek,"ax",%progbits
 446              		.align	1
 447              		.global	_lseek
 448              		.syntax unified
 449              		.code	16
 450              		.thumb_func
 451              		.fpu softvfp
 453              	_lseek:
 454              	.LVL35:
 455              	.LFB35:
 158:Core/Src/syscalls.c **** 
 159:Core/Src/syscalls.c **** int _lseek(int file, int ptr, int dir)
 160:Core/Src/syscalls.c **** {
 456              		.loc 1 160 1 is_stmt 1 view -0
 457              		.cfi_startproc
 458              		@ args = 0, pretend = 0, frame = 0
 459              		@ frame_needed = 0, uses_anonymous_args = 0
 460              		@ link register save eliminated.
 161:Core/Src/syscalls.c ****     return 0;
 461              		.loc 1 161 5 view .LVU93
 162:Core/Src/syscalls.c **** }
 462              		.loc 1 162 1 is_stmt 0 view .LVU94
 463 0000 0020     		movs	r0, #0
 464              	.LVL36:
 465              		.loc 1 162 1 view .LVU95
 466              		@ sp needed
 467 0002 7047     		bx	lr
 468              		.cfi_endproc
 469              	.LFE35:
 471              		.section	.text._open,"ax",%progbits
 472              		.align	1
ARM GAS  /tmp/ccmBhxg1.s 			page 12


 473              		.global	_open
 474              		.syntax unified
 475              		.code	16
 476              		.thumb_func
 477              		.fpu softvfp
 479              	_open:
 480              	.LVL37:
 481              	.LFB36:
 163:Core/Src/syscalls.c **** 
 164:Core/Src/syscalls.c **** int _open(char *path, int flags, ...)
 165:Core/Src/syscalls.c **** {
 482              		.loc 1 165 1 is_stmt 1 view -0
 483              		.cfi_startproc
 484              		@ args = 4, pretend = 12, frame = 0
 485              		@ frame_needed = 0, uses_anonymous_args = 1
 486              		@ link register save eliminated.
 487              		.loc 1 165 1 is_stmt 0 view .LVU97
 488 0000 0EB4     		push	{r1, r2, r3}
 489              	.LCFI5:
 490              		.cfi_def_cfa_offset 12
 166:Core/Src/syscalls.c ****     /* Pretend like we always fail */
 167:Core/Src/syscalls.c ****     return -1;
 491              		.loc 1 167 5 is_stmt 1 view .LVU98
 492              		.loc 1 167 12 is_stmt 0 view .LVU99
 493 0002 0120     		movs	r0, #1
 494              	.LVL38:
 168:Core/Src/syscalls.c **** }
 495              		.loc 1 168 1 view .LVU100
 496 0004 4042     		rsbs	r0, r0, #0
 497              		@ sp needed
 498 0006 03B0     		add	sp, sp, #12
 499 0008 7047     		bx	lr
 500              		.cfi_endproc
 501              	.LFE36:
 503              		.section	.text._wait,"ax",%progbits
 504              		.align	1
 505              		.global	_wait
 506              		.syntax unified
 507              		.code	16
 508              		.thumb_func
 509              		.fpu softvfp
 511              	_wait:
 512              	.LVL39:
 513              	.LFB37:
 169:Core/Src/syscalls.c **** 
 170:Core/Src/syscalls.c **** int _wait(int *status)
 171:Core/Src/syscalls.c **** {
 514              		.loc 1 171 1 is_stmt 1 view -0
 515              		.cfi_startproc
 516              		@ args = 0, pretend = 0, frame = 0
 517              		@ frame_needed = 0, uses_anonymous_args = 0
 518              		.loc 1 171 1 is_stmt 0 view .LVU102
 519 0000 10B5     		push	{r4, lr}
 520              	.LCFI6:
 521              		.cfi_def_cfa_offset 8
 522              		.cfi_offset 4, -8
 523              		.cfi_offset 14, -4
ARM GAS  /tmp/ccmBhxg1.s 			page 13


 172:Core/Src/syscalls.c ****     errno = ECHILD;
 524              		.loc 1 172 5 is_stmt 1 view .LVU103
 525 0002 FFF7FEFF 		bl	__errno
 526              	.LVL40:
 527              		.loc 1 172 11 is_stmt 0 view .LVU104
 528 0006 0A23     		movs	r3, #10
 529 0008 0360     		str	r3, [r0]
 173:Core/Src/syscalls.c ****     return -1;
 530              		.loc 1 173 5 is_stmt 1 view .LVU105
 531              		.loc 1 173 12 is_stmt 0 view .LVU106
 532 000a 0120     		movs	r0, #1
 174:Core/Src/syscalls.c **** }
 533              		.loc 1 174 1 view .LVU107
 534 000c 4042     		rsbs	r0, r0, #0
 535              		@ sp needed
 536 000e 10BD     		pop	{r4, pc}
 537              		.cfi_endproc
 538              	.LFE37:
 540              		.section	.text._unlink,"ax",%progbits
 541              		.align	1
 542              		.global	_unlink
 543              		.syntax unified
 544              		.code	16
 545              		.thumb_func
 546              		.fpu softvfp
 548              	_unlink:
 549              	.LVL41:
 550              	.LFB38:
 175:Core/Src/syscalls.c **** 
 176:Core/Src/syscalls.c **** int _unlink(char *name)
 177:Core/Src/syscalls.c **** {
 551              		.loc 1 177 1 is_stmt 1 view -0
 552              		.cfi_startproc
 553              		@ args = 0, pretend = 0, frame = 0
 554              		@ frame_needed = 0, uses_anonymous_args = 0
 555              		.loc 1 177 1 is_stmt 0 view .LVU109
 556 0000 10B5     		push	{r4, lr}
 557              	.LCFI7:
 558              		.cfi_def_cfa_offset 8
 559              		.cfi_offset 4, -8
 560              		.cfi_offset 14, -4
 178:Core/Src/syscalls.c ****     errno = ENOENT;
 561              		.loc 1 178 5 is_stmt 1 view .LVU110
 562 0002 FFF7FEFF 		bl	__errno
 563              	.LVL42:
 564              		.loc 1 178 11 is_stmt 0 view .LVU111
 565 0006 0223     		movs	r3, #2
 566 0008 0360     		str	r3, [r0]
 179:Core/Src/syscalls.c ****     return -1;
 567              		.loc 1 179 5 is_stmt 1 view .LVU112
 568              		.loc 1 179 12 is_stmt 0 view .LVU113
 569 000a 0120     		movs	r0, #1
 180:Core/Src/syscalls.c **** }
 570              		.loc 1 180 1 view .LVU114
 571 000c 4042     		rsbs	r0, r0, #0
 572              		@ sp needed
 573 000e 10BD     		pop	{r4, pc}
ARM GAS  /tmp/ccmBhxg1.s 			page 14


 574              		.cfi_endproc
 575              	.LFE38:
 577              		.section	.text._times,"ax",%progbits
 578              		.align	1
 579              		.global	_times
 580              		.syntax unified
 581              		.code	16
 582              		.thumb_func
 583              		.fpu softvfp
 585              	_times:
 586              	.LVL43:
 587              	.LFB39:
 181:Core/Src/syscalls.c **** 
 182:Core/Src/syscalls.c **** int _times(struct tms *buf)
 183:Core/Src/syscalls.c **** {
 588              		.loc 1 183 1 is_stmt 1 view -0
 589              		.cfi_startproc
 590              		@ args = 0, pretend = 0, frame = 0
 591              		@ frame_needed = 0, uses_anonymous_args = 0
 592              		@ link register save eliminated.
 184:Core/Src/syscalls.c ****     return -1;
 593              		.loc 1 184 5 view .LVU116
 594              		.loc 1 184 12 is_stmt 0 view .LVU117
 595 0000 0120     		movs	r0, #1
 596              	.LVL44:
 185:Core/Src/syscalls.c **** }
 597              		.loc 1 185 1 view .LVU118
 598 0002 4042     		rsbs	r0, r0, #0
 599              		@ sp needed
 600 0004 7047     		bx	lr
 601              		.cfi_endproc
 602              	.LFE39:
 604              		.section	.text._stat,"ax",%progbits
 605              		.align	1
 606              		.global	_stat
 607              		.syntax unified
 608              		.code	16
 609              		.thumb_func
 610              		.fpu softvfp
 612              	_stat:
 613              	.LVL45:
 614              	.LFB40:
 186:Core/Src/syscalls.c **** 
 187:Core/Src/syscalls.c **** int _stat(char *file, struct stat *st)
 188:Core/Src/syscalls.c **** {
 615              		.loc 1 188 1 is_stmt 1 view -0
 616              		.cfi_startproc
 617              		@ args = 0, pretend = 0, frame = 0
 618              		@ frame_needed = 0, uses_anonymous_args = 0
 619              		@ link register save eliminated.
 189:Core/Src/syscalls.c ****     st->st_mode = S_IFCHR;
 620              		.loc 1 189 5 view .LVU120
 621              		.loc 1 189 17 is_stmt 0 view .LVU121
 622 0000 8023     		movs	r3, #128
 623 0002 9B01     		lsls	r3, r3, #6
 624 0004 4B60     		str	r3, [r1, #4]
 190:Core/Src/syscalls.c ****     return 0;
ARM GAS  /tmp/ccmBhxg1.s 			page 15


 625              		.loc 1 190 5 is_stmt 1 view .LVU122
 191:Core/Src/syscalls.c **** }
 626              		.loc 1 191 1 is_stmt 0 view .LVU123
 627 0006 0020     		movs	r0, #0
 628              	.LVL46:
 629              		.loc 1 191 1 view .LVU124
 630              		@ sp needed
 631 0008 7047     		bx	lr
 632              		.cfi_endproc
 633              	.LFE40:
 635              		.section	.text._link,"ax",%progbits
 636              		.align	1
 637              		.global	_link
 638              		.syntax unified
 639              		.code	16
 640              		.thumb_func
 641              		.fpu softvfp
 643              	_link:
 644              	.LVL47:
 645              	.LFB41:
 192:Core/Src/syscalls.c **** 
 193:Core/Src/syscalls.c **** int _link(char *old, char *new)
 194:Core/Src/syscalls.c **** {
 646              		.loc 1 194 1 is_stmt 1 view -0
 647              		.cfi_startproc
 648              		@ args = 0, pretend = 0, frame = 0
 649              		@ frame_needed = 0, uses_anonymous_args = 0
 650              		.loc 1 194 1 is_stmt 0 view .LVU126
 651 0000 10B5     		push	{r4, lr}
 652              	.LCFI8:
 653              		.cfi_def_cfa_offset 8
 654              		.cfi_offset 4, -8
 655              		.cfi_offset 14, -4
 195:Core/Src/syscalls.c ****     errno = EMLINK;
 656              		.loc 1 195 5 is_stmt 1 view .LVU127
 657 0002 FFF7FEFF 		bl	__errno
 658              	.LVL48:
 659              		.loc 1 195 11 is_stmt 0 view .LVU128
 660 0006 1F23     		movs	r3, #31
 661 0008 0360     		str	r3, [r0]
 196:Core/Src/syscalls.c ****     return -1;
 662              		.loc 1 196 5 is_stmt 1 view .LVU129
 663              		.loc 1 196 12 is_stmt 0 view .LVU130
 664 000a 0120     		movs	r0, #1
 197:Core/Src/syscalls.c **** }
 665              		.loc 1 197 1 view .LVU131
 666 000c 4042     		rsbs	r0, r0, #0
 667              		@ sp needed
 668 000e 10BD     		pop	{r4, pc}
 669              		.cfi_endproc
 670              	.LFE41:
 672              		.section	.text._fork,"ax",%progbits
 673              		.align	1
 674              		.global	_fork
 675              		.syntax unified
 676              		.code	16
 677              		.thumb_func
ARM GAS  /tmp/ccmBhxg1.s 			page 16


 678              		.fpu softvfp
 680              	_fork:
 681              	.LFB42:
 198:Core/Src/syscalls.c **** 
 199:Core/Src/syscalls.c **** int _fork(void)
 200:Core/Src/syscalls.c **** {
 682              		.loc 1 200 1 is_stmt 1 view -0
 683              		.cfi_startproc
 684              		@ args = 0, pretend = 0, frame = 0
 685              		@ frame_needed = 0, uses_anonymous_args = 0
 686 0000 10B5     		push	{r4, lr}
 687              	.LCFI9:
 688              		.cfi_def_cfa_offset 8
 689              		.cfi_offset 4, -8
 690              		.cfi_offset 14, -4
 201:Core/Src/syscalls.c ****     errno = EAGAIN;
 691              		.loc 1 201 5 view .LVU133
 692 0002 FFF7FEFF 		bl	__errno
 693              	.LVL49:
 694              		.loc 1 201 11 is_stmt 0 view .LVU134
 695 0006 0B23     		movs	r3, #11
 696 0008 0360     		str	r3, [r0]
 202:Core/Src/syscalls.c ****     return -1;
 697              		.loc 1 202 5 is_stmt 1 view .LVU135
 698              		.loc 1 202 12 is_stmt 0 view .LVU136
 699 000a 0120     		movs	r0, #1
 203:Core/Src/syscalls.c **** }
 700              		.loc 1 203 1 view .LVU137
 701 000c 4042     		rsbs	r0, r0, #0
 702              		@ sp needed
 703 000e 10BD     		pop	{r4, pc}
 704              		.cfi_endproc
 705              	.LFE42:
 707              		.section	.text._execve,"ax",%progbits
 708              		.align	1
 709              		.global	_execve
 710              		.syntax unified
 711              		.code	16
 712              		.thumb_func
 713              		.fpu softvfp
 715              	_execve:
 716              	.LVL50:
 717              	.LFB43:
 204:Core/Src/syscalls.c **** 
 205:Core/Src/syscalls.c **** int _execve(char *name, char **argv, char **env)
 206:Core/Src/syscalls.c **** {
 718              		.loc 1 206 1 is_stmt 1 view -0
 719              		.cfi_startproc
 720              		@ args = 0, pretend = 0, frame = 0
 721              		@ frame_needed = 0, uses_anonymous_args = 0
 722              		.loc 1 206 1 is_stmt 0 view .LVU139
 723 0000 10B5     		push	{r4, lr}
 724              	.LCFI10:
 725              		.cfi_def_cfa_offset 8
 726              		.cfi_offset 4, -8
 727              		.cfi_offset 14, -4
 207:Core/Src/syscalls.c ****     errno = ENOMEM;
ARM GAS  /tmp/ccmBhxg1.s 			page 17


 728              		.loc 1 207 5 is_stmt 1 view .LVU140
 729 0002 FFF7FEFF 		bl	__errno
 730              	.LVL51:
 731              		.loc 1 207 11 is_stmt 0 view .LVU141
 732 0006 0C23     		movs	r3, #12
 733 0008 0360     		str	r3, [r0]
 208:Core/Src/syscalls.c ****     return -1;
 734              		.loc 1 208 5 is_stmt 1 view .LVU142
 735              		.loc 1 208 12 is_stmt 0 view .LVU143
 736 000a 0120     		movs	r0, #1
 209:Core/Src/syscalls.c **** }...
 737              		.loc 1 209 1 view .LVU144
 738 000c 4042     		rsbs	r0, r0, #0
 739              		@ sp needed
 740 000e 10BD     		pop	{r4, pc}
 741              		.cfi_endproc
 742              	.LFE43:
 744              		.global	environ
 745              		.global	__env
 746              		.section	.bss.__env,"aw",%nobits
 747              		.align	2
 750              	__env:
 751 0000 00000000 		.space	4
 752              		.section	.bss.heap_end.0,"aw",%nobits
 753              		.align	2
 754              		.set	.LANCHOR0,. + 0
 757              	heap_end.0:
 758 0000 00000000 		.space	4
 759              		.section	.data.environ,"aw"
 760              		.align	2
 763              	environ:
 764 0000 00000000 		.word	__env
 765              		.weak	__io_putchar
 766              		.weak	__io_getchar
 767              		.text
 768              	.Letext0:
 769              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 770              		.file 3 "/usr/include/newlib/sys/_types.h"
 771              		.file 4 "/usr/include/newlib/sys/_timeval.h"
 772              		.file 5 "/usr/include/newlib/sys/_timespec.h"
 773              		.file 6 "/usr/include/newlib/sys/types.h"
 774              		.file 7 "/usr/include/newlib/sys/stat.h"
 775              		.file 8 "/usr/include/newlib/sys/times.h"
 776              		.file 9 "/usr/include/newlib/sys/errno.h"
ARM GAS  /tmp/ccmBhxg1.s 			page 18


DEFINED SYMBOLS
                            *ABS*:0000000000000000 syscalls.c
     /tmp/ccmBhxg1.s:16     .text.initialise_monitor_handles:0000000000000000 $t
     /tmp/ccmBhxg1.s:24     .text.initialise_monitor_handles:0000000000000000 initialise_monitor_handles
     /tmp/ccmBhxg1.s:39     .text._getpid:0000000000000000 $t
     /tmp/ccmBhxg1.s:46     .text._getpid:0000000000000000 _getpid
     /tmp/ccmBhxg1.s:62     .text._kill:0000000000000000 $t
     /tmp/ccmBhxg1.s:69     .text._kill:0000000000000000 _kill
     /tmp/ccmBhxg1.s:99     .text._exit:0000000000000000 $t
     /tmp/ccmBhxg1.s:106    .text._exit:0000000000000000 _exit
     /tmp/ccmBhxg1.s:134    .text._read:0000000000000000 $t
     /tmp/ccmBhxg1.s:141    .text._read:0000000000000000 _read
     /tmp/ccmBhxg1.s:198    .text._write:0000000000000000 $t
     /tmp/ccmBhxg1.s:205    .text._write:0000000000000000 _write
     /tmp/ccmBhxg1.s:263    .text._sbrk:0000000000000000 $t
     /tmp/ccmBhxg1.s:270    .text._sbrk:0000000000000000 _sbrk
     /tmp/ccmBhxg1.s:354    .text._sbrk:000000000000003c $d
     /tmp/ccmBhxg1.s:362    .text._close:0000000000000000 $t
     /tmp/ccmBhxg1.s:369    .text._close:0000000000000000 _close
     /tmp/ccmBhxg1.s:389    .text._fstat:0000000000000000 $t
     /tmp/ccmBhxg1.s:396    .text._fstat:0000000000000000 _fstat
     /tmp/ccmBhxg1.s:420    .text._isatty:0000000000000000 $t
     /tmp/ccmBhxg1.s:427    .text._isatty:0000000000000000 _isatty
     /tmp/ccmBhxg1.s:446    .text._lseek:0000000000000000 $t
     /tmp/ccmBhxg1.s:453    .text._lseek:0000000000000000 _lseek
     /tmp/ccmBhxg1.s:472    .text._open:0000000000000000 $t
     /tmp/ccmBhxg1.s:479    .text._open:0000000000000000 _open
     /tmp/ccmBhxg1.s:504    .text._wait:0000000000000000 $t
     /tmp/ccmBhxg1.s:511    .text._wait:0000000000000000 _wait
     /tmp/ccmBhxg1.s:541    .text._unlink:0000000000000000 $t
     /tmp/ccmBhxg1.s:548    .text._unlink:0000000000000000 _unlink
     /tmp/ccmBhxg1.s:578    .text._times:0000000000000000 $t
     /tmp/ccmBhxg1.s:585    .text._times:0000000000000000 _times
     /tmp/ccmBhxg1.s:605    .text._stat:0000000000000000 $t
     /tmp/ccmBhxg1.s:612    .text._stat:0000000000000000 _stat
     /tmp/ccmBhxg1.s:636    .text._link:0000000000000000 $t
     /tmp/ccmBhxg1.s:643    .text._link:0000000000000000 _link
     /tmp/ccmBhxg1.s:673    .text._fork:0000000000000000 $t
     /tmp/ccmBhxg1.s:680    .text._fork:0000000000000000 _fork
     /tmp/ccmBhxg1.s:708    .text._execve:0000000000000000 $t
     /tmp/ccmBhxg1.s:715    .text._execve:0000000000000000 _execve
     /tmp/ccmBhxg1.s:763    .data.environ:0000000000000000 environ
     /tmp/ccmBhxg1.s:750    .bss.__env:0000000000000000 __env
     /tmp/ccmBhxg1.s:747    .bss.__env:0000000000000000 $d
     /tmp/ccmBhxg1.s:753    .bss.heap_end.0:0000000000000000 $d
     /tmp/ccmBhxg1.s:757    .bss.heap_end.0:0000000000000000 heap_end.0
     /tmp/ccmBhxg1.s:760    .data.environ:0000000000000000 $d

UNDEFINED SYMBOLS
__errno
__io_getchar
__io_putchar
_Min_Stack_Size
_estack
end
