ARM GAS  /tmp/ccWPc7QX.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"usart.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
  16              		.align	1
  17              		.global	MX_USART1_UART_Init
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	MX_USART1_UART_Init:
  25              	.LFB327:
  26              		.file 1 "Core/Src/usart.c"
   1:Core/Src/usart.c **** /* USER CODE BEGIN Header */
   2:Core/Src/usart.c **** /**
   3:Core/Src/usart.c ****   ******************************************************************************
   4:Core/Src/usart.c ****   * @file    usart.c
   5:Core/Src/usart.c ****   * @brief   This file provides code for the configuration
   6:Core/Src/usart.c ****   *          of the USART instances.
   7:Core/Src/usart.c ****   ******************************************************************************
   8:Core/Src/usart.c ****   * @attention
   9:Core/Src/usart.c ****   *
  10:Core/Src/usart.c ****   * Copyright (c) 2022 STMicroelectronics.
  11:Core/Src/usart.c ****   * All rights reserved.
  12:Core/Src/usart.c ****   *
  13:Core/Src/usart.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/usart.c ****   * in the root directory of this software component.
  15:Core/Src/usart.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/usart.c ****   *
  17:Core/Src/usart.c ****   ******************************************************************************
  18:Core/Src/usart.c ****   */
  19:Core/Src/usart.c **** /* USER CODE END Header */
  20:Core/Src/usart.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/usart.c **** #include "usart.h"
  22:Core/Src/usart.c **** 
  23:Core/Src/usart.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/usart.c **** 
  25:Core/Src/usart.c **** /* USER CODE END 0 */
  26:Core/Src/usart.c **** 
  27:Core/Src/usart.c **** UART_HandleTypeDef huart1;
  28:Core/Src/usart.c **** DMA_HandleTypeDef hdma_usart1_rx;
  29:Core/Src/usart.c **** DMA_HandleTypeDef hdma_usart1_tx;
  30:Core/Src/usart.c **** 
  31:Core/Src/usart.c **** /* USART1 init function */
  32:Core/Src/usart.c **** 
ARM GAS  /tmp/ccWPc7QX.s 			page 2


  33:Core/Src/usart.c **** void MX_USART1_UART_Init(void)
  34:Core/Src/usart.c **** {
  27              		.loc 1 34 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 10B5     		push	{r4, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  35:Core/Src/usart.c **** 
  36:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_Init 0 */
  37:Core/Src/usart.c **** 
  38:Core/Src/usart.c ****   /* USER CODE END USART1_Init 0 */
  39:Core/Src/usart.c **** 
  40:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_Init 1 */
  41:Core/Src/usart.c **** 
  42:Core/Src/usart.c ****   /* USER CODE END USART1_Init 1 */
  43:Core/Src/usart.c ****   huart1.Instance = USART1;
  36              		.loc 1 43 3 view .LVU1
  37              		.loc 1 43 19 is_stmt 0 view .LVU2
  38 0002 1948     		ldr	r0, .L10
  39 0004 194B     		ldr	r3, .L10+4
  40 0006 0360     		str	r3, [r0]
  44:Core/Src/usart.c ****   huart1.Init.BaudRate = 9600;
  41              		.loc 1 44 3 is_stmt 1 view .LVU3
  42              		.loc 1 44 24 is_stmt 0 view .LVU4
  43 0008 9623     		movs	r3, #150
  44 000a 9B01     		lsls	r3, r3, #6
  45 000c 4360     		str	r3, [r0, #4]
  45:Core/Src/usart.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
  46              		.loc 1 45 3 is_stmt 1 view .LVU5
  47              		.loc 1 45 26 is_stmt 0 view .LVU6
  48 000e 0023     		movs	r3, #0
  49 0010 8360     		str	r3, [r0, #8]
  46:Core/Src/usart.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
  50              		.loc 1 46 3 is_stmt 1 view .LVU7
  51              		.loc 1 46 24 is_stmt 0 view .LVU8
  52 0012 C360     		str	r3, [r0, #12]
  47:Core/Src/usart.c ****   huart1.Init.Parity = UART_PARITY_NONE;
  53              		.loc 1 47 3 is_stmt 1 view .LVU9
  54              		.loc 1 47 22 is_stmt 0 view .LVU10
  55 0014 0361     		str	r3, [r0, #16]
  48:Core/Src/usart.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
  56              		.loc 1 48 3 is_stmt 1 view .LVU11
  57              		.loc 1 48 20 is_stmt 0 view .LVU12
  58 0016 0C22     		movs	r2, #12
  59 0018 4261     		str	r2, [r0, #20]
  49:Core/Src/usart.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  60              		.loc 1 49 3 is_stmt 1 view .LVU13
  61              		.loc 1 49 25 is_stmt 0 view .LVU14
  62 001a 8361     		str	r3, [r0, #24]
  50:Core/Src/usart.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
  63              		.loc 1 50 3 is_stmt 1 view .LVU15
  64              		.loc 1 50 28 is_stmt 0 view .LVU16
  65 001c C361     		str	r3, [r0, #28]
ARM GAS  /tmp/ccWPc7QX.s 			page 3


  51:Core/Src/usart.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
  66              		.loc 1 51 3 is_stmt 1 view .LVU17
  67              		.loc 1 51 30 is_stmt 0 view .LVU18
  68 001e 0362     		str	r3, [r0, #32]
  52:Core/Src/usart.c ****   huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
  69              		.loc 1 52 3 is_stmt 1 view .LVU19
  70              		.loc 1 52 30 is_stmt 0 view .LVU20
  71 0020 4362     		str	r3, [r0, #36]
  53:Core/Src/usart.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
  72              		.loc 1 53 3 is_stmt 1 view .LVU21
  73              		.loc 1 53 38 is_stmt 0 view .LVU22
  74 0022 8362     		str	r3, [r0, #40]
  54:Core/Src/usart.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
  75              		.loc 1 54 3 is_stmt 1 view .LVU23
  76              		.loc 1 54 7 is_stmt 0 view .LVU24
  77 0024 FFF7FEFF 		bl	HAL_UART_Init
  78              	.LVL0:
  79              		.loc 1 54 6 view .LVU25
  80 0028 0028     		cmp	r0, #0
  81 002a 11D1     		bne	.L6
  82              	.L2:
  55:Core/Src/usart.c ****   {
  56:Core/Src/usart.c ****     Error_Handler();
  57:Core/Src/usart.c ****   }
  58:Core/Src/usart.c ****   if (HAL_UARTEx_SetTxFifoThreshold(&huart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
  83              		.loc 1 58 3 is_stmt 1 view .LVU26
  84              		.loc 1 58 7 is_stmt 0 view .LVU27
  85 002c 0021     		movs	r1, #0
  86 002e 0E48     		ldr	r0, .L10
  87 0030 FFF7FEFF 		bl	HAL_UARTEx_SetTxFifoThreshold
  88              	.LVL1:
  89              		.loc 1 58 6 view .LVU28
  90 0034 0028     		cmp	r0, #0
  91 0036 0ED1     		bne	.L7
  92              	.L3:
  59:Core/Src/usart.c ****   {
  60:Core/Src/usart.c ****     Error_Handler();
  61:Core/Src/usart.c ****   }
  62:Core/Src/usart.c ****   if (HAL_UARTEx_SetRxFifoThreshold(&huart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
  93              		.loc 1 62 3 is_stmt 1 view .LVU29
  94              		.loc 1 62 7 is_stmt 0 view .LVU30
  95 0038 0021     		movs	r1, #0
  96 003a 0B48     		ldr	r0, .L10
  97 003c FFF7FEFF 		bl	HAL_UARTEx_SetRxFifoThreshold
  98              	.LVL2:
  99              		.loc 1 62 6 view .LVU31
 100 0040 0028     		cmp	r0, #0
 101 0042 0BD1     		bne	.L8
 102              	.L4:
  63:Core/Src/usart.c ****   {
  64:Core/Src/usart.c ****     Error_Handler();
  65:Core/Src/usart.c ****   }
  66:Core/Src/usart.c ****   if (HAL_UARTEx_DisableFifoMode(&huart1) != HAL_OK)
 103              		.loc 1 66 3 is_stmt 1 view .LVU32
 104              		.loc 1 66 7 is_stmt 0 view .LVU33
 105 0044 0848     		ldr	r0, .L10
 106 0046 FFF7FEFF 		bl	HAL_UARTEx_DisableFifoMode
ARM GAS  /tmp/ccWPc7QX.s 			page 4


 107              	.LVL3:
 108              		.loc 1 66 6 view .LVU34
 109 004a 0028     		cmp	r0, #0
 110 004c 09D1     		bne	.L9
 111              	.L1:
  67:Core/Src/usart.c ****   {
  68:Core/Src/usart.c ****     Error_Handler();
  69:Core/Src/usart.c ****   }
  70:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_Init 2 */
  71:Core/Src/usart.c **** 
  72:Core/Src/usart.c ****   /* USER CODE END USART1_Init 2 */
  73:Core/Src/usart.c **** 
  74:Core/Src/usart.c **** }
 112              		.loc 1 74 1 view .LVU35
 113              		@ sp needed
 114 004e 10BD     		pop	{r4, pc}
 115              	.L6:
  56:Core/Src/usart.c ****   }
 116              		.loc 1 56 5 is_stmt 1 view .LVU36
 117 0050 FFF7FEFF 		bl	Error_Handler
 118              	.LVL4:
 119 0054 EAE7     		b	.L2
 120              	.L7:
  60:Core/Src/usart.c ****   }
 121              		.loc 1 60 5 view .LVU37
 122 0056 FFF7FEFF 		bl	Error_Handler
 123              	.LVL5:
 124 005a EDE7     		b	.L3
 125              	.L8:
  64:Core/Src/usart.c ****   }
 126              		.loc 1 64 5 view .LVU38
 127 005c FFF7FEFF 		bl	Error_Handler
 128              	.LVL6:
 129 0060 F0E7     		b	.L4
 130              	.L9:
  68:Core/Src/usart.c ****   }
 131              		.loc 1 68 5 view .LVU39
 132 0062 FFF7FEFF 		bl	Error_Handler
 133              	.LVL7:
 134              		.loc 1 74 1 is_stmt 0 view .LVU40
 135 0066 F2E7     		b	.L1
 136              	.L11:
 137              		.align	2
 138              	.L10:
 139 0068 00000000 		.word	huart1
 140 006c 00380140 		.word	1073821696
 141              		.cfi_endproc
 142              	.LFE327:
 144              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 145              		.align	1
 146              		.global	HAL_UART_MspInit
 147              		.syntax unified
 148              		.code	16
 149              		.thumb_func
 150              		.fpu softvfp
 152              	HAL_UART_MspInit:
 153              	.LVL8:
ARM GAS  /tmp/ccWPc7QX.s 			page 5


 154              	.LFB328:
  75:Core/Src/usart.c **** 
  76:Core/Src/usart.c **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
  77:Core/Src/usart.c **** {
 155              		.loc 1 77 1 is_stmt 1 view -0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 80
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159              		.loc 1 77 1 is_stmt 0 view .LVU42
 160 0000 30B5     		push	{r4, r5, lr}
 161              	.LCFI1:
 162              		.cfi_def_cfa_offset 12
 163              		.cfi_offset 4, -12
 164              		.cfi_offset 5, -8
 165              		.cfi_offset 14, -4
 166 0002 95B0     		sub	sp, sp, #84
 167              	.LCFI2:
 168              		.cfi_def_cfa_offset 96
 169 0004 0400     		movs	r4, r0
  78:Core/Src/usart.c **** 
  79:Core/Src/usart.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 170              		.loc 1 79 3 is_stmt 1 view .LVU43
 171              		.loc 1 79 20 is_stmt 0 view .LVU44
 172 0006 1422     		movs	r2, #20
 173 0008 0021     		movs	r1, #0
 174 000a 0FA8     		add	r0, sp, #60
 175              	.LVL9:
 176              		.loc 1 79 20 view .LVU45
 177 000c FFF7FEFF 		bl	memset
 178              	.LVL10:
  80:Core/Src/usart.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 179              		.loc 1 80 3 is_stmt 1 view .LVU46
 180              		.loc 1 80 28 is_stmt 0 view .LVU47
 181 0010 3422     		movs	r2, #52
 182 0012 0021     		movs	r1, #0
 183 0014 02A8     		add	r0, sp, #8
 184 0016 FFF7FEFF 		bl	memset
 185              	.LVL11:
  81:Core/Src/usart.c ****   if(uartHandle->Instance==USART1)
 186              		.loc 1 81 3 is_stmt 1 view .LVU48
 187              		.loc 1 81 5 is_stmt 0 view .LVU49
 188 001a 354B     		ldr	r3, .L21
 189 001c 2268     		ldr	r2, [r4]
 190 001e 9A42     		cmp	r2, r3
 191 0020 01D0     		beq	.L17
 192              	.L12:
  82:Core/Src/usart.c ****   {
  83:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspInit 0 */
  84:Core/Src/usart.c **** 
  85:Core/Src/usart.c ****   /* USER CODE END USART1_MspInit 0 */
  86:Core/Src/usart.c **** 
  87:Core/Src/usart.c ****   /** Initializes the peripherals clocks
  88:Core/Src/usart.c ****   */
  89:Core/Src/usart.c ****     PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1;
  90:Core/Src/usart.c ****     PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
  91:Core/Src/usart.c ****     if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
  92:Core/Src/usart.c ****     {
ARM GAS  /tmp/ccWPc7QX.s 			page 6


  93:Core/Src/usart.c ****       Error_Handler();
  94:Core/Src/usart.c ****     }
  95:Core/Src/usart.c **** 
  96:Core/Src/usart.c ****     /* USART1 clock enable */
  97:Core/Src/usart.c ****     __HAL_RCC_USART1_CLK_ENABLE();
  98:Core/Src/usart.c **** 
  99:Core/Src/usart.c ****     __HAL_RCC_GPIOB_CLK_ENABLE();
 100:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 101:Core/Src/usart.c ****     PB6     ------> USART1_TX
 102:Core/Src/usart.c ****     PB7     ------> USART1_RX
 103:Core/Src/usart.c ****     */
 104:Core/Src/usart.c ****     GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 105:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 106:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 107:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 108:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_USART1;
 109:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 110:Core/Src/usart.c **** 
 111:Core/Src/usart.c ****     /* USART1 DMA Init */
 112:Core/Src/usart.c ****     /* USART1_RX Init */
 113:Core/Src/usart.c ****     hdma_usart1_rx.Instance = DMA1_Channel1;
 114:Core/Src/usart.c ****     hdma_usart1_rx.Init.Request = DMA_REQUEST_USART1_RX;
 115:Core/Src/usart.c ****     hdma_usart1_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 116:Core/Src/usart.c ****     hdma_usart1_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 117:Core/Src/usart.c ****     hdma_usart1_rx.Init.MemInc = DMA_MINC_ENABLE;
 118:Core/Src/usart.c ****     hdma_usart1_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 119:Core/Src/usart.c ****     hdma_usart1_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 120:Core/Src/usart.c ****     hdma_usart1_rx.Init.Mode = DMA_CIRCULAR;
 121:Core/Src/usart.c ****     hdma_usart1_rx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 122:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart1_rx) != HAL_OK)
 123:Core/Src/usart.c ****     {
 124:Core/Src/usart.c ****       Error_Handler();
 125:Core/Src/usart.c ****     }
 126:Core/Src/usart.c **** 
 127:Core/Src/usart.c ****     __HAL_LINKDMA(uartHandle,hdmarx,hdma_usart1_rx);
 128:Core/Src/usart.c **** 
 129:Core/Src/usart.c ****     /* USART1_TX Init */
 130:Core/Src/usart.c ****     hdma_usart1_tx.Instance = DMA1_Channel2;
 131:Core/Src/usart.c ****     hdma_usart1_tx.Init.Request = DMA_REQUEST_USART1_TX;
 132:Core/Src/usart.c ****     hdma_usart1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 133:Core/Src/usart.c ****     hdma_usart1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 134:Core/Src/usart.c ****     hdma_usart1_tx.Init.MemInc = DMA_MINC_ENABLE;
 135:Core/Src/usart.c ****     hdma_usart1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 136:Core/Src/usart.c ****     hdma_usart1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 137:Core/Src/usart.c ****     hdma_usart1_tx.Init.Mode = DMA_NORMAL;
 138:Core/Src/usart.c ****     hdma_usart1_tx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 139:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart1_tx) != HAL_OK)
 140:Core/Src/usart.c ****     {
 141:Core/Src/usart.c ****       Error_Handler();
 142:Core/Src/usart.c ****     }
 143:Core/Src/usart.c **** 
 144:Core/Src/usart.c ****     __HAL_LINKDMA(uartHandle,hdmatx,hdma_usart1_tx);
 145:Core/Src/usart.c **** 
 146:Core/Src/usart.c ****     /* USART1 interrupt Init */
 147:Core/Src/usart.c ****     HAL_NVIC_SetPriority(USART1_IRQn, 3, 0);
 148:Core/Src/usart.c ****     HAL_NVIC_EnableIRQ(USART1_IRQn);
 149:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspInit 1 */
ARM GAS  /tmp/ccWPc7QX.s 			page 7


 150:Core/Src/usart.c **** 
 151:Core/Src/usart.c ****   /* USER CODE END USART1_MspInit 1 */
 152:Core/Src/usart.c ****   }
 153:Core/Src/usart.c **** }
 193              		.loc 1 153 1 view .LVU50
 194 0022 15B0     		add	sp, sp, #84
 195              		@ sp needed
 196              	.LVL12:
 197              		.loc 1 153 1 view .LVU51
 198 0024 30BD     		pop	{r4, r5, pc}
 199              	.LVL13:
 200              	.L17:
  89:Core/Src/usart.c ****     PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 201              		.loc 1 89 5 is_stmt 1 view .LVU52
  89:Core/Src/usart.c ****     PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 202              		.loc 1 89 40 is_stmt 0 view .LVU53
 203 0026 0123     		movs	r3, #1
 204 0028 0293     		str	r3, [sp, #8]
  90:Core/Src/usart.c ****     if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 205              		.loc 1 90 5 is_stmt 1 view .LVU54
  91:Core/Src/usart.c ****     {
 206              		.loc 1 91 5 view .LVU55
  91:Core/Src/usart.c ****     {
 207              		.loc 1 91 9 is_stmt 0 view .LVU56
 208 002a 02A8     		add	r0, sp, #8
 209 002c FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 210              	.LVL14:
  91:Core/Src/usart.c ****     {
 211              		.loc 1 91 8 view .LVU57
 212 0030 0028     		cmp	r0, #0
 213 0032 54D1     		bne	.L18
 214              	.L14:
  97:Core/Src/usart.c **** 
 215              		.loc 1 97 5 is_stmt 1 view .LVU58
 216              	.LBB2:
  97:Core/Src/usart.c **** 
 217              		.loc 1 97 5 view .LVU59
  97:Core/Src/usart.c **** 
 218              		.loc 1 97 5 view .LVU60
 219 0034 2F4B     		ldr	r3, .L21+4
 220 0036 196C     		ldr	r1, [r3, #64]
 221 0038 8020     		movs	r0, #128
 222 003a C001     		lsls	r0, r0, #7
 223 003c 0143     		orrs	r1, r0
 224 003e 1964     		str	r1, [r3, #64]
  97:Core/Src/usart.c **** 
 225              		.loc 1 97 5 view .LVU61
 226 0040 1A6C     		ldr	r2, [r3, #64]
 227 0042 0240     		ands	r2, r0
 228 0044 0092     		str	r2, [sp]
  97:Core/Src/usart.c **** 
 229              		.loc 1 97 5 view .LVU62
 230 0046 009A     		ldr	r2, [sp]
 231              	.LBE2:
  97:Core/Src/usart.c **** 
 232              		.loc 1 97 5 view .LVU63
  99:Core/Src/usart.c ****     /**USART1 GPIO Configuration
ARM GAS  /tmp/ccWPc7QX.s 			page 8


 233              		.loc 1 99 5 view .LVU64
 234              	.LBB3:
  99:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 235              		.loc 1 99 5 view .LVU65
  99:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 236              		.loc 1 99 5 view .LVU66
 237 0048 596B     		ldr	r1, [r3, #52]
 238 004a 0222     		movs	r2, #2
 239 004c 1143     		orrs	r1, r2
 240 004e 5963     		str	r1, [r3, #52]
  99:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 241              		.loc 1 99 5 view .LVU67
 242 0050 5B6B     		ldr	r3, [r3, #52]
 243 0052 1340     		ands	r3, r2
 244 0054 0193     		str	r3, [sp, #4]
  99:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 245              		.loc 1 99 5 view .LVU68
 246 0056 019B     		ldr	r3, [sp, #4]
 247              	.LBE3:
  99:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 248              		.loc 1 99 5 view .LVU69
 104:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 249              		.loc 1 104 5 view .LVU70
 104:Core/Src/usart.c ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 250              		.loc 1 104 25 is_stmt 0 view .LVU71
 251 0058 C023     		movs	r3, #192
 252 005a 0F93     		str	r3, [sp, #60]
 105:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 253              		.loc 1 105 5 is_stmt 1 view .LVU72
 105:Core/Src/usart.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 254              		.loc 1 105 26 is_stmt 0 view .LVU73
 255 005c 1092     		str	r2, [sp, #64]
 106:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 256              		.loc 1 106 5 is_stmt 1 view .LVU74
 106:Core/Src/usart.c ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 257              		.loc 1 106 26 is_stmt 0 view .LVU75
 258 005e 0025     		movs	r5, #0
 259 0060 1195     		str	r5, [sp, #68]
 107:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_USART1;
 260              		.loc 1 107 5 is_stmt 1 view .LVU76
 107:Core/Src/usart.c ****     GPIO_InitStruct.Alternate = GPIO_AF0_USART1;
 261              		.loc 1 107 27 is_stmt 0 view .LVU77
 262 0062 1295     		str	r5, [sp, #72]
 108:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 263              		.loc 1 108 5 is_stmt 1 view .LVU78
 108:Core/Src/usart.c ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 264              		.loc 1 108 31 is_stmt 0 view .LVU79
 265 0064 1395     		str	r5, [sp, #76]
 109:Core/Src/usart.c **** 
 266              		.loc 1 109 5 is_stmt 1 view .LVU80
 267 0066 0FA9     		add	r1, sp, #60
 268 0068 2348     		ldr	r0, .L21+8
 269 006a FFF7FEFF 		bl	HAL_GPIO_Init
 270              	.LVL15:
 113:Core/Src/usart.c ****     hdma_usart1_rx.Init.Request = DMA_REQUEST_USART1_RX;
 271              		.loc 1 113 5 view .LVU81
 113:Core/Src/usart.c ****     hdma_usart1_rx.Init.Request = DMA_REQUEST_USART1_RX;
ARM GAS  /tmp/ccWPc7QX.s 			page 9


 272              		.loc 1 113 29 is_stmt 0 view .LVU82
 273 006e 2348     		ldr	r0, .L21+12
 274 0070 234B     		ldr	r3, .L21+16
 275 0072 0360     		str	r3, [r0]
 114:Core/Src/usart.c ****     hdma_usart1_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 276              		.loc 1 114 5 is_stmt 1 view .LVU83
 114:Core/Src/usart.c ****     hdma_usart1_rx.Init.Direction = DMA_PERIPH_TO_MEMORY;
 277              		.loc 1 114 33 is_stmt 0 view .LVU84
 278 0074 3223     		movs	r3, #50
 279 0076 4360     		str	r3, [r0, #4]
 115:Core/Src/usart.c ****     hdma_usart1_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 280              		.loc 1 115 5 is_stmt 1 view .LVU85
 115:Core/Src/usart.c ****     hdma_usart1_rx.Init.PeriphInc = DMA_PINC_DISABLE;
 281              		.loc 1 115 35 is_stmt 0 view .LVU86
 282 0078 8560     		str	r5, [r0, #8]
 116:Core/Src/usart.c ****     hdma_usart1_rx.Init.MemInc = DMA_MINC_ENABLE;
 283              		.loc 1 116 5 is_stmt 1 view .LVU87
 116:Core/Src/usart.c ****     hdma_usart1_rx.Init.MemInc = DMA_MINC_ENABLE;
 284              		.loc 1 116 35 is_stmt 0 view .LVU88
 285 007a C560     		str	r5, [r0, #12]
 117:Core/Src/usart.c ****     hdma_usart1_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 286              		.loc 1 117 5 is_stmt 1 view .LVU89
 117:Core/Src/usart.c ****     hdma_usart1_rx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 287              		.loc 1 117 32 is_stmt 0 view .LVU90
 288 007c 4E33     		adds	r3, r3, #78
 289 007e 0361     		str	r3, [r0, #16]
 118:Core/Src/usart.c ****     hdma_usart1_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 290              		.loc 1 118 5 is_stmt 1 view .LVU91
 118:Core/Src/usart.c ****     hdma_usart1_rx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 291              		.loc 1 118 45 is_stmt 0 view .LVU92
 292 0080 4561     		str	r5, [r0, #20]
 119:Core/Src/usart.c ****     hdma_usart1_rx.Init.Mode = DMA_CIRCULAR;
 293              		.loc 1 119 5 is_stmt 1 view .LVU93
 119:Core/Src/usart.c ****     hdma_usart1_rx.Init.Mode = DMA_CIRCULAR;
 294              		.loc 1 119 42 is_stmt 0 view .LVU94
 295 0082 8561     		str	r5, [r0, #24]
 120:Core/Src/usart.c ****     hdma_usart1_rx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 296              		.loc 1 120 5 is_stmt 1 view .LVU95
 120:Core/Src/usart.c ****     hdma_usart1_rx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 297              		.loc 1 120 30 is_stmt 0 view .LVU96
 298 0084 603B     		subs	r3, r3, #96
 299 0086 C361     		str	r3, [r0, #28]
 121:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart1_rx) != HAL_OK)
 300              		.loc 1 121 5 is_stmt 1 view .LVU97
 121:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart1_rx) != HAL_OK)
 301              		.loc 1 121 34 is_stmt 0 view .LVU98
 302 0088 C023     		movs	r3, #192
 303 008a 9B01     		lsls	r3, r3, #6
 304 008c 0362     		str	r3, [r0, #32]
 122:Core/Src/usart.c ****     {
 305              		.loc 1 122 5 is_stmt 1 view .LVU99
 122:Core/Src/usart.c ****     {
 306              		.loc 1 122 9 is_stmt 0 view .LVU100
 307 008e FFF7FEFF 		bl	HAL_DMA_Init
 308              	.LVL16:
 122:Core/Src/usart.c ****     {
 309              		.loc 1 122 8 view .LVU101
ARM GAS  /tmp/ccWPc7QX.s 			page 10


 310 0092 0028     		cmp	r0, #0
 311 0094 26D1     		bne	.L19
 312              	.L15:
 127:Core/Src/usart.c **** 
 313              		.loc 1 127 5 is_stmt 1 view .LVU102
 127:Core/Src/usart.c **** 
 314              		.loc 1 127 5 view .LVU103
 315 0096 8022     		movs	r2, #128
 316 0098 184B     		ldr	r3, .L21+12
 317 009a A350     		str	r3, [r4, r2]
 127:Core/Src/usart.c **** 
 318              		.loc 1 127 5 view .LVU104
 319 009c 9C62     		str	r4, [r3, #40]
 127:Core/Src/usart.c **** 
 320              		.loc 1 127 5 view .LVU105
 130:Core/Src/usart.c ****     hdma_usart1_tx.Init.Request = DMA_REQUEST_USART1_TX;
 321              		.loc 1 130 5 view .LVU106
 130:Core/Src/usart.c ****     hdma_usart1_tx.Init.Request = DMA_REQUEST_USART1_TX;
 322              		.loc 1 130 29 is_stmt 0 view .LVU107
 323 009e 1948     		ldr	r0, .L21+20
 324 00a0 194B     		ldr	r3, .L21+24
 325 00a2 0360     		str	r3, [r0]
 131:Core/Src/usart.c ****     hdma_usart1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 326              		.loc 1 131 5 is_stmt 1 view .LVU108
 131:Core/Src/usart.c ****     hdma_usart1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 327              		.loc 1 131 33 is_stmt 0 view .LVU109
 328 00a4 3323     		movs	r3, #51
 329 00a6 4360     		str	r3, [r0, #4]
 132:Core/Src/usart.c ****     hdma_usart1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 330              		.loc 1 132 5 is_stmt 1 view .LVU110
 132:Core/Src/usart.c ****     hdma_usart1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 331              		.loc 1 132 35 is_stmt 0 view .LVU111
 332 00a8 233B     		subs	r3, r3, #35
 333 00aa 8360     		str	r3, [r0, #8]
 133:Core/Src/usart.c ****     hdma_usart1_tx.Init.MemInc = DMA_MINC_ENABLE;
 334              		.loc 1 133 5 is_stmt 1 view .LVU112
 133:Core/Src/usart.c ****     hdma_usart1_tx.Init.MemInc = DMA_MINC_ENABLE;
 335              		.loc 1 133 35 is_stmt 0 view .LVU113
 336 00ac 0023     		movs	r3, #0
 337 00ae C360     		str	r3, [r0, #12]
 134:Core/Src/usart.c ****     hdma_usart1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 338              		.loc 1 134 5 is_stmt 1 view .LVU114
 134:Core/Src/usart.c ****     hdma_usart1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 339              		.loc 1 134 32 is_stmt 0 view .LVU115
 340 00b0 0261     		str	r2, [r0, #16]
 135:Core/Src/usart.c ****     hdma_usart1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 341              		.loc 1 135 5 is_stmt 1 view .LVU116
 135:Core/Src/usart.c ****     hdma_usart1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 342              		.loc 1 135 45 is_stmt 0 view .LVU117
 343 00b2 4361     		str	r3, [r0, #20]
 136:Core/Src/usart.c ****     hdma_usart1_tx.Init.Mode = DMA_NORMAL;
 344              		.loc 1 136 5 is_stmt 1 view .LVU118
 136:Core/Src/usart.c ****     hdma_usart1_tx.Init.Mode = DMA_NORMAL;
 345              		.loc 1 136 42 is_stmt 0 view .LVU119
 346 00b4 8361     		str	r3, [r0, #24]
 137:Core/Src/usart.c ****     hdma_usart1_tx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 347              		.loc 1 137 5 is_stmt 1 view .LVU120
ARM GAS  /tmp/ccWPc7QX.s 			page 11


 137:Core/Src/usart.c ****     hdma_usart1_tx.Init.Priority = DMA_PRIORITY_VERY_HIGH;
 348              		.loc 1 137 30 is_stmt 0 view .LVU121
 349 00b6 C361     		str	r3, [r0, #28]
 138:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart1_tx) != HAL_OK)
 350              		.loc 1 138 5 is_stmt 1 view .LVU122
 138:Core/Src/usart.c ****     if (HAL_DMA_Init(&hdma_usart1_tx) != HAL_OK)
 351              		.loc 1 138 34 is_stmt 0 view .LVU123
 352 00b8 C023     		movs	r3, #192
 353 00ba 9B01     		lsls	r3, r3, #6
 354 00bc 0362     		str	r3, [r0, #32]
 139:Core/Src/usart.c ****     {
 355              		.loc 1 139 5 is_stmt 1 view .LVU124
 139:Core/Src/usart.c ****     {
 356              		.loc 1 139 9 is_stmt 0 view .LVU125
 357 00be FFF7FEFF 		bl	HAL_DMA_Init
 358              	.LVL17:
 139:Core/Src/usart.c ****     {
 359              		.loc 1 139 8 view .LVU126
 360 00c2 0028     		cmp	r0, #0
 361 00c4 11D1     		bne	.L20
 362              	.L16:
 144:Core/Src/usart.c **** 
 363              		.loc 1 144 5 is_stmt 1 view .LVU127
 144:Core/Src/usart.c **** 
 364              		.loc 1 144 5 view .LVU128
 365 00c6 0F4B     		ldr	r3, .L21+20
 366 00c8 E367     		str	r3, [r4, #124]
 144:Core/Src/usart.c **** 
 367              		.loc 1 144 5 view .LVU129
 368 00ca 9C62     		str	r4, [r3, #40]
 144:Core/Src/usart.c **** 
 369              		.loc 1 144 5 view .LVU130
 147:Core/Src/usart.c ****     HAL_NVIC_EnableIRQ(USART1_IRQn);
 370              		.loc 1 147 5 view .LVU131
 371 00cc 0022     		movs	r2, #0
 372 00ce 0321     		movs	r1, #3
 373 00d0 1B20     		movs	r0, #27
 374 00d2 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 375              	.LVL18:
 148:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspInit 1 */
 376              		.loc 1 148 5 view .LVU132
 377 00d6 1B20     		movs	r0, #27
 378 00d8 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 379              	.LVL19:
 380              		.loc 1 153 1 is_stmt 0 view .LVU133
 381 00dc A1E7     		b	.L12
 382              	.L18:
  93:Core/Src/usart.c ****     }
 383              		.loc 1 93 7 is_stmt 1 view .LVU134
 384 00de FFF7FEFF 		bl	Error_Handler
 385              	.LVL20:
 386 00e2 A7E7     		b	.L14
 387              	.L19:
 124:Core/Src/usart.c ****     }
 388              		.loc 1 124 7 view .LVU135
 389 00e4 FFF7FEFF 		bl	Error_Handler
 390              	.LVL21:
ARM GAS  /tmp/ccWPc7QX.s 			page 12


 391 00e8 D5E7     		b	.L15
 392              	.L20:
 141:Core/Src/usart.c ****     }
 393              		.loc 1 141 7 view .LVU136
 394 00ea FFF7FEFF 		bl	Error_Handler
 395              	.LVL22:
 396 00ee EAE7     		b	.L16
 397              	.L22:
 398              		.align	2
 399              	.L21:
 400 00f0 00380140 		.word	1073821696
 401 00f4 00100240 		.word	1073876992
 402 00f8 00040050 		.word	1342178304
 403 00fc 00000000 		.word	.LANCHOR0
 404 0100 08000240 		.word	1073872904
 405 0104 00000000 		.word	.LANCHOR1
 406 0108 1C000240 		.word	1073872924
 407              		.cfi_endproc
 408              	.LFE328:
 410              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 411              		.align	1
 412              		.global	HAL_UART_MspDeInit
 413              		.syntax unified
 414              		.code	16
 415              		.thumb_func
 416              		.fpu softvfp
 418              	HAL_UART_MspDeInit:
 419              	.LVL23:
 420              	.LFB329:
 154:Core/Src/usart.c **** 
 155:Core/Src/usart.c **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
 156:Core/Src/usart.c **** {
 421              		.loc 1 156 1 view -0
 422              		.cfi_startproc
 423              		@ args = 0, pretend = 0, frame = 0
 424              		@ frame_needed = 0, uses_anonymous_args = 0
 425              		.loc 1 156 1 is_stmt 0 view .LVU138
 426 0000 10B5     		push	{r4, lr}
 427              	.LCFI3:
 428              		.cfi_def_cfa_offset 8
 429              		.cfi_offset 4, -8
 430              		.cfi_offset 14, -4
 431 0002 0400     		movs	r4, r0
 157:Core/Src/usart.c **** 
 158:Core/Src/usart.c ****   if(uartHandle->Instance==USART1)
 432              		.loc 1 158 3 is_stmt 1 view .LVU139
 433              		.loc 1 158 5 is_stmt 0 view .LVU140
 434 0004 0C4B     		ldr	r3, .L26
 435 0006 0268     		ldr	r2, [r0]
 436 0008 9A42     		cmp	r2, r3
 437 000a 00D0     		beq	.L25
 438              	.LVL24:
 439              	.L23:
 159:Core/Src/usart.c ****   {
 160:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspDeInit 0 */
 161:Core/Src/usart.c **** 
 162:Core/Src/usart.c ****   /* USER CODE END USART1_MspDeInit 0 */
ARM GAS  /tmp/ccWPc7QX.s 			page 13


 163:Core/Src/usart.c ****     /* Peripheral clock disable */
 164:Core/Src/usart.c ****     __HAL_RCC_USART1_CLK_DISABLE();
 165:Core/Src/usart.c **** 
 166:Core/Src/usart.c ****     /**USART1 GPIO Configuration
 167:Core/Src/usart.c ****     PB6     ------> USART1_TX
 168:Core/Src/usart.c ****     PB7     ------> USART1_RX
 169:Core/Src/usart.c ****     */
 170:Core/Src/usart.c ****     HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6|GPIO_PIN_7);
 171:Core/Src/usart.c **** 
 172:Core/Src/usart.c ****     /* USART1 DMA DeInit */
 173:Core/Src/usart.c ****     HAL_DMA_DeInit(uartHandle->hdmarx);
 174:Core/Src/usart.c ****     HAL_DMA_DeInit(uartHandle->hdmatx);
 175:Core/Src/usart.c **** 
 176:Core/Src/usart.c ****     /* USART1 interrupt Deinit */
 177:Core/Src/usart.c ****     HAL_NVIC_DisableIRQ(USART1_IRQn);
 178:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspDeInit 1 */
 179:Core/Src/usart.c **** 
 180:Core/Src/usart.c ****   /* USER CODE END USART1_MspDeInit 1 */
 181:Core/Src/usart.c ****   }
 182:Core/Src/usart.c **** }
 440              		.loc 1 182 1 view .LVU141
 441              		@ sp needed
 442              	.LVL25:
 443              		.loc 1 182 1 view .LVU142
 444 000c 10BD     		pop	{r4, pc}
 445              	.LVL26:
 446              	.L25:
 164:Core/Src/usart.c **** 
 447              		.loc 1 164 5 is_stmt 1 view .LVU143
 448 000e 0B4A     		ldr	r2, .L26+4
 449 0010 136C     		ldr	r3, [r2, #64]
 450 0012 0B49     		ldr	r1, .L26+8
 451 0014 0B40     		ands	r3, r1
 452 0016 1364     		str	r3, [r2, #64]
 170:Core/Src/usart.c **** 
 453              		.loc 1 170 5 view .LVU144
 454 0018 C021     		movs	r1, #192
 455 001a 0A48     		ldr	r0, .L26+12
 456              	.LVL27:
 170:Core/Src/usart.c **** 
 457              		.loc 1 170 5 is_stmt 0 view .LVU145
 458 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 459              	.LVL28:
 173:Core/Src/usart.c ****     HAL_DMA_DeInit(uartHandle->hdmatx);
 460              		.loc 1 173 5 is_stmt 1 view .LVU146
 461 0020 8023     		movs	r3, #128
 462 0022 E058     		ldr	r0, [r4, r3]
 463 0024 FFF7FEFF 		bl	HAL_DMA_DeInit
 464              	.LVL29:
 174:Core/Src/usart.c **** 
 465              		.loc 1 174 5 view .LVU147
 466 0028 E06F     		ldr	r0, [r4, #124]
 467 002a FFF7FEFF 		bl	HAL_DMA_DeInit
 468              	.LVL30:
 177:Core/Src/usart.c ****   /* USER CODE BEGIN USART1_MspDeInit 1 */
 469              		.loc 1 177 5 view .LVU148
 470 002e 1B20     		movs	r0, #27
ARM GAS  /tmp/ccWPc7QX.s 			page 14


 471 0030 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 472              	.LVL31:
 473              		.loc 1 182 1 is_stmt 0 view .LVU149
 474 0034 EAE7     		b	.L23
 475              	.L27:
 476 0036 C046     		.align	2
 477              	.L26:
 478 0038 00380140 		.word	1073821696
 479 003c 00100240 		.word	1073876992
 480 0040 FFBFFFFF 		.word	-16385
 481 0044 00040050 		.word	1342178304
 482              		.cfi_endproc
 483              	.LFE329:
 485              		.global	hdma_usart1_tx
 486              		.global	hdma_usart1_rx
 487              		.global	huart1
 488              		.section	.bss.hdma_usart1_rx,"aw",%nobits
 489              		.align	2
 490              		.set	.LANCHOR0,. + 0
 493              	hdma_usart1_rx:
 494 0000 00000000 		.space	92
 494      00000000 
 494      00000000 
 494      00000000 
 494      00000000 
 495              		.section	.bss.hdma_usart1_tx,"aw",%nobits
 496              		.align	2
 497              		.set	.LANCHOR1,. + 0
 500              	hdma_usart1_tx:
 501 0000 00000000 		.space	92
 501      00000000 
 501      00000000 
 501      00000000 
 501      00000000 
 502              		.section	.bss.huart1,"aw",%nobits
 503              		.align	2
 506              	huart1:
 507 0000 00000000 		.space	148
 507      00000000 
 507      00000000 
 507      00000000 
 507      00000000 
 508              		.text
 509              	.Letext0:
 510              		.file 2 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 511              		.file 3 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g071xx.h"
 512              		.file 4 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 513              		.file 5 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_rcc_ex.h"
 514              		.file 6 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_gpio.h"
 515              		.file 7 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_dma.h"
 516              		.file 8 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart.h"
 517              		.file 9 "Core/Inc/usart.h"
 518              		.file 10 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h"
 519              		.file 11 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_cortex.h"
 520              		.file 12 "Core/Inc/main.h"
 521              		.file 13 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart_ex.h"
 522              		.file 14 "<built-in>"
ARM GAS  /tmp/ccWPc7QX.s 			page 15


ARM GAS  /tmp/ccWPc7QX.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usart.c
     /tmp/ccWPc7QX.s:16     .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccWPc7QX.s:24     .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccWPc7QX.s:139    .text.MX_USART1_UART_Init:0000000000000068 $d
     /tmp/ccWPc7QX.s:506    .bss.huart1:0000000000000000 huart1
     /tmp/ccWPc7QX.s:145    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccWPc7QX.s:152    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccWPc7QX.s:400    .text.HAL_UART_MspInit:00000000000000f0 $d
     /tmp/ccWPc7QX.s:411    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccWPc7QX.s:418    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccWPc7QX.s:478    .text.HAL_UART_MspDeInit:0000000000000038 $d
     /tmp/ccWPc7QX.s:500    .bss.hdma_usart1_tx:0000000000000000 hdma_usart1_tx
     /tmp/ccWPc7QX.s:493    .bss.hdma_usart1_rx:0000000000000000 hdma_usart1_rx
     /tmp/ccWPc7QX.s:489    .bss.hdma_usart1_rx:0000000000000000 $d
     /tmp/ccWPc7QX.s:496    .bss.hdma_usart1_tx:0000000000000000 $d
     /tmp/ccWPc7QX.s:503    .bss.huart1:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_UART_Init
HAL_UARTEx_SetTxFifoThreshold
HAL_UARTEx_SetRxFifoThreshold
HAL_UARTEx_DisableFifoMode
Error_Handler
memset
HAL_RCCEx_PeriphCLKConfig
HAL_GPIO_Init
HAL_DMA_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_DMA_DeInit
HAL_NVIC_DisableIRQ
