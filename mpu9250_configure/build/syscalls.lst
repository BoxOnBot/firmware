ARM GAS  /tmp/cclUcrVQ.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"syscalls.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.initialise_monitor_handles,"ax",%progbits
  16              		.align	1
  17              		.global	initialise_monitor_handles
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	initialise_monitor_handles:
  25              	.LFB25:
  26              		.file 1 "Core/Src/syscalls.c"
   1:Core/Src/syscalls.c **** /**
   2:Core/Src/syscalls.c **** *****************************************************************************
   3:Core/Src/syscalls.c **** **
   4:Core/Src/syscalls.c **** **  File        : syscalls.c
   5:Core/Src/syscalls.c **** **
   6:Core/Src/syscalls.c **** **  Author		: Auto-generated by System workbench for STM32
   7:Core/Src/syscalls.c **** **
   8:Core/Src/syscalls.c **** **  Abstract    : System Workbench Minimal System calls file
   9:Core/Src/syscalls.c **** **
  10:Core/Src/syscalls.c **** ** 		          For more information about which c-functions
  11:Core/Src/syscalls.c **** **                need which of these lowlevel functions
  12:Core/Src/syscalls.c **** **                please consult the Newlib libc-manual
  13:Core/Src/syscalls.c **** **
  14:Core/Src/syscalls.c **** **  Target      : STMicroelectronics STM32
  15:Core/Src/syscalls.c **** **
  16:Core/Src/syscalls.c **** **  Distribution: The file is distributed “as is,” without any warranty
  17:Core/Src/syscalls.c **** **                of any kind.
  18:Core/Src/syscalls.c **** **
  19:Core/Src/syscalls.c **** *****************************************************************************
  20:Core/Src/syscalls.c **** ** @attention
  21:Core/Src/syscalls.c **** **
  22:Core/Src/syscalls.c **** ** <h2><center>&copy; COPYRIGHT(c) 2019 STMicroelectronics</center></h2>
  23:Core/Src/syscalls.c **** **
  24:Core/Src/syscalls.c **** ** Redistribution and use in source and binary forms, with or without modification,
  25:Core/Src/syscalls.c **** ** are permitted provided that the following conditions are met:
  26:Core/Src/syscalls.c **** **   1. Redistributions of source code must retain the above copyright notice,
  27:Core/Src/syscalls.c **** **      this list of conditions and the following disclaimer.
  28:Core/Src/syscalls.c **** **   2. Redistributions in binary form must reproduce the above copyright notice,
  29:Core/Src/syscalls.c **** **      this list of conditions and the following disclaimer in the documentation
  30:Core/Src/syscalls.c **** **      and/or other materials provided with the distribution.
  31:Core/Src/syscalls.c **** **   3. Neither the name of STMicroelectronics nor the names of its contributors
  32:Core/Src/syscalls.c **** **      may be used to endorse or promote products derived from this software
ARM GAS  /tmp/cclUcrVQ.s 			page 2


  33:Core/Src/syscalls.c **** **      without specific prior written permission.
  34:Core/Src/syscalls.c **** **
  35:Core/Src/syscalls.c **** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  36:Core/Src/syscalls.c **** ** AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  37:Core/Src/syscalls.c **** ** IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  38:Core/Src/syscalls.c **** ** DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  39:Core/Src/syscalls.c **** ** FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  40:Core/Src/syscalls.c **** ** DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  41:Core/Src/syscalls.c **** ** SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  42:Core/Src/syscalls.c **** ** CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  43:Core/Src/syscalls.c **** ** OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  44:Core/Src/syscalls.c **** ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:Core/Src/syscalls.c **** **
  46:Core/Src/syscalls.c **** *****************************************************************************
  47:Core/Src/syscalls.c **** */
  48:Core/Src/syscalls.c **** 
  49:Core/Src/syscalls.c **** /* Includes */
  50:Core/Src/syscalls.c **** #include <sys/stat.h>
  51:Core/Src/syscalls.c **** #include <stdlib.h>
  52:Core/Src/syscalls.c **** #include <errno.h>
  53:Core/Src/syscalls.c **** #include <stdio.h>
  54:Core/Src/syscalls.c **** #include <signal.h>
  55:Core/Src/syscalls.c **** #include <time.h>
  56:Core/Src/syscalls.c **** #include <sys/time.h>
  57:Core/Src/syscalls.c **** #include <sys/times.h>
  58:Core/Src/syscalls.c **** 
  59:Core/Src/syscalls.c **** 
  60:Core/Src/syscalls.c **** /* Variables */
  61:Core/Src/syscalls.c **** //#undef errno
  62:Core/Src/syscalls.c **** extern int errno;
  63:Core/Src/syscalls.c **** extern int __io_putchar(int ch) __attribute__((weak));
  64:Core/Src/syscalls.c **** extern int __io_getchar(void) __attribute__((weak));
  65:Core/Src/syscalls.c **** 
  66:Core/Src/syscalls.c **** register char * stack_ptr asm("sp");
  67:Core/Src/syscalls.c **** 
  68:Core/Src/syscalls.c **** char *__env[1] = { 0 };
  69:Core/Src/syscalls.c **** char **environ = __env;
  70:Core/Src/syscalls.c **** 
  71:Core/Src/syscalls.c **** extern char _estack;  // see ld file
  72:Core/Src/syscalls.c **** extern char _Min_Stack_Size;  // see ld file
  73:Core/Src/syscalls.c **** 
  74:Core/Src/syscalls.c **** /* Functions */
  75:Core/Src/syscalls.c **** void initialise_monitor_handles()
  76:Core/Src/syscalls.c **** {
  27              		.loc 1 76 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  77:Core/Src/syscalls.c **** }
  32              		.loc 1 77 1 view .LVU1
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE25:
  37              		.section	.text._getpid,"ax",%progbits
  38              		.align	1
  39              		.global	_getpid
ARM GAS  /tmp/cclUcrVQ.s 			page 3


  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu softvfp
  45              	_getpid:
  46              	.LFB26:
  78:Core/Src/syscalls.c **** 
  79:Core/Src/syscalls.c **** int _getpid(void)
  80:Core/Src/syscalls.c **** {
  47              		.loc 1 80 1 view -0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
  81:Core/Src/syscalls.c **** 	return 1;
  52              		.loc 1 81 2 view .LVU3
  82:Core/Src/syscalls.c **** }
  53              		.loc 1 82 1 is_stmt 0 view .LVU4
  54 0000 0120     		movs	r0, #1
  55 0002 7047     		bx	lr
  56              		.cfi_endproc
  57              	.LFE26:
  59              		.section	.text._kill,"ax",%progbits
  60              		.align	1
  61              		.global	_kill
  62              		.syntax unified
  63              		.thumb
  64              		.thumb_func
  65              		.fpu softvfp
  67              	_kill:
  68              	.LVL0:
  69              	.LFB27:
  83:Core/Src/syscalls.c **** 
  84:Core/Src/syscalls.c **** int _kill(int pid, int sig)
  85:Core/Src/syscalls.c **** {
  70              		.loc 1 85 1 is_stmt 1 view -0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              		.loc 1 85 1 is_stmt 0 view .LVU6
  75 0000 08B5     		push	{r3, lr}
  76              	.LCFI0:
  77              		.cfi_def_cfa_offset 8
  78              		.cfi_offset 3, -8
  79              		.cfi_offset 14, -4
  86:Core/Src/syscalls.c **** 	errno = EINVAL;
  80              		.loc 1 86 2 is_stmt 1 view .LVU7
  81 0002 FFF7FEFF 		bl	__errno
  82              	.LVL1:
  83              		.loc 1 86 8 is_stmt 0 view .LVU8
  84 0006 1623     		movs	r3, #22
  85 0008 0360     		str	r3, [r0]
  87:Core/Src/syscalls.c **** 	return -1;
  86              		.loc 1 87 2 is_stmt 1 view .LVU9
  88:Core/Src/syscalls.c **** }
  87              		.loc 1 88 1 is_stmt 0 view .LVU10
  88 000a 4FF0FF30 		mov	r0, #-1
ARM GAS  /tmp/cclUcrVQ.s 			page 4


  89 000e 08BD     		pop	{r3, pc}
  90              		.cfi_endproc
  91              	.LFE27:
  93              		.section	.text._exit,"ax",%progbits
  94              		.align	1
  95              		.global	_exit
  96              		.syntax unified
  97              		.thumb
  98              		.thumb_func
  99              		.fpu softvfp
 101              	_exit:
 102              	.LVL2:
 103              	.LFB28:
  89:Core/Src/syscalls.c **** 
  90:Core/Src/syscalls.c **** void _exit (int status)
  91:Core/Src/syscalls.c **** {
 104              		.loc 1 91 1 is_stmt 1 view -0
 105              		.cfi_startproc
 106              		@ Volatile: function does not return.
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		.loc 1 91 1 is_stmt 0 view .LVU12
 110 0000 08B5     		push	{r3, lr}
 111              	.LCFI1:
 112              		.cfi_def_cfa_offset 8
 113              		.cfi_offset 3, -8
 114              		.cfi_offset 14, -4
  92:Core/Src/syscalls.c **** 	_kill(status, -1);
 115              		.loc 1 92 2 is_stmt 1 view .LVU13
 116 0002 4FF0FF31 		mov	r1, #-1
 117 0006 FFF7FEFF 		bl	_kill
 118              	.LVL3:
 119              	.L6:
  93:Core/Src/syscalls.c **** 	while (1) {}		/* Make sure we hang here */
 120              		.loc 1 93 2 discriminator 1 view .LVU14
 121              		.loc 1 93 13 discriminator 1 view .LVU15
 122              		.loc 1 93 8 discriminator 1 view .LVU16
 123 000a FEE7     		b	.L6
 124              		.cfi_endproc
 125              	.LFE28:
 127              		.section	.text._read,"ax",%progbits
 128              		.align	1
 129              		.weak	_read
 130              		.syntax unified
 131              		.thumb
 132              		.thumb_func
 133              		.fpu softvfp
 135              	_read:
 136              	.LVL4:
 137              	.LFB29:
  94:Core/Src/syscalls.c **** }
  95:Core/Src/syscalls.c **** 
  96:Core/Src/syscalls.c **** __attribute__((weak)) int _read(int file, char *ptr, int len)
  97:Core/Src/syscalls.c **** {
 138              		.loc 1 97 1 view -0
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cclUcrVQ.s 			page 5


 141              		@ frame_needed = 0, uses_anonymous_args = 0
 142              		.loc 1 97 1 is_stmt 0 view .LVU18
 143 0000 70B5     		push	{r4, r5, r6, lr}
 144              	.LCFI2:
 145              		.cfi_def_cfa_offset 16
 146              		.cfi_offset 4, -16
 147              		.cfi_offset 5, -12
 148              		.cfi_offset 6, -8
 149              		.cfi_offset 14, -4
 150 0002 0C46     		mov	r4, r1
 151 0004 1646     		mov	r6, r2
  98:Core/Src/syscalls.c **** 	int DataIdx;
 152              		.loc 1 98 2 is_stmt 1 view .LVU19
  99:Core/Src/syscalls.c **** 
 100:Core/Src/syscalls.c **** 	for (DataIdx = 0; DataIdx < len; DataIdx++)
 153              		.loc 1 100 2 view .LVU20
 154              	.LVL5:
 155              		.loc 1 100 15 is_stmt 0 view .LVU21
 156 0006 0025     		movs	r5, #0
 157              		.loc 1 100 2 view .LVU22
 158 0008 06E0     		b	.L9
 159              	.LVL6:
 160              	.L10:
 101:Core/Src/syscalls.c **** 	{
 102:Core/Src/syscalls.c **** 		*ptr++ = __io_getchar();
 161              		.loc 1 102 3 is_stmt 1 discriminator 3 view .LVU23
 162              		.loc 1 102 12 is_stmt 0 discriminator 3 view .LVU24
 163 000a FFF7FEFF 		bl	__io_getchar
 164              	.LVL7:
 165              		.loc 1 102 7 discriminator 3 view .LVU25
 166 000e 2146     		mov	r1, r4
 167              	.LVL8:
 168              		.loc 1 102 10 discriminator 3 view .LVU26
 169 0010 01F8010B 		strb	r0, [r1], #1
 170              	.LVL9:
 100:Core/Src/syscalls.c **** 	{
 171              		.loc 1 100 35 is_stmt 1 discriminator 3 view .LVU27
 100:Core/Src/syscalls.c **** 	{
 172              		.loc 1 100 42 is_stmt 0 discriminator 3 view .LVU28
 173 0014 0135     		adds	r5, r5, #1
 174              	.LVL10:
 175              		.loc 1 102 7 discriminator 3 view .LVU29
 176 0016 0C46     		mov	r4, r1
 177              	.LVL11:
 178              	.L9:
 100:Core/Src/syscalls.c **** 	{
 179              		.loc 1 100 20 is_stmt 1 discriminator 1 view .LVU30
 100:Core/Src/syscalls.c **** 	{
 180              		.loc 1 100 2 is_stmt 0 discriminator 1 view .LVU31
 181 0018 B542     		cmp	r5, r6
 182 001a F6DB     		blt	.L10
 103:Core/Src/syscalls.c **** 	}
 104:Core/Src/syscalls.c **** 
 105:Core/Src/syscalls.c **** return len;
 183              		.loc 1 105 1 is_stmt 1 view .LVU32
 106:Core/Src/syscalls.c **** }
 184              		.loc 1 106 1 is_stmt 0 view .LVU33
ARM GAS  /tmp/cclUcrVQ.s 			page 6


 185 001c 3046     		mov	r0, r6
 186 001e 70BD     		pop	{r4, r5, r6, pc}
 187              		.loc 1 106 1 view .LVU34
 188              		.cfi_endproc
 189              	.LFE29:
 191              		.section	.text._write,"ax",%progbits
 192              		.align	1
 193              		.weak	_write
 194              		.syntax unified
 195              		.thumb
 196              		.thumb_func
 197              		.fpu softvfp
 199              	_write:
 200              	.LVL12:
 201              	.LFB30:
 107:Core/Src/syscalls.c **** 
 108:Core/Src/syscalls.c **** __attribute__((weak)) int _write(int file, char *ptr, int len)
 109:Core/Src/syscalls.c **** {
 202              		.loc 1 109 1 is_stmt 1 view -0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 0, uses_anonymous_args = 0
 206              		.loc 1 109 1 is_stmt 0 view .LVU36
 207 0000 70B5     		push	{r4, r5, r6, lr}
 208              	.LCFI3:
 209              		.cfi_def_cfa_offset 16
 210              		.cfi_offset 4, -16
 211              		.cfi_offset 5, -12
 212              		.cfi_offset 6, -8
 213              		.cfi_offset 14, -4
 214 0002 0C46     		mov	r4, r1
 215 0004 1646     		mov	r6, r2
 110:Core/Src/syscalls.c **** 	int DataIdx;
 216              		.loc 1 110 2 is_stmt 1 view .LVU37
 111:Core/Src/syscalls.c **** 
 112:Core/Src/syscalls.c **** 	for (DataIdx = 0; DataIdx < len; DataIdx++)
 217              		.loc 1 112 2 view .LVU38
 218              	.LVL13:
 219              		.loc 1 112 15 is_stmt 0 view .LVU39
 220 0006 0025     		movs	r5, #0
 221              		.loc 1 112 2 view .LVU40
 222 0008 04E0     		b	.L13
 223              	.LVL14:
 224              	.L14:
 113:Core/Src/syscalls.c **** 	{
 114:Core/Src/syscalls.c **** 		__io_putchar(*ptr++);
 225              		.loc 1 114 3 is_stmt 1 discriminator 3 view .LVU41
 226              		.loc 1 114 3 is_stmt 0 discriminator 3 view .LVU42
 227 000a 14F8010B 		ldrb	r0, [r4], #1	@ zero_extendqisi2
 228              	.LVL15:
 229              		.loc 1 114 3 discriminator 3 view .LVU43
 230 000e FFF7FEFF 		bl	__io_putchar
 231              	.LVL16:
 112:Core/Src/syscalls.c **** 	{
 232              		.loc 1 112 35 is_stmt 1 discriminator 3 view .LVU44
 112:Core/Src/syscalls.c **** 	{
 233              		.loc 1 112 42 is_stmt 0 discriminator 3 view .LVU45
ARM GAS  /tmp/cclUcrVQ.s 			page 7


 234 0012 0135     		adds	r5, r5, #1
 235              	.LVL17:
 236              	.L13:
 112:Core/Src/syscalls.c **** 	{
 237              		.loc 1 112 20 is_stmt 1 discriminator 1 view .LVU46
 112:Core/Src/syscalls.c **** 	{
 238              		.loc 1 112 2 is_stmt 0 discriminator 1 view .LVU47
 239 0014 B542     		cmp	r5, r6
 240 0016 F8DB     		blt	.L14
 115:Core/Src/syscalls.c **** 	}
 116:Core/Src/syscalls.c **** 	return len;
 241              		.loc 1 116 2 is_stmt 1 view .LVU48
 117:Core/Src/syscalls.c **** }
 242              		.loc 1 117 1 is_stmt 0 view .LVU49
 243 0018 3046     		mov	r0, r6
 244 001a 70BD     		pop	{r4, r5, r6, pc}
 245              		.loc 1 117 1 view .LVU50
 246              		.cfi_endproc
 247              	.LFE30:
 249              		.section	.text._sbrk,"ax",%progbits
 250              		.align	1
 251              		.global	_sbrk
 252              		.syntax unified
 253              		.thumb
 254              		.thumb_func
 255              		.fpu softvfp
 257              	_sbrk:
 258              	.LVL18:
 259              	.LFB31:
 118:Core/Src/syscalls.c **** 
 119:Core/Src/syscalls.c **** caddr_t _sbrk(int incr) {
 260              		.loc 1 119 25 is_stmt 1 view -0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 0
 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264              		.loc 1 119 25 is_stmt 0 view .LVU52
 265 0000 08B5     		push	{r3, lr}
 266              	.LCFI4:
 267              		.cfi_def_cfa_offset 8
 268              		.cfi_offset 3, -8
 269              		.cfi_offset 14, -4
 270 0002 0346     		mov	r3, r0
 120:Core/Src/syscalls.c ****     extern char __heap_start__ asm("end");  // Defined by the linker.
 271              		.loc 1 120 5 is_stmt 1 view .LVU53
 121:Core/Src/syscalls.c ****     static char *heap_end;
 272              		.loc 1 121 5 view .LVU54
 122:Core/Src/syscalls.c ****     char *prev_heap_end;
 273              		.loc 1 122 5 view .LVU55
 123:Core/Src/syscalls.c **** 
 124:Core/Src/syscalls.c ****     if (heap_end == NULL) heap_end = &__heap_start__;
 274              		.loc 1 124 5 view .LVU56
 275              		.loc 1 124 18 is_stmt 0 view .LVU57
 276 0004 0D4A     		ldr	r2, .L23
 277 0006 1268     		ldr	r2, [r2]
 278              		.loc 1 124 8 view .LVU58
 279 0008 5AB1     		cbz	r2, .L21
 280              	.L17:
ARM GAS  /tmp/cclUcrVQ.s 			page 8


 125:Core/Src/syscalls.c **** 
 126:Core/Src/syscalls.c ****     prev_heap_end = heap_end;
 281              		.loc 1 126 5 is_stmt 1 view .LVU59
 282              		.loc 1 126 19 is_stmt 0 view .LVU60
 283 000a 0C4A     		ldr	r2, .L23
 284 000c 1068     		ldr	r0, [r2]
 285              	.LVL19:
 127:Core/Src/syscalls.c **** 
 128:Core/Src/syscalls.c ****     if (heap_end + incr > &_estack - _Min_Stack_Size) {
 286              		.loc 1 128 5 is_stmt 1 view .LVU61
 287              		.loc 1 128 18 is_stmt 0 view .LVU62
 288 000e 0344     		add	r3, r3, r0
 289              	.LVL20:
 290              		.loc 1 128 36 view .LVU63
 291 0010 0B4A     		ldr	r2, .L23+4
 292 0012 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 293 0014 0B4A     		ldr	r2, .L23+8
 294 0016 521A     		subs	r2, r2, r1
 295              		.loc 1 128 8 view .LVU64
 296 0018 9342     		cmp	r3, r2
 297 001a 06D8     		bhi	.L22
 129:Core/Src/syscalls.c ****     		__asm("BKPT #0\n");
 130:Core/Src/syscalls.c ****         errno = ENOMEM;
 131:Core/Src/syscalls.c ****         return (caddr_t)-1;
 132:Core/Src/syscalls.c **** 
 133:Core/Src/syscalls.c ****     }
 134:Core/Src/syscalls.c **** 
 135:Core/Src/syscalls.c ****     heap_end += incr;
 298              		.loc 1 135 5 is_stmt 1 view .LVU65
 299              		.loc 1 135 14 is_stmt 0 view .LVU66
 300 001c 074A     		ldr	r2, .L23
 301 001e 1360     		str	r3, [r2]
 136:Core/Src/syscalls.c ****     return (caddr_t)prev_heap_end;
 302              		.loc 1 136 5 is_stmt 1 view .LVU67
 303              	.LVL21:
 304              	.L16:
 137:Core/Src/syscalls.c **** 
 138:Core/Src/syscalls.c **** }
 305              		.loc 1 138 1 is_stmt 0 view .LVU68
 306 0020 08BD     		pop	{r3, pc}
 307              	.LVL22:
 308              	.L21:
 124:Core/Src/syscalls.c **** 
 309              		.loc 1 124 27 is_stmt 1 discriminator 1 view .LVU69
 124:Core/Src/syscalls.c **** 
 310              		.loc 1 124 36 is_stmt 0 discriminator 1 view .LVU70
 311 0022 064A     		ldr	r2, .L23
 312 0024 0849     		ldr	r1, .L23+12
 313 0026 1160     		str	r1, [r2]
 314 0028 EFE7     		b	.L17
 315              	.LVL23:
 316              	.L22:
 129:Core/Src/syscalls.c ****         errno = ENOMEM;
 317              		.loc 1 129 7 is_stmt 1 view .LVU71
 318              		.syntax unified
 319              	@ 129 "Core/Src/syscalls.c" 1
 320 002a 00BE     		BKPT #0
ARM GAS  /tmp/cclUcrVQ.s 			page 9


 321              	
 322              	@ 0 "" 2
 130:Core/Src/syscalls.c ****         return (caddr_t)-1;
 323              		.loc 1 130 9 view .LVU72
 324              		.thumb
 325              		.syntax unified
 326 002c FFF7FEFF 		bl	__errno
 327              	.LVL24:
 130:Core/Src/syscalls.c ****         return (caddr_t)-1;
 328              		.loc 1 130 15 is_stmt 0 view .LVU73
 329 0030 0C23     		movs	r3, #12
 330 0032 0360     		str	r3, [r0]
 131:Core/Src/syscalls.c **** 
 331              		.loc 1 131 9 is_stmt 1 view .LVU74
 131:Core/Src/syscalls.c **** 
 332              		.loc 1 131 16 is_stmt 0 view .LVU75
 333 0034 4FF0FF30 		mov	r0, #-1
 334 0038 F2E7     		b	.L16
 335              	.L24:
 336 003a 00BF     		.align	2
 337              	.L23:
 338 003c 00000000 		.word	.LANCHOR0
 339 0040 00000000 		.word	_Min_Stack_Size
 340 0044 00000000 		.word	_estack
 341 0048 00000000 		.word	end
 342              		.cfi_endproc
 343              	.LFE31:
 345              		.section	.text._close,"ax",%progbits
 346              		.align	1
 347              		.global	_close
 348              		.syntax unified
 349              		.thumb
 350              		.thumb_func
 351              		.fpu softvfp
 353              	_close:
 354              	.LVL25:
 355              	.LFB32:
 139:Core/Src/syscalls.c **** 
 140:Core/Src/syscalls.c **** int _close(int file)
 141:Core/Src/syscalls.c **** {
 356              		.loc 1 141 1 is_stmt 1 view -0
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 0
 359              		@ frame_needed = 0, uses_anonymous_args = 0
 360              		@ link register save eliminated.
 142:Core/Src/syscalls.c **** 	return -1;
 361              		.loc 1 142 2 view .LVU77
 143:Core/Src/syscalls.c **** }
 362              		.loc 1 143 1 is_stmt 0 view .LVU78
 363 0000 4FF0FF30 		mov	r0, #-1
 364              	.LVL26:
 365              		.loc 1 143 1 view .LVU79
 366 0004 7047     		bx	lr
 367              		.cfi_endproc
 368              	.LFE32:
 370              		.section	.text._fstat,"ax",%progbits
 371              		.align	1
ARM GAS  /tmp/cclUcrVQ.s 			page 10


 372              		.global	_fstat
 373              		.syntax unified
 374              		.thumb
 375              		.thumb_func
 376              		.fpu softvfp
 378              	_fstat:
 379              	.LVL27:
 380              	.LFB33:
 144:Core/Src/syscalls.c **** 
 145:Core/Src/syscalls.c **** 
 146:Core/Src/syscalls.c **** int _fstat(int file, struct stat *st)
 147:Core/Src/syscalls.c **** {
 381              		.loc 1 147 1 is_stmt 1 view -0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 0
 384              		@ frame_needed = 0, uses_anonymous_args = 0
 385              		@ link register save eliminated.
 148:Core/Src/syscalls.c **** 	st->st_mode = S_IFCHR;
 386              		.loc 1 148 2 view .LVU81
 387              		.loc 1 148 14 is_stmt 0 view .LVU82
 388 0000 4FF40053 		mov	r3, #8192
 389 0004 4B60     		str	r3, [r1, #4]
 149:Core/Src/syscalls.c **** 	return 0;
 390              		.loc 1 149 2 is_stmt 1 view .LVU83
 150:Core/Src/syscalls.c **** }
 391              		.loc 1 150 1 is_stmt 0 view .LVU84
 392 0006 0020     		movs	r0, #0
 393              	.LVL28:
 394              		.loc 1 150 1 view .LVU85
 395 0008 7047     		bx	lr
 396              		.cfi_endproc
 397              	.LFE33:
 399              		.section	.text._isatty,"ax",%progbits
 400              		.align	1
 401              		.global	_isatty
 402              		.syntax unified
 403              		.thumb
 404              		.thumb_func
 405              		.fpu softvfp
 407              	_isatty:
 408              	.LVL29:
 409              	.LFB34:
 151:Core/Src/syscalls.c **** 
 152:Core/Src/syscalls.c **** int _isatty(int file)
 153:Core/Src/syscalls.c **** {
 410              		.loc 1 153 1 is_stmt 1 view -0
 411              		.cfi_startproc
 412              		@ args = 0, pretend = 0, frame = 0
 413              		@ frame_needed = 0, uses_anonymous_args = 0
 414              		@ link register save eliminated.
 154:Core/Src/syscalls.c **** 	return 1;
 415              		.loc 1 154 2 view .LVU87
 155:Core/Src/syscalls.c **** }
 416              		.loc 1 155 1 is_stmt 0 view .LVU88
 417 0000 0120     		movs	r0, #1
 418              	.LVL30:
 419              		.loc 1 155 1 view .LVU89
ARM GAS  /tmp/cclUcrVQ.s 			page 11


 420 0002 7047     		bx	lr
 421              		.cfi_endproc
 422              	.LFE34:
 424              		.section	.text._lseek,"ax",%progbits
 425              		.align	1
 426              		.global	_lseek
 427              		.syntax unified
 428              		.thumb
 429              		.thumb_func
 430              		.fpu softvfp
 432              	_lseek:
 433              	.LVL31:
 434              	.LFB35:
 156:Core/Src/syscalls.c **** 
 157:Core/Src/syscalls.c **** int _lseek(int file, int ptr, int dir)
 158:Core/Src/syscalls.c **** {
 435              		.loc 1 158 1 is_stmt 1 view -0
 436              		.cfi_startproc
 437              		@ args = 0, pretend = 0, frame = 0
 438              		@ frame_needed = 0, uses_anonymous_args = 0
 439              		@ link register save eliminated.
 159:Core/Src/syscalls.c **** 	return 0;
 440              		.loc 1 159 2 view .LVU91
 160:Core/Src/syscalls.c **** }
 441              		.loc 1 160 1 is_stmt 0 view .LVU92
 442 0000 0020     		movs	r0, #0
 443              	.LVL32:
 444              		.loc 1 160 1 view .LVU93
 445 0002 7047     		bx	lr
 446              		.cfi_endproc
 447              	.LFE35:
 449              		.section	.text._open,"ax",%progbits
 450              		.align	1
 451              		.global	_open
 452              		.syntax unified
 453              		.thumb
 454              		.thumb_func
 455              		.fpu softvfp
 457              	_open:
 458              	.LVL33:
 459              	.LFB36:
 161:Core/Src/syscalls.c **** 
 162:Core/Src/syscalls.c **** int _open(char *path, int flags, ...)
 163:Core/Src/syscalls.c **** {
 460              		.loc 1 163 1 is_stmt 1 view -0
 461              		.cfi_startproc
 462              		@ args = 4, pretend = 12, frame = 0
 463              		@ frame_needed = 0, uses_anonymous_args = 1
 464              		@ link register save eliminated.
 465              		.loc 1 163 1 is_stmt 0 view .LVU95
 466 0000 0EB4     		push	{r1, r2, r3}
 467              	.LCFI5:
 468              		.cfi_def_cfa_offset 12
 469              		.cfi_offset 1, -12
 470              		.cfi_offset 2, -8
 471              		.cfi_offset 3, -4
 164:Core/Src/syscalls.c **** 	/* Pretend like we always fail */
ARM GAS  /tmp/cclUcrVQ.s 			page 12


 165:Core/Src/syscalls.c **** 	return -1;
 472              		.loc 1 165 2 is_stmt 1 view .LVU96
 166:Core/Src/syscalls.c **** }
 473              		.loc 1 166 1 is_stmt 0 view .LVU97
 474 0002 4FF0FF30 		mov	r0, #-1
 475              	.LVL34:
 476              		.loc 1 166 1 view .LVU98
 477 0006 03B0     		add	sp, sp, #12
 478              	.LCFI6:
 479              		.cfi_restore 3
 480              		.cfi_restore 2
 481              		.cfi_restore 1
 482              		.cfi_def_cfa_offset 0
 483 0008 7047     		bx	lr
 484              		.cfi_endproc
 485              	.LFE36:
 487              		.section	.text._wait,"ax",%progbits
 488              		.align	1
 489              		.global	_wait
 490              		.syntax unified
 491              		.thumb
 492              		.thumb_func
 493              		.fpu softvfp
 495              	_wait:
 496              	.LVL35:
 497              	.LFB37:
 167:Core/Src/syscalls.c **** 
 168:Core/Src/syscalls.c **** int _wait(int *status)
 169:Core/Src/syscalls.c **** {
 498              		.loc 1 169 1 is_stmt 1 view -0
 499              		.cfi_startproc
 500              		@ args = 0, pretend = 0, frame = 0
 501              		@ frame_needed = 0, uses_anonymous_args = 0
 502              		.loc 1 169 1 is_stmt 0 view .LVU100
 503 0000 08B5     		push	{r3, lr}
 504              	.LCFI7:
 505              		.cfi_def_cfa_offset 8
 506              		.cfi_offset 3, -8
 507              		.cfi_offset 14, -4
 170:Core/Src/syscalls.c **** 	errno = ECHILD;
 508              		.loc 1 170 2 is_stmt 1 view .LVU101
 509 0002 FFF7FEFF 		bl	__errno
 510              	.LVL36:
 511              		.loc 1 170 8 is_stmt 0 view .LVU102
 512 0006 0A23     		movs	r3, #10
 513 0008 0360     		str	r3, [r0]
 171:Core/Src/syscalls.c **** 	return -1;
 514              		.loc 1 171 2 is_stmt 1 view .LVU103
 172:Core/Src/syscalls.c **** }
 515              		.loc 1 172 1 is_stmt 0 view .LVU104
 516 000a 4FF0FF30 		mov	r0, #-1
 517 000e 08BD     		pop	{r3, pc}
 518              		.cfi_endproc
 519              	.LFE37:
 521              		.section	.text._unlink,"ax",%progbits
 522              		.align	1
 523              		.global	_unlink
ARM GAS  /tmp/cclUcrVQ.s 			page 13


 524              		.syntax unified
 525              		.thumb
 526              		.thumb_func
 527              		.fpu softvfp
 529              	_unlink:
 530              	.LVL37:
 531              	.LFB38:
 173:Core/Src/syscalls.c **** 
 174:Core/Src/syscalls.c **** int _unlink(char *name)
 175:Core/Src/syscalls.c **** {
 532              		.loc 1 175 1 is_stmt 1 view -0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 0
 535              		@ frame_needed = 0, uses_anonymous_args = 0
 536              		.loc 1 175 1 is_stmt 0 view .LVU106
 537 0000 08B5     		push	{r3, lr}
 538              	.LCFI8:
 539              		.cfi_def_cfa_offset 8
 540              		.cfi_offset 3, -8
 541              		.cfi_offset 14, -4
 176:Core/Src/syscalls.c **** 	errno = ENOENT;
 542              		.loc 1 176 2 is_stmt 1 view .LVU107
 543 0002 FFF7FEFF 		bl	__errno
 544              	.LVL38:
 545              		.loc 1 176 8 is_stmt 0 view .LVU108
 546 0006 0223     		movs	r3, #2
 547 0008 0360     		str	r3, [r0]
 177:Core/Src/syscalls.c **** 	return -1;
 548              		.loc 1 177 2 is_stmt 1 view .LVU109
 178:Core/Src/syscalls.c **** }
 549              		.loc 1 178 1 is_stmt 0 view .LVU110
 550 000a 4FF0FF30 		mov	r0, #-1
 551 000e 08BD     		pop	{r3, pc}
 552              		.cfi_endproc
 553              	.LFE38:
 555              		.section	.text._times,"ax",%progbits
 556              		.align	1
 557              		.global	_times
 558              		.syntax unified
 559              		.thumb
 560              		.thumb_func
 561              		.fpu softvfp
 563              	_times:
 564              	.LVL39:
 565              	.LFB39:
 179:Core/Src/syscalls.c **** 
 180:Core/Src/syscalls.c **** int _times(struct tms *buf)
 181:Core/Src/syscalls.c **** {
 566              		.loc 1 181 1 is_stmt 1 view -0
 567              		.cfi_startproc
 568              		@ args = 0, pretend = 0, frame = 0
 569              		@ frame_needed = 0, uses_anonymous_args = 0
 570              		@ link register save eliminated.
 182:Core/Src/syscalls.c **** 	return -1;
 571              		.loc 1 182 2 view .LVU112
 183:Core/Src/syscalls.c **** }
 572              		.loc 1 183 1 is_stmt 0 view .LVU113
ARM GAS  /tmp/cclUcrVQ.s 			page 14


 573 0000 4FF0FF30 		mov	r0, #-1
 574              	.LVL40:
 575              		.loc 1 183 1 view .LVU114
 576 0004 7047     		bx	lr
 577              		.cfi_endproc
 578              	.LFE39:
 580              		.section	.text._stat,"ax",%progbits
 581              		.align	1
 582              		.global	_stat
 583              		.syntax unified
 584              		.thumb
 585              		.thumb_func
 586              		.fpu softvfp
 588              	_stat:
 589              	.LVL41:
 590              	.LFB40:
 184:Core/Src/syscalls.c **** 
 185:Core/Src/syscalls.c **** int _stat(char *file, struct stat *st)
 186:Core/Src/syscalls.c **** {
 591              		.loc 1 186 1 is_stmt 1 view -0
 592              		.cfi_startproc
 593              		@ args = 0, pretend = 0, frame = 0
 594              		@ frame_needed = 0, uses_anonymous_args = 0
 595              		@ link register save eliminated.
 187:Core/Src/syscalls.c **** 	st->st_mode = S_IFCHR;
 596              		.loc 1 187 2 view .LVU116
 597              		.loc 1 187 14 is_stmt 0 view .LVU117
 598 0000 4FF40053 		mov	r3, #8192
 599 0004 4B60     		str	r3, [r1, #4]
 188:Core/Src/syscalls.c **** 	return 0;
 600              		.loc 1 188 2 is_stmt 1 view .LVU118
 189:Core/Src/syscalls.c **** }
 601              		.loc 1 189 1 is_stmt 0 view .LVU119
 602 0006 0020     		movs	r0, #0
 603              	.LVL42:
 604              		.loc 1 189 1 view .LVU120
 605 0008 7047     		bx	lr
 606              		.cfi_endproc
 607              	.LFE40:
 609              		.section	.text._link,"ax",%progbits
 610              		.align	1
 611              		.global	_link
 612              		.syntax unified
 613              		.thumb
 614              		.thumb_func
 615              		.fpu softvfp
 617              	_link:
 618              	.LVL43:
 619              	.LFB41:
 190:Core/Src/syscalls.c **** 
 191:Core/Src/syscalls.c **** int _link(char *old, char *new)
 192:Core/Src/syscalls.c **** {
 620              		.loc 1 192 1 is_stmt 1 view -0
 621              		.cfi_startproc
 622              		@ args = 0, pretend = 0, frame = 0
 623              		@ frame_needed = 0, uses_anonymous_args = 0
 624              		.loc 1 192 1 is_stmt 0 view .LVU122
ARM GAS  /tmp/cclUcrVQ.s 			page 15


 625 0000 08B5     		push	{r3, lr}
 626              	.LCFI9:
 627              		.cfi_def_cfa_offset 8
 628              		.cfi_offset 3, -8
 629              		.cfi_offset 14, -4
 193:Core/Src/syscalls.c **** 	errno = EMLINK;
 630              		.loc 1 193 2 is_stmt 1 view .LVU123
 631 0002 FFF7FEFF 		bl	__errno
 632              	.LVL44:
 633              		.loc 1 193 8 is_stmt 0 view .LVU124
 634 0006 1F23     		movs	r3, #31
 635 0008 0360     		str	r3, [r0]
 194:Core/Src/syscalls.c **** 	return -1;
 636              		.loc 1 194 2 is_stmt 1 view .LVU125
 195:Core/Src/syscalls.c **** }
 637              		.loc 1 195 1 is_stmt 0 view .LVU126
 638 000a 4FF0FF30 		mov	r0, #-1
 639 000e 08BD     		pop	{r3, pc}
 640              		.cfi_endproc
 641              	.LFE41:
 643              		.section	.text._fork,"ax",%progbits
 644              		.align	1
 645              		.global	_fork
 646              		.syntax unified
 647              		.thumb
 648              		.thumb_func
 649              		.fpu softvfp
 651              	_fork:
 652              	.LFB42:
 196:Core/Src/syscalls.c **** 
 197:Core/Src/syscalls.c **** int _fork(void)
 198:Core/Src/syscalls.c **** {
 653              		.loc 1 198 1 is_stmt 1 view -0
 654              		.cfi_startproc
 655              		@ args = 0, pretend = 0, frame = 0
 656              		@ frame_needed = 0, uses_anonymous_args = 0
 657 0000 08B5     		push	{r3, lr}
 658              	.LCFI10:
 659              		.cfi_def_cfa_offset 8
 660              		.cfi_offset 3, -8
 661              		.cfi_offset 14, -4
 199:Core/Src/syscalls.c **** 	errno = EAGAIN;
 662              		.loc 1 199 2 view .LVU128
 663 0002 FFF7FEFF 		bl	__errno
 664              	.LVL45:
 665              		.loc 1 199 8 is_stmt 0 view .LVU129
 666 0006 0B23     		movs	r3, #11
 667 0008 0360     		str	r3, [r0]
 200:Core/Src/syscalls.c **** 	return -1;
 668              		.loc 1 200 2 is_stmt 1 view .LVU130
 201:Core/Src/syscalls.c **** }
 669              		.loc 1 201 1 is_stmt 0 view .LVU131
 670 000a 4FF0FF30 		mov	r0, #-1
 671 000e 08BD     		pop	{r3, pc}
 672              		.cfi_endproc
 673              	.LFE42:
 675              		.section	.text._execve,"ax",%progbits
ARM GAS  /tmp/cclUcrVQ.s 			page 16


 676              		.align	1
 677              		.global	_execve
 678              		.syntax unified
 679              		.thumb
 680              		.thumb_func
 681              		.fpu softvfp
 683              	_execve:
 684              	.LVL46:
 685              	.LFB43:
 202:Core/Src/syscalls.c **** 
 203:Core/Src/syscalls.c **** int _execve(char *name, char **argv, char **env)
 204:Core/Src/syscalls.c **** {
 686              		.loc 1 204 1 is_stmt 1 view -0
 687              		.cfi_startproc
 688              		@ args = 0, pretend = 0, frame = 0
 689              		@ frame_needed = 0, uses_anonymous_args = 0
 690              		.loc 1 204 1 is_stmt 0 view .LVU133
 691 0000 08B5     		push	{r3, lr}
 692              	.LCFI11:
 693              		.cfi_def_cfa_offset 8
 694              		.cfi_offset 3, -8
 695              		.cfi_offset 14, -4
 205:Core/Src/syscalls.c **** 	errno = ENOMEM;
 696              		.loc 1 205 2 is_stmt 1 view .LVU134
 697 0002 FFF7FEFF 		bl	__errno
 698              	.LVL47:
 699              		.loc 1 205 8 is_stmt 0 view .LVU135
 700 0006 0C23     		movs	r3, #12
 701 0008 0360     		str	r3, [r0]
 206:Core/Src/syscalls.c **** 	return -1;
 702              		.loc 1 206 2 is_stmt 1 view .LVU136
 207:Core/Src/syscalls.c **** }...
 703              		.loc 1 207 1 is_stmt 0 view .LVU137
 704 000a 4FF0FF30 		mov	r0, #-1
 705 000e 08BD     		pop	{r3, pc}
 706              		.cfi_endproc
 707              	.LFE43:
 709              		.global	environ
 710              		.global	__env
 711              		.section	.bss.__env,"aw",%nobits
 712              		.align	2
 715              	__env:
 716 0000 00000000 		.space	4
 717              		.section	.bss.heap_end.0,"aw",%nobits
 718              		.align	2
 719              		.set	.LANCHOR0,. + 0
 722              	heap_end.0:
 723 0000 00000000 		.space	4
 724              		.section	.data.environ,"aw"
 725              		.align	2
 728              	environ:
 729 0000 00000000 		.word	__env
 730              		.weak	__io_putchar
 731              		.weak	__io_getchar
 732              		.text
 733              	.Letext0:
 734              		.file 2 "/usr/include/newlib/machine/_default_types.h"
ARM GAS  /tmp/cclUcrVQ.s 			page 17


 735              		.file 3 "/usr/include/newlib/sys/_types.h"
 736              		.file 4 "/usr/include/newlib/sys/_timeval.h"
 737              		.file 5 "/usr/include/newlib/sys/_timespec.h"
 738              		.file 6 "/usr/include/newlib/sys/types.h"
 739              		.file 7 "/usr/include/newlib/sys/stat.h"
 740              		.file 8 "/usr/include/newlib/sys/times.h"
 741              		.file 9 "/usr/include/newlib/sys/errno.h"
ARM GAS  /tmp/cclUcrVQ.s 			page 18


DEFINED SYMBOLS
                            *ABS*:0000000000000000 syscalls.c
     /tmp/cclUcrVQ.s:16     .text.initialise_monitor_handles:0000000000000000 $t
     /tmp/cclUcrVQ.s:24     .text.initialise_monitor_handles:0000000000000000 initialise_monitor_handles
     /tmp/cclUcrVQ.s:38     .text._getpid:0000000000000000 $t
     /tmp/cclUcrVQ.s:45     .text._getpid:0000000000000000 _getpid
     /tmp/cclUcrVQ.s:60     .text._kill:0000000000000000 $t
     /tmp/cclUcrVQ.s:67     .text._kill:0000000000000000 _kill
     /tmp/cclUcrVQ.s:94     .text._exit:0000000000000000 $t
     /tmp/cclUcrVQ.s:101    .text._exit:0000000000000000 _exit
     /tmp/cclUcrVQ.s:128    .text._read:0000000000000000 $t
     /tmp/cclUcrVQ.s:135    .text._read:0000000000000000 _read
     /tmp/cclUcrVQ.s:192    .text._write:0000000000000000 $t
     /tmp/cclUcrVQ.s:199    .text._write:0000000000000000 _write
     /tmp/cclUcrVQ.s:250    .text._sbrk:0000000000000000 $t
     /tmp/cclUcrVQ.s:257    .text._sbrk:0000000000000000 _sbrk
     /tmp/cclUcrVQ.s:338    .text._sbrk:000000000000003c $d
     /tmp/cclUcrVQ.s:346    .text._close:0000000000000000 $t
     /tmp/cclUcrVQ.s:353    .text._close:0000000000000000 _close
     /tmp/cclUcrVQ.s:371    .text._fstat:0000000000000000 $t
     /tmp/cclUcrVQ.s:378    .text._fstat:0000000000000000 _fstat
     /tmp/cclUcrVQ.s:400    .text._isatty:0000000000000000 $t
     /tmp/cclUcrVQ.s:407    .text._isatty:0000000000000000 _isatty
     /tmp/cclUcrVQ.s:425    .text._lseek:0000000000000000 $t
     /tmp/cclUcrVQ.s:432    .text._lseek:0000000000000000 _lseek
     /tmp/cclUcrVQ.s:450    .text._open:0000000000000000 $t
     /tmp/cclUcrVQ.s:457    .text._open:0000000000000000 _open
     /tmp/cclUcrVQ.s:488    .text._wait:0000000000000000 $t
     /tmp/cclUcrVQ.s:495    .text._wait:0000000000000000 _wait
     /tmp/cclUcrVQ.s:522    .text._unlink:0000000000000000 $t
     /tmp/cclUcrVQ.s:529    .text._unlink:0000000000000000 _unlink
     /tmp/cclUcrVQ.s:556    .text._times:0000000000000000 $t
     /tmp/cclUcrVQ.s:563    .text._times:0000000000000000 _times
     /tmp/cclUcrVQ.s:581    .text._stat:0000000000000000 $t
     /tmp/cclUcrVQ.s:588    .text._stat:0000000000000000 _stat
     /tmp/cclUcrVQ.s:610    .text._link:0000000000000000 $t
     /tmp/cclUcrVQ.s:617    .text._link:0000000000000000 _link
     /tmp/cclUcrVQ.s:644    .text._fork:0000000000000000 $t
     /tmp/cclUcrVQ.s:651    .text._fork:0000000000000000 _fork
     /tmp/cclUcrVQ.s:676    .text._execve:0000000000000000 $t
     /tmp/cclUcrVQ.s:683    .text._execve:0000000000000000 _execve
     /tmp/cclUcrVQ.s:728    .data.environ:0000000000000000 environ
     /tmp/cclUcrVQ.s:715    .bss.__env:0000000000000000 __env
     /tmp/cclUcrVQ.s:712    .bss.__env:0000000000000000 $d
     /tmp/cclUcrVQ.s:718    .bss.heap_end.0:0000000000000000 $d
     /tmp/cclUcrVQ.s:722    .bss.heap_end.0:0000000000000000 heap_end.0
     /tmp/cclUcrVQ.s:725    .data.environ:0000000000000000 $d

UNDEFINED SYMBOLS
__errno
__io_getchar
__io_putchar
_Min_Stack_Size
_estack
end
