ARM GAS  /tmp/ccDOSTOF.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"freertos.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.rodata.StartDefaultTask.str1.4,"aMS",%progbits,1
  16              		.align	2
  17              	.LC0:
  18 0000 4572726F 		.ascii	"Error on default allocators (line %d)\012\000"
  18      72206F6E 
  18      20646566 
  18      61756C74 
  18      20616C6C 
  19 0027 00       		.align	2
  20              	.LC1:
  21 0028 00       		.ascii	"\000"
  22 0029 000000   		.align	2
  23              	.LC2:
  24 002c 63756265 		.ascii	"cubemx_node\000"
  24      6D785F6E 
  24      6F646500 
  25              		.align	2
  26              	.LC3:
  27 0038 63756265 		.ascii	"cubemx_publisher\000"
  27      6D785F70 
  27      75626C69 
  27      73686572 
  27      00
  28              		.section	.text.StartDefaultTask,"ax",%progbits
  29              		.align	1
  30              		.global	StartDefaultTask
  31              		.arch armv7-m
  32              		.syntax unified
  33              		.thumb
  34              		.thumb_func
  35              		.fpu softvfp
  37              	StartDefaultTask:
  38              	.LVL0:
  39              	.LFB74:
  40              		.file 1 "Core/Src/freertos.c"
   1:Core/Src/freertos.c **** /* USER CODE BEGIN Header */
   2:Core/Src/freertos.c **** /**
   3:Core/Src/freertos.c ****   ******************************************************************************
   4:Core/Src/freertos.c ****   * File Name          : freertos.c
   5:Core/Src/freertos.c ****   * Description        : Code for freertos applications
   6:Core/Src/freertos.c ****   ******************************************************************************
   7:Core/Src/freertos.c ****   * @attention
   8:Core/Src/freertos.c ****   *
ARM GAS  /tmp/ccDOSTOF.s 			page 2


   9:Core/Src/freertos.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/freertos.c ****   * All rights reserved.
  11:Core/Src/freertos.c ****   *
  12:Core/Src/freertos.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/freertos.c ****   * in the root directory of this software component.
  14:Core/Src/freertos.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/freertos.c ****   *
  16:Core/Src/freertos.c ****   ******************************************************************************
  17:Core/Src/freertos.c ****   */
  18:Core/Src/freertos.c **** /* USER CODE END Header */
  19:Core/Src/freertos.c **** 
  20:Core/Src/freertos.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/freertos.c **** #include "FreeRTOS.h"
  22:Core/Src/freertos.c **** #include "task.h"
  23:Core/Src/freertos.c **** #include "main.h"
  24:Core/Src/freertos.c **** #include "cmsis_os.h"
  25:Core/Src/freertos.c **** 
  26:Core/Src/freertos.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/freertos.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/freertos.c **** #include <rcl/rcl.h>
  29:Core/Src/freertos.c **** #include <rcl/error_handling.h>
  30:Core/Src/freertos.c **** #include <rclc/rclc.h>
  31:Core/Src/freertos.c **** #include <rclc/executor.h>
  32:Core/Src/freertos.c **** #include <uxr/client/transport.h>
  33:Core/Src/freertos.c **** #include <rmw_microxrcedds_c/config.h>
  34:Core/Src/freertos.c **** #include <rmw_microros/rmw_microros.h>
  35:Core/Src/freertos.c **** 
  36:Core/Src/freertos.c **** #include <std_msgs/msg/int32.h>
  37:Core/Src/freertos.c **** 
  38:Core/Src/freertos.c **** #include <stdbool.h>
  39:Core/Src/freertos.c **** #include <usart.h>
  40:Core/Src/freertos.c **** /* USER CODE END Includes */
  41:Core/Src/freertos.c **** 
  42:Core/Src/freertos.c **** /* Private typedef -----------------------------------------------------------*/
  43:Core/Src/freertos.c **** typedef StaticTask_t osStaticThreadDef_t;
  44:Core/Src/freertos.c **** /* USER CODE BEGIN PTD */
  45:Core/Src/freertos.c **** 
  46:Core/Src/freertos.c **** /* USER CODE END PTD */
  47:Core/Src/freertos.c **** 
  48:Core/Src/freertos.c **** /* Private define ------------------------------------------------------------*/
  49:Core/Src/freertos.c **** /* USER CODE BEGIN PD */
  50:Core/Src/freertos.c **** 
  51:Core/Src/freertos.c **** /* USER CODE END PD */
  52:Core/Src/freertos.c **** 
  53:Core/Src/freertos.c **** /* Private macro -------------------------------------------------------------*/
  54:Core/Src/freertos.c **** /* USER CODE BEGIN PM */
  55:Core/Src/freertos.c **** 
  56:Core/Src/freertos.c **** /* USER CODE END PM */
  57:Core/Src/freertos.c **** 
  58:Core/Src/freertos.c **** /* Private variables ---------------------------------------------------------*/
  59:Core/Src/freertos.c **** /* USER CODE BEGIN Variables */
  60:Core/Src/freertos.c **** 
  61:Core/Src/freertos.c **** /* USER CODE END Variables */
  62:Core/Src/freertos.c **** /* Definitions for defaultTask */
  63:Core/Src/freertos.c **** osThreadId_t defaultTaskHandle;
  64:Core/Src/freertos.c **** uint32_t defaultTaskBuffer[ 500 ];
  65:Core/Src/freertos.c **** osStaticThreadDef_t defaultTaskControlBlock;
ARM GAS  /tmp/ccDOSTOF.s 			page 3


  66:Core/Src/freertos.c **** const osThreadAttr_t defaultTask_attributes = {
  67:Core/Src/freertos.c ****   .name = "defaultTask",
  68:Core/Src/freertos.c ****   .cb_mem = &defaultTaskControlBlock,
  69:Core/Src/freertos.c ****   .cb_size = sizeof(defaultTaskControlBlock),
  70:Core/Src/freertos.c ****   .stack_mem = &defaultTaskBuffer[0],
  71:Core/Src/freertos.c ****   .stack_size = sizeof(defaultTaskBuffer),
  72:Core/Src/freertos.c ****   .priority = (osPriority_t) osPriorityNormal,
  73:Core/Src/freertos.c **** };
  74:Core/Src/freertos.c **** 
  75:Core/Src/freertos.c **** /* Private function prototypes -----------------------------------------------*/
  76:Core/Src/freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  77:Core/Src/freertos.c **** bool cubemx_transport_open(struct uxrCustomTransport * transport);
  78:Core/Src/freertos.c **** bool cubemx_transport_close(struct uxrCustomTransport * transport);
  79:Core/Src/freertos.c **** size_t cubemx_transport_write(struct uxrCustomTransport* transport, const uint8_t * buf, size_t len
  80:Core/Src/freertos.c **** size_t cubemx_transport_read(struct uxrCustomTransport* transport, uint8_t* buf, size_t len, int ti
  81:Core/Src/freertos.c **** 
  82:Core/Src/freertos.c **** void * microros_allocate(size_t size, void * state);
  83:Core/Src/freertos.c **** void microros_deallocate(void * pointer, void * state);
  84:Core/Src/freertos.c **** void * microros_reallocate(void * pointer, size_t size, void * state);
  85:Core/Src/freertos.c **** void * microros_zero_allocate(size_t number_of_elements, size_t size_of_element, void * state);
  86:Core/Src/freertos.c **** /* USER CODE END FunctionPrototypes */
  87:Core/Src/freertos.c **** 
  88:Core/Src/freertos.c **** void StartDefaultTask(void *argument);
  89:Core/Src/freertos.c **** 
  90:Core/Src/freertos.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
  91:Core/Src/freertos.c **** 
  92:Core/Src/freertos.c **** /**
  93:Core/Src/freertos.c ****   * @brief  FreeRTOS initialization
  94:Core/Src/freertos.c ****   * @param  None
  95:Core/Src/freertos.c ****   * @retval None
  96:Core/Src/freertos.c ****   */
  97:Core/Src/freertos.c **** void MX_FREERTOS_Init(void) {
  98:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
  99:Core/Src/freertos.c **** 
 100:Core/Src/freertos.c ****   /* USER CODE END Init */
 101:Core/Src/freertos.c **** 
 102:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 103:Core/Src/freertos.c ****   /* add mutexes, ... */
 104:Core/Src/freertos.c ****   /* USER CODE END RTOS_MUTEX */
 105:Core/Src/freertos.c **** 
 106:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 107:Core/Src/freertos.c ****   /* add semaphores, ... */
 108:Core/Src/freertos.c ****   /* USER CODE END RTOS_SEMAPHORES */
 109:Core/Src/freertos.c **** 
 110:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 111:Core/Src/freertos.c ****   /* start timers, add new ones, ... */
 112:Core/Src/freertos.c ****   /* USER CODE END RTOS_TIMERS */
 113:Core/Src/freertos.c **** 
 114:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 115:Core/Src/freertos.c ****   /* add queues, ... */
 116:Core/Src/freertos.c ****   /* USER CODE END RTOS_QUEUES */
 117:Core/Src/freertos.c **** 
 118:Core/Src/freertos.c ****   /* Create the thread(s) */
 119:Core/Src/freertos.c ****   /* creation of defaultTask */
 120:Core/Src/freertos.c ****   defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 121:Core/Src/freertos.c **** 
 122:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
ARM GAS  /tmp/ccDOSTOF.s 			page 4


 123:Core/Src/freertos.c ****   /* add threads, ... */
 124:Core/Src/freertos.c ****   /* USER CODE END RTOS_THREADS */
 125:Core/Src/freertos.c **** 
 126:Core/Src/freertos.c ****   /* USER CODE BEGIN RTOS_EVENTS */
 127:Core/Src/freertos.c ****   /* add events, ... */
 128:Core/Src/freertos.c ****   /* USER CODE END RTOS_EVENTS */
 129:Core/Src/freertos.c **** 
 130:Core/Src/freertos.c **** }
 131:Core/Src/freertos.c **** 
 132:Core/Src/freertos.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 133:Core/Src/freertos.c **** /**
 134:Core/Src/freertos.c ****   * @brief  Function implementing the defaultTask thread.
 135:Core/Src/freertos.c ****   * @param  argument: Not used
 136:Core/Src/freertos.c ****   * @retval None
 137:Core/Src/freertos.c ****   */
 138:Core/Src/freertos.c **** /* USER CODE END Header_StartDefaultTask */
 139:Core/Src/freertos.c **** void StartDefaultTask(void *argument)
 140:Core/Src/freertos.c **** {
  41              		.loc 1 140 1 view -0
  42              		.cfi_startproc
  43              		@ args = 0, pretend = 0, frame = 136
  44              		@ frame_needed = 0, uses_anonymous_args = 0
  45              		.loc 1 140 1 is_stmt 0 view .LVU1
  46 0000 00B5     		push	{lr}
  47              	.LCFI0:
  48              		.cfi_def_cfa_offset 4
  49              		.cfi_offset 14, -4
  50 0002 A5B0     		sub	sp, sp, #148
  51              	.LCFI1:
  52              		.cfi_def_cfa_offset 152
 141:Core/Src/freertos.c ****   /* USER CODE BEGIN StartDefaultTask */
 142:Core/Src/freertos.c ****   /* Infinite loop */
 143:Core/Src/freertos.c ****   rmw_uros_set_custom_transport(
  53              		.loc 1 143 3 is_stmt 1 view .LVU2
  54 0004 274B     		ldr	r3, .L6
  55 0006 0193     		str	r3, [sp, #4]
  56 0008 274B     		ldr	r3, .L6+4
  57 000a 0093     		str	r3, [sp]
  58 000c 274B     		ldr	r3, .L6+8
  59 000e 284A     		ldr	r2, .L6+12
  60 0010 2849     		ldr	r1, .L6+16
  61 0012 0120     		movs	r0, #1
  62              	.LVL1:
  63              		.loc 1 143 3 is_stmt 0 view .LVU3
  64 0014 FFF7FEFF 		bl	rmw_uros_set_custom_transport
  65              	.LVL2:
 144:Core/Src/freertos.c ****     true,
 145:Core/Src/freertos.c ****     (void *) &huart2,
 146:Core/Src/freertos.c ****     cubemx_transport_open,
 147:Core/Src/freertos.c ****     cubemx_transport_close,
 148:Core/Src/freertos.c ****     cubemx_transport_write,
 149:Core/Src/freertos.c ****     cubemx_transport_read);
 150:Core/Src/freertos.c **** 
 151:Core/Src/freertos.c ****   rcl_allocator_t freeRTOS_allocator = rcutils_get_zero_initialized_allocator();
  66              		.loc 1 151 3 is_stmt 1 view .LVU4
  67              		.loc 1 151 40 is_stmt 0 view .LVU5
  68 0018 1FA8     		add	r0, sp, #124
ARM GAS  /tmp/ccDOSTOF.s 			page 5


  69 001a FFF7FEFF 		bl	rcutils_get_zero_initialized_allocator
  70              	.LVL3:
 152:Core/Src/freertos.c ****   freeRTOS_allocator.allocate = microros_allocate;
  71              		.loc 1 152 3 is_stmt 1 view .LVU6
  72              		.loc 1 152 31 is_stmt 0 view .LVU7
  73 001e 264B     		ldr	r3, .L6+20
  74 0020 1F93     		str	r3, [sp, #124]
 153:Core/Src/freertos.c ****   freeRTOS_allocator.deallocate = microros_deallocate;
  75              		.loc 1 153 3 is_stmt 1 view .LVU8
  76              		.loc 1 153 33 is_stmt 0 view .LVU9
  77 0022 264B     		ldr	r3, .L6+24
  78 0024 2093     		str	r3, [sp, #128]
 154:Core/Src/freertos.c ****   freeRTOS_allocator.reallocate = microros_reallocate;
  79              		.loc 1 154 3 is_stmt 1 view .LVU10
  80              		.loc 1 154 33 is_stmt 0 view .LVU11
  81 0026 264B     		ldr	r3, .L6+28
  82 0028 2193     		str	r3, [sp, #132]
 155:Core/Src/freertos.c ****   freeRTOS_allocator.zero_allocate =  microros_zero_allocate;
  83              		.loc 1 155 3 is_stmt 1 view .LVU12
  84              		.loc 1 155 36 is_stmt 0 view .LVU13
  85 002a 264B     		ldr	r3, .L6+32
  86 002c 2293     		str	r3, [sp, #136]
 156:Core/Src/freertos.c **** 
 157:Core/Src/freertos.c ****   if (!rcutils_set_default_allocator(&freeRTOS_allocator)) {
  87              		.loc 1 157 3 is_stmt 1 view .LVU14
  88              		.loc 1 157 8 is_stmt 0 view .LVU15
  89 002e 1FA8     		add	r0, sp, #124
  90 0030 FFF7FEFF 		bl	rcutils_set_default_allocator
  91              	.LVL4:
  92              		.loc 1 157 6 view .LVU16
  93 0034 80B3     		cbz	r0, .L5
  94              	.L2:
 158:Core/Src/freertos.c ****       printf("Error on default allocators (line %d)\n", __LINE__); 
 159:Core/Src/freertos.c ****   }
 160:Core/Src/freertos.c **** 
 161:Core/Src/freertos.c ****   // micro-ROS app
 162:Core/Src/freertos.c **** 
 163:Core/Src/freertos.c ****   rcl_publisher_t publisher;
  95              		.loc 1 163 3 is_stmt 1 view .LVU17
 164:Core/Src/freertos.c ****   rclc_support_t support;
  96              		.loc 1 164 3 view .LVU18
 165:Core/Src/freertos.c ****   rcl_allocator_t allocator;
  97              		.loc 1 165 3 view .LVU19
 166:Core/Src/freertos.c ****   rcl_node_t node;
  98              		.loc 1 166 3 view .LVU20
 167:Core/Src/freertos.c **** 
 168:Core/Src/freertos.c ****   std_msgs__msg__Int32 msg;
  99              		.loc 1 168 3 view .LVU21
 169:Core/Src/freertos.c **** 
 170:Core/Src/freertos.c ****   allocator = rcl_get_default_allocator();
 100              		.loc 1 170 3 view .LVU22
 101              		.loc 1 170 15 is_stmt 0 view .LVU23
 102 0036 02A8     		add	r0, sp, #8
 103 0038 FFF7FEFF 		bl	rcutils_get_default_allocator
 104              	.LVL5:
 105 003c 0DF12C0E 		add	lr, sp, #44
 106 0040 0DF1080C 		add	ip, sp, #8
ARM GAS  /tmp/ccDOSTOF.s 			page 6


 107 0044 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 108 0048 AEE80F00 		stmia	lr!, {r0, r1, r2, r3}
 109 004c DCF80030 		ldr	r3, [ip]
 110 0050 CEF80030 		str	r3, [lr]
 171:Core/Src/freertos.c **** 
 172:Core/Src/freertos.c ****   //create init_options
 173:Core/Src/freertos.c ****   rclc_support_init(&support, 0, NULL, &allocator);
 111              		.loc 1 173 3 is_stmt 1 view .LVU24
 112 0054 0BAB     		add	r3, sp, #44
 113 0056 0022     		movs	r2, #0
 114 0058 1146     		mov	r1, r2
 115 005a 10A8     		add	r0, sp, #64
 116 005c FFF7FEFF 		bl	rclc_support_init
 117              	.LVL6:
 174:Core/Src/freertos.c **** 
 175:Core/Src/freertos.c ****   // create node
 176:Core/Src/freertos.c ****   rclc_node_init_default(&node, "cubemx_node", "", &support);
 118              		.loc 1 176 3 view .LVU25
 119 0060 10AB     		add	r3, sp, #64
 120 0062 194A     		ldr	r2, .L6+36
 121 0064 1949     		ldr	r1, .L6+40
 122 0066 09A8     		add	r0, sp, #36
 123 0068 FFF7FEFF 		bl	rclc_node_init_default
 124              	.LVL7:
 177:Core/Src/freertos.c **** 
 178:Core/Src/freertos.c ****   // create publisher
 179:Core/Src/freertos.c ****   rclc_publisher_init_default(
 125              		.loc 1 179 3 view .LVU26
 126 006c FFF7FEFF 		bl	rosidl_typesupport_c__get_message_type_support_handle__std_msgs__msg__Int32
 127              	.LVL8:
 128 0070 0246     		mov	r2, r0
 129 0072 174B     		ldr	r3, .L6+44
 130 0074 09A9     		add	r1, sp, #36
 131 0076 1EA8     		add	r0, sp, #120
 132 0078 FFF7FEFF 		bl	rclc_publisher_init_default
 133              	.LVL9:
 180:Core/Src/freertos.c ****     &publisher,
 181:Core/Src/freertos.c ****     &node,
 182:Core/Src/freertos.c ****     ROSIDL_GET_MSG_TYPE_SUPPORT(std_msgs, msg, Int32),
 183:Core/Src/freertos.c ****     "cubemx_publisher");
 184:Core/Src/freertos.c **** 
 185:Core/Src/freertos.c ****   msg.data = 0;
 134              		.loc 1 185 3 view .LVU27
 135              		.loc 1 185 12 is_stmt 0 view .LVU28
 136 007c 0023     		movs	r3, #0
 137 007e 0893     		str	r3, [sp, #32]
 138              	.L3:
 186:Core/Src/freertos.c ****   for(;;)
 139              		.loc 1 186 3 is_stmt 1 view .LVU29
 140              	.LBB2:
 187:Core/Src/freertos.c ****   {
 188:Core/Src/freertos.c ****     rcl_ret_t ret = rcl_publish(&publisher, &msg, NULL);
 141              		.loc 1 188 5 view .LVU30
 142              		.loc 1 188 21 is_stmt 0 view .LVU31
 143 0080 0022     		movs	r2, #0
 144 0082 08A9     		add	r1, sp, #32
 145 0084 1EA8     		add	r0, sp, #120
ARM GAS  /tmp/ccDOSTOF.s 			page 7


 146 0086 FFF7FEFF 		bl	rcl_publish
 147              	.LVL10:
 189:Core/Src/freertos.c ****     if (ret != RCL_RET_OK)
 148              		.loc 1 189 5 is_stmt 1 view .LVU32
 190:Core/Src/freertos.c ****     {
 191:Core/Src/freertos.c ****       // printf("Error publishing (line %d)\n", __LINE__); 
 192:Core/Src/freertos.c ****     }
 149              		.loc 1 192 5 view .LVU33
 193:Core/Src/freertos.c ****     
 194:Core/Src/freertos.c ****     msg.data++;
 150              		.loc 1 194 5 view .LVU34
 151              		.loc 1 194 8 is_stmt 0 view .LVU35
 152 008a 089B     		ldr	r3, [sp, #32]
 153              		.loc 1 194 13 view .LVU36
 154 008c 0133     		adds	r3, r3, #1
 155 008e 0893     		str	r3, [sp, #32]
 195:Core/Src/freertos.c ****     osDelay(10);
 156              		.loc 1 195 5 is_stmt 1 view .LVU37
 157 0090 0A20     		movs	r0, #10
 158 0092 FFF7FEFF 		bl	osDelay
 159              	.LVL11:
 160              	.LBE2:
 186:Core/Src/freertos.c ****   {
 161              		.loc 1 186 8 view .LVU38
 162 0096 F3E7     		b	.L3
 163              	.L5:
 158:Core/Src/freertos.c ****   }
 164              		.loc 1 158 7 view .LVU39
 165 0098 9E21     		movs	r1, #158
 166 009a 0E48     		ldr	r0, .L6+48
 167 009c FFF7FEFF 		bl	printf
 168              	.LVL12:
 169 00a0 C9E7     		b	.L2
 170              	.L7:
 171 00a2 00BF     		.align	2
 172              	.L6:
 173 00a4 00000000 		.word	cubemx_transport_read
 174 00a8 00000000 		.word	cubemx_transport_write
 175 00ac 00000000 		.word	cubemx_transport_close
 176 00b0 00000000 		.word	cubemx_transport_open
 177 00b4 00000000 		.word	huart2
 178 00b8 00000000 		.word	microros_allocate
 179 00bc 00000000 		.word	microros_deallocate
 180 00c0 00000000 		.word	microros_reallocate
 181 00c4 00000000 		.word	microros_zero_allocate
 182 00c8 28000000 		.word	.LC1
 183 00cc 2C000000 		.word	.LC2
 184 00d0 38000000 		.word	.LC3
 185 00d4 00000000 		.word	.LC0
 186              		.cfi_endproc
 187              	.LFE74:
 189              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
 190              		.align	1
 191              		.global	MX_FREERTOS_Init
 192              		.syntax unified
 193              		.thumb
 194              		.thumb_func
ARM GAS  /tmp/ccDOSTOF.s 			page 8


 195              		.fpu softvfp
 197              	MX_FREERTOS_Init:
 198              	.LFB73:
  97:Core/Src/freertos.c ****   /* USER CODE BEGIN Init */
 199              		.loc 1 97 29 view -0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 0
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203 0000 08B5     		push	{r3, lr}
 204              	.LCFI2:
 205              		.cfi_def_cfa_offset 8
 206              		.cfi_offset 3, -8
 207              		.cfi_offset 14, -4
 120:Core/Src/freertos.c **** 
 208              		.loc 1 120 3 view .LVU41
 120:Core/Src/freertos.c **** 
 209              		.loc 1 120 23 is_stmt 0 view .LVU42
 210 0002 044A     		ldr	r2, .L10
 211 0004 0021     		movs	r1, #0
 212 0006 0448     		ldr	r0, .L10+4
 213 0008 FFF7FEFF 		bl	osThreadNew
 214              	.LVL13:
 120:Core/Src/freertos.c **** 
 215              		.loc 1 120 21 view .LVU43
 216 000c 034B     		ldr	r3, .L10+8
 217 000e 1860     		str	r0, [r3]
 130:Core/Src/freertos.c **** 
 218              		.loc 1 130 1 view .LVU44
 219 0010 08BD     		pop	{r3, pc}
 220              	.L11:
 221 0012 00BF     		.align	2
 222              	.L10:
 223 0014 00000000 		.word	.LANCHOR0
 224 0018 00000000 		.word	StartDefaultTask
 225 001c 00000000 		.word	.LANCHOR1
 226              		.cfi_endproc
 227              	.LFE73:
 229              		.global	defaultTask_attributes
 230              		.section	.rodata.str1.4,"aMS",%progbits,1
 231              		.align	2
 232              	.LC4:
 233 0000 64656661 		.ascii	"defaultTask\000"
 233      756C7454 
 233      61736B00 
 234              		.global	defaultTaskControlBlock
 235              		.global	defaultTaskBuffer
 236              		.global	defaultTaskHandle
 237              		.section	.bss.defaultTaskBuffer,"aw",%nobits
 238              		.align	2
 241              	defaultTaskBuffer:
 242 0000 00000000 		.space	2000
 242      00000000 
 242      00000000 
 242      00000000 
 242      00000000 
 243              		.section	.bss.defaultTaskControlBlock,"aw",%nobits
 244              		.align	2
ARM GAS  /tmp/ccDOSTOF.s 			page 9


 247              	defaultTaskControlBlock:
 248 0000 00000000 		.space	92
 248      00000000 
 248      00000000 
 248      00000000 
 248      00000000 
 249              		.section	.bss.defaultTaskHandle,"aw",%nobits
 250              		.align	2
 251              		.set	.LANCHOR1,. + 0
 254              	defaultTaskHandle:
 255 0000 00000000 		.space	4
 256              		.section	.rodata.defaultTask_attributes,"a"
 257              		.align	2
 258              		.set	.LANCHOR0,. + 0
 261              	defaultTask_attributes:
 262 0000 00000000 		.word	.LC4
 263 0004 00000000 		.space	4
 264 0008 00000000 		.word	defaultTaskControlBlock
 265 000c 5C000000 		.word	92
 266 0010 00000000 		.word	defaultTaskBuffer
 267 0014 D0070000 		.word	2000
 268 0018 18000000 		.word	24
 269 001c 00000000 		.space	8
 269      00000000 
 270              		.text
 271              	.Letext0:
 272              		.file 2 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 273              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 274              		.file 4 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3/portmacro.h"
 275              		.file 5 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 276              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 277              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 278              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 279              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 280              		.file 10 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 281              		.file 11 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcutils
 282              		.file 12 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl/all
 283              		.file 13 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rmw/ret
 284              		.file 14 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcutils
 285              		.file 15 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rmw/typ
 286              		.file 16 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl/typ
 287              		.file 17 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl/ini
 288              		.file 18 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl/con
 289              		.file 19 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl/nod
 290              		.file 20 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl/pub
 291              		.file 21 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rcl/tim
 292              		.file 22 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rmw/qos
 293              		.file 23 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rclc/ty
 294              		.file 24 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/std_msg
 295              		.file 25 "Core/Inc/usart.h"
 296              		.file 26 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rmw_mic
 297              		.file 27 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rclc/in
 298              		.file 28 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rclc/no
 299              		.file 29 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/std_msg
 300              		.file 30 "micro_ros_stm32cubemx_utils/microros_static_library/libmicroros/microros_include/rclc/pu
 301              		.file 31 "/usr/include/newlib/stdio.h"
ARM GAS  /tmp/ccDOSTOF.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 freertos.c
     /tmp/ccDOSTOF.s:16     .rodata.StartDefaultTask.str1.4:0000000000000000 $d
     /tmp/ccDOSTOF.s:29     .text.StartDefaultTask:0000000000000000 $t
     /tmp/ccDOSTOF.s:37     .text.StartDefaultTask:0000000000000000 StartDefaultTask
     /tmp/ccDOSTOF.s:173    .text.StartDefaultTask:00000000000000a4 $d
     /tmp/ccDOSTOF.s:190    .text.MX_FREERTOS_Init:0000000000000000 $t
     /tmp/ccDOSTOF.s:197    .text.MX_FREERTOS_Init:0000000000000000 MX_FREERTOS_Init
     /tmp/ccDOSTOF.s:223    .text.MX_FREERTOS_Init:0000000000000014 $d
     /tmp/ccDOSTOF.s:261    .rodata.defaultTask_attributes:0000000000000000 defaultTask_attributes
     /tmp/ccDOSTOF.s:231    .rodata.str1.4:0000000000000000 $d
     /tmp/ccDOSTOF.s:247    .bss.defaultTaskControlBlock:0000000000000000 defaultTaskControlBlock
     /tmp/ccDOSTOF.s:241    .bss.defaultTaskBuffer:0000000000000000 defaultTaskBuffer
     /tmp/ccDOSTOF.s:254    .bss.defaultTaskHandle:0000000000000000 defaultTaskHandle
     /tmp/ccDOSTOF.s:238    .bss.defaultTaskBuffer:0000000000000000 $d
     /tmp/ccDOSTOF.s:244    .bss.defaultTaskControlBlock:0000000000000000 $d
     /tmp/ccDOSTOF.s:250    .bss.defaultTaskHandle:0000000000000000 $d
     /tmp/ccDOSTOF.s:257    .rodata.defaultTask_attributes:0000000000000000 $d

UNDEFINED SYMBOLS
rmw_uros_set_custom_transport
rcutils_get_zero_initialized_allocator
rcutils_set_default_allocator
rcutils_get_default_allocator
rclc_support_init
rclc_node_init_default
rosidl_typesupport_c__get_message_type_support_handle__std_msgs__msg__Int32
rclc_publisher_init_default
rcl_publish
osDelay
printf
cubemx_transport_read
cubemx_transport_write
cubemx_transport_close
cubemx_transport_open
huart2
microros_allocate
microros_deallocate
microros_reallocate
microros_zero_allocate
osThreadNew
